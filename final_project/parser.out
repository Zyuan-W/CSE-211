Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DATA_TYPE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> IGNORE_CONTENT
Rule 4     statement -> INT VAR LPAREN params RPAREN SEMICOLON
Rule 5     statement -> VOID VAR LPAREN params RPAREN SEMICOLON
Rule 6     statement -> INT VAR LPAREN params RPAREN
Rule 7     statement -> VOID VAR LPAREN params RPAREN
Rule 8     params -> INT VAR
Rule 9     params -> params COMMA INT VAR
Rule 10    params -> INT STAR VAR
Rule 11    params -> params COMMA INT STAR VAR
Rule 12    params -> <empty>
Rule 13    args -> VAR
Rule 14    args -> args COMMA VAR
Rule 15    args -> NUM
Rule 16    args -> args COMMA NUM
Rule 17    args -> <empty>
Rule 18    statement -> f_statement
Rule 19    f_statement -> VAR LPAREN args RPAREN SEMICOLON
Rule 20    f_statement -> VAR EQUALS f_statement
Rule 21    statement -> INT VAR SEMICOLON
Rule 22    statement -> INT VAR EQUALS factor SEMICOLON
Rule 23    statement -> INT VAR EQUALS expr SEMICOLON
Rule 24    statement -> VAR EQUALS factor SEMICOLON
Rule 25    statement -> VAR EQUALS expr SEMICOLON
Rule 26    statement -> array EQUALS factor SEMICOLON
Rule 27    statement -> array EQUALS expr SEMICOLON
Rule 28    statement -> IF LPAREN condition RPAREN
Rule 29    statement -> ELSE
Rule 30    statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN
Rule 31    statement -> WHILE LPAREN condition RPAREN
Rule 32    condition -> factor GREATER factor
Rule 33    condition -> factor LESS factor
Rule 34    condition -> factor EQUALS EQUALS factor
Rule 35    condition -> factor GREATER EQUALS factor
Rule 36    condition -> factor LESS EQUALS factor
Rule 37    statement -> RETURN expr SEMICOLON
Rule 38    statement -> factor PLUS EQUALS factor SEMICOLON
Rule 39    statement -> factor MINUS EQUALS factor SEMICOLON
Rule 40    statement -> factor PLUS PLUS SEMICOLON
Rule 41    statement -> factor MINUS MINUS SEMICOLON
Rule 42    for_update -> VAR PLUS PLUS
Rule 43    for_update -> VAR MINUS MINUS
Rule 44    statement -> LB
Rule 45    statement -> RB
Rule 46    expr -> expr PLUS term
Rule 47    expr -> expr MINUS term
Rule 48    expr -> term
Rule 49    term -> term STAR factor
Rule 50    term -> term DIV factor
Rule 51    term -> factor
Rule 52    factor -> NUM
Rule 53    factor -> VAR
Rule 54    factor -> array
Rule 55    array -> VAR LBRACKET expr RBRACKET
Rule 56    statement -> INT STAR VAR SEMICOLON
Rule 57    statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
Rule 58    p_content -> LESS LESS VAR p_content
Rule 59    p_content -> LESS LESS SENTENCE p_content
Rule 60    p_content -> LESS LESS ENDL
Rule 61    p_content -> <empty>
Rule 62    statement -> COUT p_content SEMICOLON

Terminals, with rules where they appear

COMMA                : 9 11 14 16
COUT                 : 62
DATA_TYPE            : 
DIV                  : 50
ELSE                 : 29
ENDL                 : 60
EQUALS               : 20 22 23 24 25 26 27 30 34 34 35 36 38 39 57
FOR                  : 30
GREATER              : 32 35
IF                   : 28
IGNORE_CONTENT       : 3
INT                  : 4 6 8 9 10 11 21 22 23 30 56 57 57
LB                   : 44
LBRACKET             : 55
LESS                 : 33 36 58 58 59 59 60 60
LPAREN               : 4 5 6 7 19 28 30 31 57 57 57
MALLOC               : 57
MINUS                : 39 41 41 43 43 47
NUM                  : 15 16 52
PLUS                 : 38 40 40 42 42 46
RB                   : 45
RBRACKET             : 55
RETURN               : 37
RPAREN               : 4 5 6 7 19 28 30 31 57 57 57
SEMICOLON            : 4 5 19 21 22 23 24 25 26 27 30 30 37 38 39 40 41 56 57 62
SENTENCE             : 59
SIZEOF               : 57
STAR                 : 10 11 49 56 57 57
VAR                  : 4 5 6 7 8 9 10 11 13 14 19 20 21 22 23 24 25 30 42 43 53 55 56 57 58
VOID                 : 5 7
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

args                 : 14 16 19
array                : 26 27 54
condition            : 28 30 31
expr                 : 23 25 27 37 46 47 55
f_statement          : 18 20
factor               : 22 24 26 30 32 32 33 33 34 34 35 35 36 36 38 38 39 39 40 41 49 50 51 57
for_update           : 30
p_content            : 58 59 62
params               : 4 5 6 7 9 11
program              : 2 0
statement            : 1 2
term                 : 46 47 48 49 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . IGNORE_CONTENT
    (4) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (5) statement -> . VOID VAR LPAREN params RPAREN SEMICOLON
    (6) statement -> . INT VAR LPAREN params RPAREN
    (7) statement -> . VOID VAR LPAREN params RPAREN
    (18) statement -> . f_statement
    (21) statement -> . INT VAR SEMICOLON
    (22) statement -> . INT VAR EQUALS factor SEMICOLON
    (23) statement -> . INT VAR EQUALS expr SEMICOLON
    (24) statement -> . VAR EQUALS factor SEMICOLON
    (25) statement -> . VAR EQUALS expr SEMICOLON
    (26) statement -> . array EQUALS factor SEMICOLON
    (27) statement -> . array EQUALS expr SEMICOLON
    (28) statement -> . IF LPAREN condition RPAREN
    (29) statement -> . ELSE
    (30) statement -> . FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN
    (31) statement -> . WHILE LPAREN condition RPAREN
    (37) statement -> . RETURN expr SEMICOLON
    (38) statement -> . factor PLUS EQUALS factor SEMICOLON
    (39) statement -> . factor MINUS EQUALS factor SEMICOLON
    (40) statement -> . factor PLUS PLUS SEMICOLON
    (41) statement -> . factor MINUS MINUS SEMICOLON
    (44) statement -> . LB
    (45) statement -> . RB
    (56) statement -> . INT STAR VAR SEMICOLON
    (57) statement -> . VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (62) statement -> . COUT p_content SEMICOLON
    (19) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (20) f_statement -> . VAR EQUALS f_statement
    (55) array -> . VAR LBRACKET expr RBRACKET
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array

    IGNORE_CONTENT  shift and go to state 3
    INT             shift and go to state 4
    VOID            shift and go to state 6
    VAR             shift and go to state 5
    IF              shift and go to state 10
    ELSE            shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    LB              shift and go to state 15
    RB              shift and go to state 16
    COUT            shift and go to state 17
    NUM             shift and go to state 18

    program                        shift and go to state 1
    statement                      shift and go to state 2
    f_statement                    shift and go to state 7
    factor                         shift and go to state 8
    array                          shift and go to state 9

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . IGNORE_CONTENT
    (4) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (5) statement -> . VOID VAR LPAREN params RPAREN SEMICOLON
    (6) statement -> . INT VAR LPAREN params RPAREN
    (7) statement -> . VOID VAR LPAREN params RPAREN
    (18) statement -> . f_statement
    (21) statement -> . INT VAR SEMICOLON
    (22) statement -> . INT VAR EQUALS factor SEMICOLON
    (23) statement -> . INT VAR EQUALS expr SEMICOLON
    (24) statement -> . VAR EQUALS factor SEMICOLON
    (25) statement -> . VAR EQUALS expr SEMICOLON
    (26) statement -> . array EQUALS factor SEMICOLON
    (27) statement -> . array EQUALS expr SEMICOLON
    (28) statement -> . IF LPAREN condition RPAREN
    (29) statement -> . ELSE
    (30) statement -> . FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN
    (31) statement -> . WHILE LPAREN condition RPAREN
    (37) statement -> . RETURN expr SEMICOLON
    (38) statement -> . factor PLUS EQUALS factor SEMICOLON
    (39) statement -> . factor MINUS EQUALS factor SEMICOLON
    (40) statement -> . factor PLUS PLUS SEMICOLON
    (41) statement -> . factor MINUS MINUS SEMICOLON
    (44) statement -> . LB
    (45) statement -> . RB
    (56) statement -> . INT STAR VAR SEMICOLON
    (57) statement -> . VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (62) statement -> . COUT p_content SEMICOLON
    (19) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (20) f_statement -> . VAR EQUALS f_statement
    (55) array -> . VAR LBRACKET expr RBRACKET
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array

    IGNORE_CONTENT  shift and go to state 3
    INT             shift and go to state 4
    VOID            shift and go to state 6
    VAR             shift and go to state 5
    IF              shift and go to state 10
    ELSE            shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    LB              shift and go to state 15
    RB              shift and go to state 16
    COUT            shift and go to state 17
    NUM             shift and go to state 18

    statement                      shift and go to state 19
    f_statement                    shift and go to state 7
    factor                         shift and go to state 8
    array                          shift and go to state 9

state 2

    (1) program -> statement .

    IGNORE_CONTENT  reduce using rule 1 (program -> statement .)
    INT             reduce using rule 1 (program -> statement .)
    VOID            reduce using rule 1 (program -> statement .)
    VAR             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    ELSE            reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    LB              reduce using rule 1 (program -> statement .)
    RB              reduce using rule 1 (program -> statement .)
    COUT            reduce using rule 1 (program -> statement .)
    NUM             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> IGNORE_CONTENT .

    IGNORE_CONTENT  reduce using rule 3 (statement -> IGNORE_CONTENT .)
    INT             reduce using rule 3 (statement -> IGNORE_CONTENT .)
    VOID            reduce using rule 3 (statement -> IGNORE_CONTENT .)
    VAR             reduce using rule 3 (statement -> IGNORE_CONTENT .)
    IF              reduce using rule 3 (statement -> IGNORE_CONTENT .)
    ELSE            reduce using rule 3 (statement -> IGNORE_CONTENT .)
    FOR             reduce using rule 3 (statement -> IGNORE_CONTENT .)
    WHILE           reduce using rule 3 (statement -> IGNORE_CONTENT .)
    RETURN          reduce using rule 3 (statement -> IGNORE_CONTENT .)
    LB              reduce using rule 3 (statement -> IGNORE_CONTENT .)
    RB              reduce using rule 3 (statement -> IGNORE_CONTENT .)
    COUT            reduce using rule 3 (statement -> IGNORE_CONTENT .)
    NUM             reduce using rule 3 (statement -> IGNORE_CONTENT .)
    $end            reduce using rule 3 (statement -> IGNORE_CONTENT .)


state 4

    (4) statement -> INT . VAR LPAREN params RPAREN SEMICOLON
    (6) statement -> INT . VAR LPAREN params RPAREN
    (21) statement -> INT . VAR SEMICOLON
    (22) statement -> INT . VAR EQUALS factor SEMICOLON
    (23) statement -> INT . VAR EQUALS expr SEMICOLON
    (56) statement -> INT . STAR VAR SEMICOLON

    VAR             shift and go to state 20
    STAR            shift and go to state 21


state 5

    (24) statement -> VAR . EQUALS factor SEMICOLON
    (25) statement -> VAR . EQUALS expr SEMICOLON
    (57) statement -> VAR . EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (19) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (20) f_statement -> VAR . EQUALS f_statement
    (55) array -> VAR . LBRACKET expr RBRACKET
    (53) factor -> VAR .

    EQUALS          shift and go to state 22
    LPAREN          shift and go to state 23
    LBRACKET        shift and go to state 24
    PLUS            reduce using rule 53 (factor -> VAR .)
    MINUS           reduce using rule 53 (factor -> VAR .)


state 6

    (5) statement -> VOID . VAR LPAREN params RPAREN SEMICOLON
    (7) statement -> VOID . VAR LPAREN params RPAREN

    VAR             shift and go to state 25


state 7

    (18) statement -> f_statement .

    IGNORE_CONTENT  reduce using rule 18 (statement -> f_statement .)
    INT             reduce using rule 18 (statement -> f_statement .)
    VOID            reduce using rule 18 (statement -> f_statement .)
    VAR             reduce using rule 18 (statement -> f_statement .)
    IF              reduce using rule 18 (statement -> f_statement .)
    ELSE            reduce using rule 18 (statement -> f_statement .)
    FOR             reduce using rule 18 (statement -> f_statement .)
    WHILE           reduce using rule 18 (statement -> f_statement .)
    RETURN          reduce using rule 18 (statement -> f_statement .)
    LB              reduce using rule 18 (statement -> f_statement .)
    RB              reduce using rule 18 (statement -> f_statement .)
    COUT            reduce using rule 18 (statement -> f_statement .)
    NUM             reduce using rule 18 (statement -> f_statement .)
    $end            reduce using rule 18 (statement -> f_statement .)


state 8

    (38) statement -> factor . PLUS EQUALS factor SEMICOLON
    (39) statement -> factor . MINUS EQUALS factor SEMICOLON
    (40) statement -> factor . PLUS PLUS SEMICOLON
    (41) statement -> factor . MINUS MINUS SEMICOLON

    PLUS            shift and go to state 26
    MINUS           shift and go to state 27


state 9

    (26) statement -> array . EQUALS factor SEMICOLON
    (27) statement -> array . EQUALS expr SEMICOLON
    (54) factor -> array .

    EQUALS          shift and go to state 28
    PLUS            reduce using rule 54 (factor -> array .)
    MINUS           reduce using rule 54 (factor -> array .)


state 10

    (28) statement -> IF . LPAREN condition RPAREN

    LPAREN          shift and go to state 29


state 11

    (29) statement -> ELSE .

    IGNORE_CONTENT  reduce using rule 29 (statement -> ELSE .)
    INT             reduce using rule 29 (statement -> ELSE .)
    VOID            reduce using rule 29 (statement -> ELSE .)
    VAR             reduce using rule 29 (statement -> ELSE .)
    IF              reduce using rule 29 (statement -> ELSE .)
    ELSE            reduce using rule 29 (statement -> ELSE .)
    FOR             reduce using rule 29 (statement -> ELSE .)
    WHILE           reduce using rule 29 (statement -> ELSE .)
    RETURN          reduce using rule 29 (statement -> ELSE .)
    LB              reduce using rule 29 (statement -> ELSE .)
    RB              reduce using rule 29 (statement -> ELSE .)
    COUT            reduce using rule 29 (statement -> ELSE .)
    NUM             reduce using rule 29 (statement -> ELSE .)
    $end            reduce using rule 29 (statement -> ELSE .)


state 12

    (30) statement -> FOR . LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN

    LPAREN          shift and go to state 30


state 13

    (31) statement -> WHILE . LPAREN condition RPAREN

    LPAREN          shift and go to state 31


state 14

    (37) statement -> RETURN . expr SEMICOLON
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    expr                           shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34
    array                          shift and go to state 36

state 15

    (44) statement -> LB .

    IGNORE_CONTENT  reduce using rule 44 (statement -> LB .)
    INT             reduce using rule 44 (statement -> LB .)
    VOID            reduce using rule 44 (statement -> LB .)
    VAR             reduce using rule 44 (statement -> LB .)
    IF              reduce using rule 44 (statement -> LB .)
    ELSE            reduce using rule 44 (statement -> LB .)
    FOR             reduce using rule 44 (statement -> LB .)
    WHILE           reduce using rule 44 (statement -> LB .)
    RETURN          reduce using rule 44 (statement -> LB .)
    LB              reduce using rule 44 (statement -> LB .)
    RB              reduce using rule 44 (statement -> LB .)
    COUT            reduce using rule 44 (statement -> LB .)
    NUM             reduce using rule 44 (statement -> LB .)
    $end            reduce using rule 44 (statement -> LB .)


state 16

    (45) statement -> RB .

    IGNORE_CONTENT  reduce using rule 45 (statement -> RB .)
    INT             reduce using rule 45 (statement -> RB .)
    VOID            reduce using rule 45 (statement -> RB .)
    VAR             reduce using rule 45 (statement -> RB .)
    IF              reduce using rule 45 (statement -> RB .)
    ELSE            reduce using rule 45 (statement -> RB .)
    FOR             reduce using rule 45 (statement -> RB .)
    WHILE           reduce using rule 45 (statement -> RB .)
    RETURN          reduce using rule 45 (statement -> RB .)
    LB              reduce using rule 45 (statement -> RB .)
    RB              reduce using rule 45 (statement -> RB .)
    COUT            reduce using rule 45 (statement -> RB .)
    NUM             reduce using rule 45 (statement -> RB .)
    $end            reduce using rule 45 (statement -> RB .)


state 17

    (62) statement -> COUT . p_content SEMICOLON
    (58) p_content -> . LESS LESS VAR p_content
    (59) p_content -> . LESS LESS SENTENCE p_content
    (60) p_content -> . LESS LESS ENDL
    (61) p_content -> .

    LESS            shift and go to state 38
    SEMICOLON       reduce using rule 61 (p_content -> .)

    p_content                      shift and go to state 37

state 18

    (52) factor -> NUM .

    PLUS            reduce using rule 52 (factor -> NUM .)
    MINUS           reduce using rule 52 (factor -> NUM .)
    STAR            reduce using rule 52 (factor -> NUM .)
    DIV             reduce using rule 52 (factor -> NUM .)
    SEMICOLON       reduce using rule 52 (factor -> NUM .)
    RBRACKET        reduce using rule 52 (factor -> NUM .)
    GREATER         reduce using rule 52 (factor -> NUM .)
    LESS            reduce using rule 52 (factor -> NUM .)
    EQUALS          reduce using rule 52 (factor -> NUM .)
    RPAREN          reduce using rule 52 (factor -> NUM .)


state 19

    (2) program -> program statement .

    IGNORE_CONTENT  reduce using rule 2 (program -> program statement .)
    INT             reduce using rule 2 (program -> program statement .)
    VOID            reduce using rule 2 (program -> program statement .)
    VAR             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    ELSE            reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    LB              reduce using rule 2 (program -> program statement .)
    RB              reduce using rule 2 (program -> program statement .)
    COUT            reduce using rule 2 (program -> program statement .)
    NUM             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 20

    (4) statement -> INT VAR . LPAREN params RPAREN SEMICOLON
    (6) statement -> INT VAR . LPAREN params RPAREN
    (21) statement -> INT VAR . SEMICOLON
    (22) statement -> INT VAR . EQUALS factor SEMICOLON
    (23) statement -> INT VAR . EQUALS expr SEMICOLON

    LPAREN          shift and go to state 39
    SEMICOLON       shift and go to state 40
    EQUALS          shift and go to state 41


state 21

    (56) statement -> INT STAR . VAR SEMICOLON

    VAR             shift and go to state 42


state 22

    (24) statement -> VAR EQUALS . factor SEMICOLON
    (25) statement -> VAR EQUALS . expr SEMICOLON
    (57) statement -> VAR EQUALS . LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (20) f_statement -> VAR EQUALS . f_statement
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (19) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (20) f_statement -> . VAR EQUALS f_statement
    (55) array -> . VAR LBRACKET expr RBRACKET
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor

    LPAREN          shift and go to state 46
    NUM             shift and go to state 18
    VAR             shift and go to state 43

    factor                         shift and go to state 44
    expr                           shift and go to state 45
    f_statement                    shift and go to state 47
    array                          shift and go to state 36
    term                           shift and go to state 33

state 23

    (19) f_statement -> VAR LPAREN . args RPAREN SEMICOLON
    (13) args -> . VAR
    (14) args -> . args COMMA VAR
    (15) args -> . NUM
    (16) args -> . args COMMA NUM
    (17) args -> .

    VAR             shift and go to state 48
    NUM             shift and go to state 50
    RPAREN          reduce using rule 17 (args -> .)
    COMMA           reduce using rule 17 (args -> .)

    args                           shift and go to state 49

state 24

    (55) array -> VAR LBRACKET . expr RBRACKET
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    expr                           shift and go to state 51
    term                           shift and go to state 33
    factor                         shift and go to state 34
    array                          shift and go to state 36

state 25

    (5) statement -> VOID VAR . LPAREN params RPAREN SEMICOLON
    (7) statement -> VOID VAR . LPAREN params RPAREN

    LPAREN          shift and go to state 52


state 26

    (38) statement -> factor PLUS . EQUALS factor SEMICOLON
    (40) statement -> factor PLUS . PLUS SEMICOLON

    EQUALS          shift and go to state 54
    PLUS            shift and go to state 53


state 27

    (39) statement -> factor MINUS . EQUALS factor SEMICOLON
    (41) statement -> factor MINUS . MINUS SEMICOLON

    EQUALS          shift and go to state 56
    MINUS           shift and go to state 55


state 28

    (26) statement -> array EQUALS . factor SEMICOLON
    (27) statement -> array EQUALS . expr SEMICOLON
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (55) array -> . VAR LBRACKET expr RBRACKET
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    array                          shift and go to state 36
    factor                         shift and go to state 57
    expr                           shift and go to state 58
    term                           shift and go to state 33

state 29

    (28) statement -> IF LPAREN . condition RPAREN
    (32) condition -> . factor GREATER factor
    (33) condition -> . factor LESS factor
    (34) condition -> . factor EQUALS EQUALS factor
    (35) condition -> . factor GREATER EQUALS factor
    (36) condition -> . factor LESS EQUALS factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    condition                      shift and go to state 59
    factor                         shift and go to state 60
    array                          shift and go to state 36

state 30

    (30) statement -> FOR LPAREN . INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN

    INT             shift and go to state 61


state 31

    (31) statement -> WHILE LPAREN . condition RPAREN
    (32) condition -> . factor GREATER factor
    (33) condition -> . factor LESS factor
    (34) condition -> . factor EQUALS EQUALS factor
    (35) condition -> . factor GREATER EQUALS factor
    (36) condition -> . factor LESS EQUALS factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    condition                      shift and go to state 62
    factor                         shift and go to state 60
    array                          shift and go to state 36

state 32

    (37) statement -> RETURN expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 63
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 33

    (48) expr -> term .
    (49) term -> term . STAR factor
    (50) term -> term . DIV factor

    SEMICOLON       reduce using rule 48 (expr -> term .)
    PLUS            reduce using rule 48 (expr -> term .)
    MINUS           reduce using rule 48 (expr -> term .)
    RBRACKET        reduce using rule 48 (expr -> term .)
    STAR            shift and go to state 66
    DIV             shift and go to state 67


state 34

    (51) term -> factor .

    STAR            reduce using rule 51 (term -> factor .)
    DIV             reduce using rule 51 (term -> factor .)
    SEMICOLON       reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)
    RBRACKET        reduce using rule 51 (term -> factor .)


state 35

    (53) factor -> VAR .
    (55) array -> VAR . LBRACKET expr RBRACKET

    STAR            reduce using rule 53 (factor -> VAR .)
    DIV             reduce using rule 53 (factor -> VAR .)
    SEMICOLON       reduce using rule 53 (factor -> VAR .)
    PLUS            reduce using rule 53 (factor -> VAR .)
    MINUS           reduce using rule 53 (factor -> VAR .)
    RBRACKET        reduce using rule 53 (factor -> VAR .)
    GREATER         reduce using rule 53 (factor -> VAR .)
    LESS            reduce using rule 53 (factor -> VAR .)
    EQUALS          reduce using rule 53 (factor -> VAR .)
    RPAREN          reduce using rule 53 (factor -> VAR .)
    LBRACKET        shift and go to state 24


state 36

    (54) factor -> array .

    STAR            reduce using rule 54 (factor -> array .)
    DIV             reduce using rule 54 (factor -> array .)
    SEMICOLON       reduce using rule 54 (factor -> array .)
    PLUS            reduce using rule 54 (factor -> array .)
    MINUS           reduce using rule 54 (factor -> array .)
    RBRACKET        reduce using rule 54 (factor -> array .)
    GREATER         reduce using rule 54 (factor -> array .)
    LESS            reduce using rule 54 (factor -> array .)
    EQUALS          reduce using rule 54 (factor -> array .)
    RPAREN          reduce using rule 54 (factor -> array .)


state 37

    (62) statement -> COUT p_content . SEMICOLON

    SEMICOLON       shift and go to state 68


state 38

    (58) p_content -> LESS . LESS VAR p_content
    (59) p_content -> LESS . LESS SENTENCE p_content
    (60) p_content -> LESS . LESS ENDL

    LESS            shift and go to state 69


state 39

    (4) statement -> INT VAR LPAREN . params RPAREN SEMICOLON
    (6) statement -> INT VAR LPAREN . params RPAREN
    (8) params -> . INT VAR
    (9) params -> . params COMMA INT VAR
    (10) params -> . INT STAR VAR
    (11) params -> . params COMMA INT STAR VAR
    (12) params -> .

    INT             shift and go to state 70
    RPAREN          reduce using rule 12 (params -> .)
    COMMA           reduce using rule 12 (params -> .)

    params                         shift and go to state 71

state 40

    (21) statement -> INT VAR SEMICOLON .

    IGNORE_CONTENT  reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    INT             reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    VOID            reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    VAR             reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    IF              reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    FOR             reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    RETURN          reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    LB              reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    RB              reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    COUT            reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    NUM             reduce using rule 21 (statement -> INT VAR SEMICOLON .)
    $end            reduce using rule 21 (statement -> INT VAR SEMICOLON .)


state 41

    (22) statement -> INT VAR EQUALS . factor SEMICOLON
    (23) statement -> INT VAR EQUALS . expr SEMICOLON
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (55) array -> . VAR LBRACKET expr RBRACKET
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 72
    expr                           shift and go to state 73
    array                          shift and go to state 36
    term                           shift and go to state 33

state 42

    (56) statement -> INT STAR VAR . SEMICOLON

    SEMICOLON       shift and go to state 74


state 43

    (53) factor -> VAR .
    (19) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (20) f_statement -> VAR . EQUALS f_statement
    (55) array -> VAR . LBRACKET expr RBRACKET

    SEMICOLON       reduce using rule 53 (factor -> VAR .)
    STAR            reduce using rule 53 (factor -> VAR .)
    DIV             reduce using rule 53 (factor -> VAR .)
    PLUS            reduce using rule 53 (factor -> VAR .)
    MINUS           reduce using rule 53 (factor -> VAR .)
    LPAREN          shift and go to state 23
    EQUALS          shift and go to state 75
    LBRACKET        shift and go to state 24


state 44

    (24) statement -> VAR EQUALS factor . SEMICOLON
    (51) term -> factor .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 76
    STAR            reduce using rule 51 (term -> factor .)
    DIV             reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)

  ! SEMICOLON       [ reduce using rule 51 (term -> factor .) ]


state 45

    (25) statement -> VAR EQUALS expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 77
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 46

    (57) statement -> VAR EQUALS LPAREN . INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    INT             shift and go to state 78


state 47

    (20) f_statement -> VAR EQUALS f_statement .

    IGNORE_CONTENT  reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    INT             reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    VOID            reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    VAR             reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    IF              reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    ELSE            reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    FOR             reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    WHILE           reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    RETURN          reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    LB              reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    RB              reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    COUT            reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    NUM             reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)
    $end            reduce using rule 20 (f_statement -> VAR EQUALS f_statement .)


state 48

    (13) args -> VAR .

    RPAREN          reduce using rule 13 (args -> VAR .)
    COMMA           reduce using rule 13 (args -> VAR .)


state 49

    (19) f_statement -> VAR LPAREN args . RPAREN SEMICOLON
    (14) args -> args . COMMA VAR
    (16) args -> args . COMMA NUM

    RPAREN          shift and go to state 79
    COMMA           shift and go to state 80


state 50

    (15) args -> NUM .

    RPAREN          reduce using rule 15 (args -> NUM .)
    COMMA           reduce using rule 15 (args -> NUM .)


state 51

    (55) array -> VAR LBRACKET expr . RBRACKET
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    RBRACKET        shift and go to state 81
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 52

    (5) statement -> VOID VAR LPAREN . params RPAREN SEMICOLON
    (7) statement -> VOID VAR LPAREN . params RPAREN
    (8) params -> . INT VAR
    (9) params -> . params COMMA INT VAR
    (10) params -> . INT STAR VAR
    (11) params -> . params COMMA INT STAR VAR
    (12) params -> .

    INT             shift and go to state 70
    RPAREN          reduce using rule 12 (params -> .)
    COMMA           reduce using rule 12 (params -> .)

    params                         shift and go to state 82

state 53

    (40) statement -> factor PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 83


state 54

    (38) statement -> factor PLUS EQUALS . factor SEMICOLON
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 84
    array                          shift and go to state 36

state 55

    (41) statement -> factor MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 85


state 56

    (39) statement -> factor MINUS EQUALS . factor SEMICOLON
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 86
    array                          shift and go to state 36

state 57

    (26) statement -> array EQUALS factor . SEMICOLON
    (51) term -> factor .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 87
    STAR            reduce using rule 51 (term -> factor .)
    DIV             reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)

  ! SEMICOLON       [ reduce using rule 51 (term -> factor .) ]


state 58

    (27) statement -> array EQUALS expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 88
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 59

    (28) statement -> IF LPAREN condition . RPAREN

    RPAREN          shift and go to state 89


state 60

    (32) condition -> factor . GREATER factor
    (33) condition -> factor . LESS factor
    (34) condition -> factor . EQUALS EQUALS factor
    (35) condition -> factor . GREATER EQUALS factor
    (36) condition -> factor . LESS EQUALS factor

    GREATER         shift and go to state 90
    LESS            shift and go to state 91
    EQUALS          shift and go to state 92


state 61

    (30) statement -> FOR LPAREN INT . VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN

    VAR             shift and go to state 93


state 62

    (31) statement -> WHILE LPAREN condition . RPAREN

    RPAREN          shift and go to state 94


state 63

    (37) statement -> RETURN expr SEMICOLON .

    IGNORE_CONTENT  reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    INT             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    VOID            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    VAR             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    IF              reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    LB              reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    RB              reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    COUT            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    NUM             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    $end            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)


state 64

    (46) expr -> expr PLUS . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    term                           shift and go to state 95
    factor                         shift and go to state 34
    array                          shift and go to state 36

state 65

    (47) expr -> expr MINUS . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    term                           shift and go to state 96
    factor                         shift and go to state 34
    array                          shift and go to state 36

state 66

    (49) term -> term STAR . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 97
    array                          shift and go to state 36

state 67

    (50) term -> term DIV . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 98
    array                          shift and go to state 36

state 68

    (62) statement -> COUT p_content SEMICOLON .

    IGNORE_CONTENT  reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    INT             reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    VOID            reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    VAR             reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    IF              reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    ELSE            reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    FOR             reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    WHILE           reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    RETURN          reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    LB              reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    RB              reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    COUT            reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    NUM             reduce using rule 62 (statement -> COUT p_content SEMICOLON .)
    $end            reduce using rule 62 (statement -> COUT p_content SEMICOLON .)


state 69

    (58) p_content -> LESS LESS . VAR p_content
    (59) p_content -> LESS LESS . SENTENCE p_content
    (60) p_content -> LESS LESS . ENDL

    VAR             shift and go to state 99
    SENTENCE        shift and go to state 100
    ENDL            shift and go to state 101


state 70

    (8) params -> INT . VAR
    (10) params -> INT . STAR VAR

    VAR             shift and go to state 102
    STAR            shift and go to state 103


state 71

    (4) statement -> INT VAR LPAREN params . RPAREN SEMICOLON
    (6) statement -> INT VAR LPAREN params . RPAREN
    (9) params -> params . COMMA INT VAR
    (11) params -> params . COMMA INT STAR VAR

    RPAREN          shift and go to state 104
    COMMA           shift and go to state 105


state 72

    (22) statement -> INT VAR EQUALS factor . SEMICOLON
    (51) term -> factor .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 106
    STAR            reduce using rule 51 (term -> factor .)
    DIV             reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)

  ! SEMICOLON       [ reduce using rule 51 (term -> factor .) ]


state 73

    (23) statement -> INT VAR EQUALS expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 107
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 74

    (56) statement -> INT STAR VAR SEMICOLON .

    IGNORE_CONTENT  reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    INT             reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    VOID            reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    VAR             reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    IF              reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    ELSE            reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    FOR             reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    WHILE           reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    RETURN          reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    LB              reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    RB              reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    COUT            reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    NUM             reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)
    $end            reduce using rule 56 (statement -> INT STAR VAR SEMICOLON .)


state 75

    (20) f_statement -> VAR EQUALS . f_statement
    (19) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (20) f_statement -> . VAR EQUALS f_statement

    VAR             shift and go to state 108

    f_statement                    shift and go to state 47

state 76

    (24) statement -> VAR EQUALS factor SEMICOLON .

    IGNORE_CONTENT  reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    INT             reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    VOID            reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    VAR             reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    IF              reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    FOR             reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    LB              reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    RB              reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    COUT            reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    NUM             reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)
    $end            reduce using rule 24 (statement -> VAR EQUALS factor SEMICOLON .)


state 77

    (25) statement -> VAR EQUALS expr SEMICOLON .

    IGNORE_CONTENT  reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    INT             reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    VOID            reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    NUM             reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 25 (statement -> VAR EQUALS expr SEMICOLON .)


state 78

    (57) statement -> VAR EQUALS LPAREN INT . STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    STAR            shift and go to state 109


state 79

    (19) f_statement -> VAR LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 110


state 80

    (14) args -> args COMMA . VAR
    (16) args -> args COMMA . NUM

    VAR             shift and go to state 111
    NUM             shift and go to state 112


state 81

    (55) array -> VAR LBRACKET expr RBRACKET .

    EQUALS          reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    STAR            reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    DIV             reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    GREATER         reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    LESS            reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 55 (array -> VAR LBRACKET expr RBRACKET .)


state 82

    (5) statement -> VOID VAR LPAREN params . RPAREN SEMICOLON
    (7) statement -> VOID VAR LPAREN params . RPAREN
    (9) params -> params . COMMA INT VAR
    (11) params -> params . COMMA INT STAR VAR

    RPAREN          shift and go to state 113
    COMMA           shift and go to state 105


state 83

    (40) statement -> factor PLUS PLUS SEMICOLON .

    IGNORE_CONTENT  reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    INT             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    VOID            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    IF              reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    LB              reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    RB              reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    COUT            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    NUM             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    $end            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)


state 84

    (38) statement -> factor PLUS EQUALS factor . SEMICOLON

    SEMICOLON       shift and go to state 114


state 85

    (41) statement -> factor MINUS MINUS SEMICOLON .

    IGNORE_CONTENT  reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    INT             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    VOID            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    VAR             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    IF              reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    LB              reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    RB              reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    COUT            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    NUM             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    $end            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)


state 86

    (39) statement -> factor MINUS EQUALS factor . SEMICOLON

    SEMICOLON       shift and go to state 115


state 87

    (26) statement -> array EQUALS factor SEMICOLON .

    IGNORE_CONTENT  reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    INT             reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    VOID            reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    VAR             reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    IF              reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    FOR             reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    LB              reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    RB              reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    COUT            reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    NUM             reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)
    $end            reduce using rule 26 (statement -> array EQUALS factor SEMICOLON .)


state 88

    (27) statement -> array EQUALS expr SEMICOLON .

    IGNORE_CONTENT  reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    INT             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    VOID            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    VAR             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    IF              reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    FOR             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    LB              reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    RB              reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    COUT            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    NUM             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    $end            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)


state 89

    (28) statement -> IF LPAREN condition RPAREN .

    IGNORE_CONTENT  reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    INT             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    VOID            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    VAR             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    IF              reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    ELSE            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    FOR             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    WHILE           reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    RETURN          reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    LB              reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    RB              reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    COUT            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    NUM             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    $end            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)


state 90

    (32) condition -> factor GREATER . factor
    (35) condition -> factor GREATER . EQUALS factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    EQUALS          shift and go to state 117
    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 116
    array                          shift and go to state 36

state 91

    (33) condition -> factor LESS . factor
    (36) condition -> factor LESS . EQUALS factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    EQUALS          shift and go to state 119
    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 118
    array                          shift and go to state 36

state 92

    (34) condition -> factor EQUALS . EQUALS factor

    EQUALS          shift and go to state 120


state 93

    (30) statement -> FOR LPAREN INT VAR . EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN

    EQUALS          shift and go to state 121


state 94

    (31) statement -> WHILE LPAREN condition RPAREN .

    IGNORE_CONTENT  reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    INT             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    VOID            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    VAR             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    IF              reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    ELSE            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    FOR             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    WHILE           reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    RETURN          reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    LB              reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    RB              reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    COUT            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    NUM             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    $end            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)


state 95

    (46) expr -> expr PLUS term .
    (49) term -> term . STAR factor
    (50) term -> term . DIV factor

    SEMICOLON       reduce using rule 46 (expr -> expr PLUS term .)
    PLUS            reduce using rule 46 (expr -> expr PLUS term .)
    MINUS           reduce using rule 46 (expr -> expr PLUS term .)
    RBRACKET        reduce using rule 46 (expr -> expr PLUS term .)
    STAR            shift and go to state 66
    DIV             shift and go to state 67


state 96

    (47) expr -> expr MINUS term .
    (49) term -> term . STAR factor
    (50) term -> term . DIV factor

    SEMICOLON       reduce using rule 47 (expr -> expr MINUS term .)
    PLUS            reduce using rule 47 (expr -> expr MINUS term .)
    MINUS           reduce using rule 47 (expr -> expr MINUS term .)
    RBRACKET        reduce using rule 47 (expr -> expr MINUS term .)
    STAR            shift and go to state 66
    DIV             shift and go to state 67


state 97

    (49) term -> term STAR factor .

    STAR            reduce using rule 49 (term -> term STAR factor .)
    DIV             reduce using rule 49 (term -> term STAR factor .)
    SEMICOLON       reduce using rule 49 (term -> term STAR factor .)
    PLUS            reduce using rule 49 (term -> term STAR factor .)
    MINUS           reduce using rule 49 (term -> term STAR factor .)
    RBRACKET        reduce using rule 49 (term -> term STAR factor .)


state 98

    (50) term -> term DIV factor .

    STAR            reduce using rule 50 (term -> term DIV factor .)
    DIV             reduce using rule 50 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 50 (term -> term DIV factor .)
    PLUS            reduce using rule 50 (term -> term DIV factor .)
    MINUS           reduce using rule 50 (term -> term DIV factor .)
    RBRACKET        reduce using rule 50 (term -> term DIV factor .)


state 99

    (58) p_content -> LESS LESS VAR . p_content
    (58) p_content -> . LESS LESS VAR p_content
    (59) p_content -> . LESS LESS SENTENCE p_content
    (60) p_content -> . LESS LESS ENDL
    (61) p_content -> .

    LESS            shift and go to state 38
    SEMICOLON       reduce using rule 61 (p_content -> .)

    p_content                      shift and go to state 122

state 100

    (59) p_content -> LESS LESS SENTENCE . p_content
    (58) p_content -> . LESS LESS VAR p_content
    (59) p_content -> . LESS LESS SENTENCE p_content
    (60) p_content -> . LESS LESS ENDL
    (61) p_content -> .

    LESS            shift and go to state 38
    SEMICOLON       reduce using rule 61 (p_content -> .)

    p_content                      shift and go to state 123

state 101

    (60) p_content -> LESS LESS ENDL .

    SEMICOLON       reduce using rule 60 (p_content -> LESS LESS ENDL .)


state 102

    (8) params -> INT VAR .

    RPAREN          reduce using rule 8 (params -> INT VAR .)
    COMMA           reduce using rule 8 (params -> INT VAR .)


state 103

    (10) params -> INT STAR . VAR

    VAR             shift and go to state 124


state 104

    (4) statement -> INT VAR LPAREN params RPAREN . SEMICOLON
    (6) statement -> INT VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 125
    IGNORE_CONTENT  reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    INT             reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    VOID            reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    VAR             reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    IF              reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    FOR             reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    LB              reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    RB              reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    COUT            reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    NUM             reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)
    $end            reduce using rule 6 (statement -> INT VAR LPAREN params RPAREN .)


state 105

    (9) params -> params COMMA . INT VAR
    (11) params -> params COMMA . INT STAR VAR

    INT             shift and go to state 126


state 106

    (22) statement -> INT VAR EQUALS factor SEMICOLON .

    IGNORE_CONTENT  reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    INT             reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    VOID            reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    VAR             reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    IF              reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    FOR             reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    LB              reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    RB              reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    COUT            reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    NUM             reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)
    $end            reduce using rule 22 (statement -> INT VAR EQUALS factor SEMICOLON .)


state 107

    (23) statement -> INT VAR EQUALS expr SEMICOLON .

    IGNORE_CONTENT  reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    INT             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VOID            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    NUM             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)


state 108

    (19) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (20) f_statement -> VAR . EQUALS f_statement

    LPAREN          shift and go to state 23
    EQUALS          shift and go to state 75


state 109

    (57) statement -> VAR EQUALS LPAREN INT STAR . RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    RPAREN          shift and go to state 127


state 110

    (19) f_statement -> VAR LPAREN args RPAREN SEMICOLON .

    IGNORE_CONTENT  reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    INT             reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VOID            reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VAR             reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    ELSE            reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    LB              reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RB              reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    COUT            reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    NUM             reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 19 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)


state 111

    (14) args -> args COMMA VAR .

    RPAREN          reduce using rule 14 (args -> args COMMA VAR .)
    COMMA           reduce using rule 14 (args -> args COMMA VAR .)


state 112

    (16) args -> args COMMA NUM .

    RPAREN          reduce using rule 16 (args -> args COMMA NUM .)
    COMMA           reduce using rule 16 (args -> args COMMA NUM .)


state 113

    (5) statement -> VOID VAR LPAREN params RPAREN . SEMICOLON
    (7) statement -> VOID VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 128
    IGNORE_CONTENT  reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    INT             reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    VOID            reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    VAR             reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    IF              reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    FOR             reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    LB              reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    RB              reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    COUT            reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    NUM             reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)
    $end            reduce using rule 7 (statement -> VOID VAR LPAREN params RPAREN .)


state 114

    (38) statement -> factor PLUS EQUALS factor SEMICOLON .

    IGNORE_CONTENT  reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    INT             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    VOID            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    VAR             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    IF              reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    FOR             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    LB              reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    RB              reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    COUT            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    NUM             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    $end            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)


state 115

    (39) statement -> factor MINUS EQUALS factor SEMICOLON .

    IGNORE_CONTENT  reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    INT             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    VOID            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    VAR             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    IF              reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    FOR             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    LB              reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    RB              reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    COUT            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    NUM             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    $end            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)


state 116

    (32) condition -> factor GREATER factor .

    RPAREN          reduce using rule 32 (condition -> factor GREATER factor .)
    SEMICOLON       reduce using rule 32 (condition -> factor GREATER factor .)


state 117

    (35) condition -> factor GREATER EQUALS . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 129
    array                          shift and go to state 36

state 118

    (33) condition -> factor LESS factor .

    RPAREN          reduce using rule 33 (condition -> factor LESS factor .)
    SEMICOLON       reduce using rule 33 (condition -> factor LESS factor .)


state 119

    (36) condition -> factor LESS EQUALS . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 130
    array                          shift and go to state 36

state 120

    (34) condition -> factor EQUALS EQUALS . factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 131
    array                          shift and go to state 36

state 121

    (30) statement -> FOR LPAREN INT VAR EQUALS . factor SEMICOLON condition SEMICOLON for_update RPAREN
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 132
    array                          shift and go to state 36

state 122

    (58) p_content -> LESS LESS VAR p_content .

    SEMICOLON       reduce using rule 58 (p_content -> LESS LESS VAR p_content .)


state 123

    (59) p_content -> LESS LESS SENTENCE p_content .

    SEMICOLON       reduce using rule 59 (p_content -> LESS LESS SENTENCE p_content .)


state 124

    (10) params -> INT STAR VAR .

    RPAREN          reduce using rule 10 (params -> INT STAR VAR .)
    COMMA           reduce using rule 10 (params -> INT STAR VAR .)


state 125

    (4) statement -> INT VAR LPAREN params RPAREN SEMICOLON .

    IGNORE_CONTENT  reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    INT             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VOID            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    NUM             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)


state 126

    (9) params -> params COMMA INT . VAR
    (11) params -> params COMMA INT . STAR VAR

    VAR             shift and go to state 133
    STAR            shift and go to state 134


state 127

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN . MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    MALLOC          shift and go to state 135


state 128

    (5) statement -> VOID VAR LPAREN params RPAREN SEMICOLON .

    IGNORE_CONTENT  reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    INT             reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    VOID            reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    NUM             reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 5 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)


state 129

    (35) condition -> factor GREATER EQUALS factor .

    RPAREN          reduce using rule 35 (condition -> factor GREATER EQUALS factor .)
    SEMICOLON       reduce using rule 35 (condition -> factor GREATER EQUALS factor .)


state 130

    (36) condition -> factor LESS EQUALS factor .

    RPAREN          reduce using rule 36 (condition -> factor LESS EQUALS factor .)
    SEMICOLON       reduce using rule 36 (condition -> factor LESS EQUALS factor .)


state 131

    (34) condition -> factor EQUALS EQUALS factor .

    RPAREN          reduce using rule 34 (condition -> factor EQUALS EQUALS factor .)
    SEMICOLON       reduce using rule 34 (condition -> factor EQUALS EQUALS factor .)


state 132

    (30) statement -> FOR LPAREN INT VAR EQUALS factor . SEMICOLON condition SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 136


state 133

    (9) params -> params COMMA INT VAR .

    RPAREN          reduce using rule 9 (params -> params COMMA INT VAR .)
    COMMA           reduce using rule 9 (params -> params COMMA INT VAR .)


state 134

    (11) params -> params COMMA INT STAR . VAR

    VAR             shift and go to state 137


state 135

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC . LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    LPAREN          shift and go to state 138


state 136

    (30) statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON . condition SEMICOLON for_update RPAREN
    (32) condition -> . factor GREATER factor
    (33) condition -> . factor LESS factor
    (34) condition -> . factor EQUALS EQUALS factor
    (35) condition -> . factor GREATER EQUALS factor
    (36) condition -> . factor LESS EQUALS factor
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 60
    condition                      shift and go to state 139
    array                          shift and go to state 36

state 137

    (11) params -> params COMMA INT STAR VAR .

    RPAREN          reduce using rule 11 (params -> params COMMA INT STAR VAR .)
    COMMA           reduce using rule 11 (params -> params COMMA INT STAR VAR .)


state 138

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN . SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    SIZEOF          shift and go to state 140


state 139

    (30) statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition . SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 141


state 140

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF . LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    LPAREN          shift and go to state 142


state 141

    (30) statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON . for_update RPAREN
    (42) for_update -> . VAR PLUS PLUS
    (43) for_update -> . VAR MINUS MINUS

    VAR             shift and go to state 143

    for_update                     shift and go to state 144

state 142

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN . INT RPAREN STAR factor RPAREN SEMICOLON

    INT             shift and go to state 145


state 143

    (42) for_update -> VAR . PLUS PLUS
    (43) for_update -> VAR . MINUS MINUS

    PLUS            shift and go to state 146
    MINUS           shift and go to state 147


state 144

    (30) statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update . RPAREN

    RPAREN          shift and go to state 148


state 145

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT . RPAREN STAR factor RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 146

    (42) for_update -> VAR PLUS . PLUS

    PLUS            shift and go to state 150


state 147

    (43) for_update -> VAR MINUS . MINUS

    MINUS           shift and go to state 151


state 148

    (30) statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .

    IGNORE_CONTENT  reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    INT             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    VOID            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    VAR             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    IF              reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    ELSE            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    FOR             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    WHILE           reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    RETURN          reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    LB              reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    RB              reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    COUT            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    NUM             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)
    $end            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN .)


state 149

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN . STAR factor RPAREN SEMICOLON

    STAR            shift and go to state 152


state 150

    (42) for_update -> VAR PLUS PLUS .

    RPAREN          reduce using rule 42 (for_update -> VAR PLUS PLUS .)


state 151

    (43) for_update -> VAR MINUS MINUS .

    RPAREN          reduce using rule 43 (for_update -> VAR MINUS MINUS .)


state 152

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR . factor RPAREN SEMICOLON
    (52) factor -> . NUM
    (53) factor -> . VAR
    (54) factor -> . array
    (55) array -> . VAR LBRACKET expr RBRACKET

    NUM             shift and go to state 18
    VAR             shift and go to state 35

    factor                         shift and go to state 153
    array                          shift and go to state 36

state 153

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor . RPAREN SEMICOLON

    RPAREN          shift and go to state 154


state 154

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 155


state 155

    (57) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .

    IGNORE_CONTENT  reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    INT             reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    VOID            reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    VAR             reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    IF              reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    ELSE            reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    LB              reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    RB              reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    COUT            reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    NUM             reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    $end            reduce using rule 57 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 44 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 57 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 72 resolved as shift
