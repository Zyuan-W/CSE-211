Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    IGNORE_CONTENT
    PRINT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> INT VAR SEMICOLON
Rule 4     statement -> INT VAR EQUALS NUM SEMICOLON
Rule 5     statement -> INT VAR EQUALS VAR SEMICOLON
Rule 6     statement -> INT VAR EQUALS expr SEMICOLON
Rule 7     statement -> VAR EQUALS NUM SEMICOLON
Rule 8     statement -> IF LPAREN condition RPAREN
Rule 9     statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
Rule 10    statement -> WHILE LPAREN condition RPAREN
Rule 11    condition -> VAR GREATER NUM
Rule 12    condition -> VAR LESS NUM
Rule 13    condition -> VAR GREATER VAR
Rule 14    condition -> VAR LESS VAR
Rule 15    condition -> VAR EQUALS EQUALS NUM
Rule 16    for_update -> VAR PLUS PLUS
Rule 17    statement -> LB statement RB
Rule 18    expr -> expr PLUS term
Rule 19    expr -> expr PLUS VAR
Rule 20    expr -> expr MINUS term
Rule 21    expr -> expr MINUS VAR
Rule 22    expr -> term
Rule 23    term -> term MULT factor
Rule 24    term -> term DIV factor
Rule 25    term -> factor
Rule 26    factor -> LPAREN expr RPAREN
Rule 27    factor -> NUM
Rule 28    factor -> VAR
Rule 29    statement -> COUT LESS LESS VAR SEMICOLON
Rule 30    statement -> COUT LESS LESS SENTENCE SEMICOLON
Rule 31    statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON

Terminals, with rules where they appear

COUT                 : 29 30 31
DIV                  : 24
ELSE                 : 
EQUALS               : 4 5 6 7 9 15 15
FOR                  : 9
GREATER              : 11 13
IF                   : 8
IGNORE_CONTENT       : 
INT                  : 3 4 5 6 9
LB                   : 17
LESS                 : 12 14 29 29 30 30 31 31 31 31
LPAREN               : 8 9 10 26
MINUS                : 20 21
MULT                 : 23
NUM                  : 4 7 9 11 12 15 27
PLUS                 : 16 16 18 19
PRINT                : 
RB                   : 17
RPAREN               : 8 9 10 26
SEMICOLON            : 3 4 5 6 7 9 9 29 30 31
SENTENCE             : 30 31
VAR                  : 3 4 5 5 6 7 9 11 12 13 13 14 14 15 16 19 21 28 29 31
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

condition            : 8 9 10
expr                 : 6 18 19 20 21 26
factor               : 23 24 25
for_update           : 9
program              : 2 0
statement            : 1 2 17
term                 : 18 20 22 23 24

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . INT VAR SEMICOLON
    (4) statement -> . INT VAR EQUALS NUM SEMICOLON
    (5) statement -> . INT VAR EQUALS VAR SEMICOLON
    (6) statement -> . INT VAR EQUALS expr SEMICOLON
    (7) statement -> . VAR EQUALS NUM SEMICOLON
    (8) statement -> . IF LPAREN condition RPAREN
    (9) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (10) statement -> . WHILE LPAREN condition RPAREN
    (17) statement -> . LB statement RB
    (29) statement -> . COUT LESS LESS VAR SEMICOLON
    (30) statement -> . COUT LESS LESS SENTENCE SEMICOLON
    (31) statement -> . COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    LB              shift and go to state 8
    COUT            shift and go to state 9

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . INT VAR SEMICOLON
    (4) statement -> . INT VAR EQUALS NUM SEMICOLON
    (5) statement -> . INT VAR EQUALS VAR SEMICOLON
    (6) statement -> . INT VAR EQUALS expr SEMICOLON
    (7) statement -> . VAR EQUALS NUM SEMICOLON
    (8) statement -> . IF LPAREN condition RPAREN
    (9) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (10) statement -> . WHILE LPAREN condition RPAREN
    (17) statement -> . LB statement RB
    (29) statement -> . COUT LESS LESS VAR SEMICOLON
    (30) statement -> . COUT LESS LESS SENTENCE SEMICOLON
    (31) statement -> . COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    LB              shift and go to state 8
    COUT            shift and go to state 9

    statement                      shift and go to state 10

state 2

    (1) program -> statement .

    INT             reduce using rule 1 (program -> statement .)
    VAR             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    LB              reduce using rule 1 (program -> statement .)
    COUT            reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> INT . VAR SEMICOLON
    (4) statement -> INT . VAR EQUALS NUM SEMICOLON
    (5) statement -> INT . VAR EQUALS VAR SEMICOLON
    (6) statement -> INT . VAR EQUALS expr SEMICOLON

    VAR             shift and go to state 11


state 4

    (7) statement -> VAR . EQUALS NUM SEMICOLON

    EQUALS          shift and go to state 12


state 5

    (8) statement -> IF . LPAREN condition RPAREN

    LPAREN          shift and go to state 13


state 6

    (9) statement -> FOR . LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    LPAREN          shift and go to state 14


state 7

    (10) statement -> WHILE . LPAREN condition RPAREN

    LPAREN          shift and go to state 15


state 8

    (17) statement -> LB . statement RB
    (3) statement -> . INT VAR SEMICOLON
    (4) statement -> . INT VAR EQUALS NUM SEMICOLON
    (5) statement -> . INT VAR EQUALS VAR SEMICOLON
    (6) statement -> . INT VAR EQUALS expr SEMICOLON
    (7) statement -> . VAR EQUALS NUM SEMICOLON
    (8) statement -> . IF LPAREN condition RPAREN
    (9) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (10) statement -> . WHILE LPAREN condition RPAREN
    (17) statement -> . LB statement RB
    (29) statement -> . COUT LESS LESS VAR SEMICOLON
    (30) statement -> . COUT LESS LESS SENTENCE SEMICOLON
    (31) statement -> . COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    LB              shift and go to state 8
    COUT            shift and go to state 9

    statement                      shift and go to state 16

state 9

    (29) statement -> COUT . LESS LESS VAR SEMICOLON
    (30) statement -> COUT . LESS LESS SENTENCE SEMICOLON
    (31) statement -> COUT . LESS LESS SENTENCE LESS LESS VAR SEMICOLON

    LESS            shift and go to state 17


state 10

    (2) program -> program statement .

    INT             reduce using rule 2 (program -> program statement .)
    VAR             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    LB              reduce using rule 2 (program -> program statement .)
    COUT            reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 11

    (3) statement -> INT VAR . SEMICOLON
    (4) statement -> INT VAR . EQUALS NUM SEMICOLON
    (5) statement -> INT VAR . EQUALS VAR SEMICOLON
    (6) statement -> INT VAR . EQUALS expr SEMICOLON

    SEMICOLON       shift and go to state 18
    EQUALS          shift and go to state 19


state 12

    (7) statement -> VAR EQUALS . NUM SEMICOLON

    NUM             shift and go to state 20


state 13

    (8) statement -> IF LPAREN . condition RPAREN
    (11) condition -> . VAR GREATER NUM
    (12) condition -> . VAR LESS NUM
    (13) condition -> . VAR GREATER VAR
    (14) condition -> . VAR LESS VAR
    (15) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 22

    condition                      shift and go to state 21

state 14

    (9) statement -> FOR LPAREN . INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    INT             shift and go to state 23


state 15

    (10) statement -> WHILE LPAREN . condition RPAREN
    (11) condition -> . VAR GREATER NUM
    (12) condition -> . VAR LESS NUM
    (13) condition -> . VAR GREATER VAR
    (14) condition -> . VAR LESS VAR
    (15) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 22

    condition                      shift and go to state 24

state 16

    (17) statement -> LB statement . RB

    RB              shift and go to state 25


state 17

    (29) statement -> COUT LESS . LESS VAR SEMICOLON
    (30) statement -> COUT LESS . LESS SENTENCE SEMICOLON
    (31) statement -> COUT LESS . LESS SENTENCE LESS LESS VAR SEMICOLON

    LESS            shift and go to state 26


state 18

    (3) statement -> INT VAR SEMICOLON .

    INT             reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    VAR             reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    IF              reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    FOR             reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    LB              reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    COUT            reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    $end            reduce using rule 3 (statement -> INT VAR SEMICOLON .)
    RB              reduce using rule 3 (statement -> INT VAR SEMICOLON .)


state 19

    (4) statement -> INT VAR EQUALS . NUM SEMICOLON
    (5) statement -> INT VAR EQUALS . VAR SEMICOLON
    (6) statement -> INT VAR EQUALS . expr SEMICOLON
    (18) expr -> . expr PLUS term
    (19) expr -> . expr PLUS VAR
    (20) expr -> . expr MINUS term
    (21) expr -> . expr MINUS VAR
    (22) expr -> . term
    (23) term -> . term MULT factor
    (24) term -> . term DIV factor
    (25) term -> . factor
    (26) factor -> . LPAREN expr RPAREN
    (27) factor -> . NUM
    (28) factor -> . VAR

    NUM             shift and go to state 28
    VAR             shift and go to state 27
    LPAREN          shift and go to state 32

    expr                           shift and go to state 29
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 20

    (7) statement -> VAR EQUALS NUM . SEMICOLON

    SEMICOLON       shift and go to state 33


state 21

    (8) statement -> IF LPAREN condition . RPAREN

    RPAREN          shift and go to state 34


state 22

    (11) condition -> VAR . GREATER NUM
    (12) condition -> VAR . LESS NUM
    (13) condition -> VAR . GREATER VAR
    (14) condition -> VAR . LESS VAR
    (15) condition -> VAR . EQUALS EQUALS NUM

    GREATER         shift and go to state 35
    LESS            shift and go to state 36
    EQUALS          shift and go to state 37


state 23

    (9) statement -> FOR LPAREN INT . VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    VAR             shift and go to state 38


state 24

    (10) statement -> WHILE LPAREN condition . RPAREN

    RPAREN          shift and go to state 39


state 25

    (17) statement -> LB statement RB .

    INT             reduce using rule 17 (statement -> LB statement RB .)
    VAR             reduce using rule 17 (statement -> LB statement RB .)
    IF              reduce using rule 17 (statement -> LB statement RB .)
    FOR             reduce using rule 17 (statement -> LB statement RB .)
    WHILE           reduce using rule 17 (statement -> LB statement RB .)
    LB              reduce using rule 17 (statement -> LB statement RB .)
    COUT            reduce using rule 17 (statement -> LB statement RB .)
    $end            reduce using rule 17 (statement -> LB statement RB .)
    RB              reduce using rule 17 (statement -> LB statement RB .)


state 26

    (29) statement -> COUT LESS LESS . VAR SEMICOLON
    (30) statement -> COUT LESS LESS . SENTENCE SEMICOLON
    (31) statement -> COUT LESS LESS . SENTENCE LESS LESS VAR SEMICOLON

    VAR             shift and go to state 40
    SENTENCE        shift and go to state 41


state 27

    (5) statement -> INT VAR EQUALS VAR . SEMICOLON
    (28) factor -> VAR .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 42
    MULT            reduce using rule 28 (factor -> VAR .)
    DIV             reduce using rule 28 (factor -> VAR .)
    PLUS            reduce using rule 28 (factor -> VAR .)
    MINUS           reduce using rule 28 (factor -> VAR .)

  ! SEMICOLON       [ reduce using rule 28 (factor -> VAR .) ]


state 28

    (4) statement -> INT VAR EQUALS NUM . SEMICOLON
    (27) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 43
    MULT            reduce using rule 27 (factor -> NUM .)
    DIV             reduce using rule 27 (factor -> NUM .)
    PLUS            reduce using rule 27 (factor -> NUM .)
    MINUS           reduce using rule 27 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 27 (factor -> NUM .) ]


state 29

    (6) statement -> INT VAR EQUALS expr . SEMICOLON
    (18) expr -> expr . PLUS term
    (19) expr -> expr . PLUS VAR
    (20) expr -> expr . MINUS term
    (21) expr -> expr . MINUS VAR

    SEMICOLON       shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46


state 30

    (22) expr -> term .
    (23) term -> term . MULT factor
    (24) term -> term . DIV factor

    SEMICOLON       reduce using rule 22 (expr -> term .)
    PLUS            reduce using rule 22 (expr -> term .)
    MINUS           reduce using rule 22 (expr -> term .)
    RPAREN          reduce using rule 22 (expr -> term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 31

    (25) term -> factor .

    MULT            reduce using rule 25 (term -> factor .)
    DIV             reduce using rule 25 (term -> factor .)
    SEMICOLON       reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)


state 32

    (26) factor -> LPAREN . expr RPAREN
    (18) expr -> . expr PLUS term
    (19) expr -> . expr PLUS VAR
    (20) expr -> . expr MINUS term
    (21) expr -> . expr MINUS VAR
    (22) expr -> . term
    (23) term -> . term MULT factor
    (24) term -> . term DIV factor
    (25) term -> . factor
    (26) factor -> . LPAREN expr RPAREN
    (27) factor -> . NUM
    (28) factor -> . VAR

    LPAREN          shift and go to state 32
    NUM             shift and go to state 51
    VAR             shift and go to state 50

    expr                           shift and go to state 49
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 33

    (7) statement -> VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 7 (statement -> VAR EQUALS NUM SEMICOLON .)


state 34

    (8) statement -> IF LPAREN condition RPAREN .

    INT             reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    VAR             reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    IF              reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    FOR             reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    WHILE           reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    LB              reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    COUT            reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    $end            reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)
    RB              reduce using rule 8 (statement -> IF LPAREN condition RPAREN .)


state 35

    (11) condition -> VAR GREATER . NUM
    (13) condition -> VAR GREATER . VAR

    NUM             shift and go to state 53
    VAR             shift and go to state 52


state 36

    (12) condition -> VAR LESS . NUM
    (14) condition -> VAR LESS . VAR

    NUM             shift and go to state 55
    VAR             shift and go to state 54


state 37

    (15) condition -> VAR EQUALS . EQUALS NUM

    EQUALS          shift and go to state 56


state 38

    (9) statement -> FOR LPAREN INT VAR . EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    EQUALS          shift and go to state 57


state 39

    (10) statement -> WHILE LPAREN condition RPAREN .

    INT             reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    VAR             reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    IF              reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    FOR             reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    WHILE           reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    LB              reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    COUT            reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    $end            reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)
    RB              reduce using rule 10 (statement -> WHILE LPAREN condition RPAREN .)


state 40

    (29) statement -> COUT LESS LESS VAR . SEMICOLON

    SEMICOLON       shift and go to state 58


state 41

    (30) statement -> COUT LESS LESS SENTENCE . SEMICOLON
    (31) statement -> COUT LESS LESS SENTENCE . LESS LESS VAR SEMICOLON

    SEMICOLON       shift and go to state 60
    LESS            shift and go to state 59


state 42

    (5) statement -> INT VAR EQUALS VAR SEMICOLON .

    INT             reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    VAR             reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    IF              reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    FOR             reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    WHILE           reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    LB              reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    COUT            reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    $end            reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RB              reduce using rule 5 (statement -> INT VAR EQUALS VAR SEMICOLON .)


state 43

    (4) statement -> INT VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 4 (statement -> INT VAR EQUALS NUM SEMICOLON .)


state 44

    (6) statement -> INT VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 6 (statement -> INT VAR EQUALS expr SEMICOLON .)


state 45

    (18) expr -> expr PLUS . term
    (19) expr -> expr PLUS . VAR
    (23) term -> . term MULT factor
    (24) term -> . term DIV factor
    (25) term -> . factor
    (26) factor -> . LPAREN expr RPAREN
    (27) factor -> . NUM
    (28) factor -> . VAR

    VAR             shift and go to state 62
    LPAREN          shift and go to state 32
    NUM             shift and go to state 51

    term                           shift and go to state 61
    factor                         shift and go to state 31

state 46

    (20) expr -> expr MINUS . term
    (21) expr -> expr MINUS . VAR
    (23) term -> . term MULT factor
    (24) term -> . term DIV factor
    (25) term -> . factor
    (26) factor -> . LPAREN expr RPAREN
    (27) factor -> . NUM
    (28) factor -> . VAR

    VAR             shift and go to state 64
    LPAREN          shift and go to state 32
    NUM             shift and go to state 51

    term                           shift and go to state 63
    factor                         shift and go to state 31

state 47

    (23) term -> term MULT . factor
    (26) factor -> . LPAREN expr RPAREN
    (27) factor -> . NUM
    (28) factor -> . VAR

    LPAREN          shift and go to state 32
    NUM             shift and go to state 51
    VAR             shift and go to state 50

    factor                         shift and go to state 65

state 48

    (24) term -> term DIV . factor
    (26) factor -> . LPAREN expr RPAREN
    (27) factor -> . NUM
    (28) factor -> . VAR

    LPAREN          shift and go to state 32
    NUM             shift and go to state 51
    VAR             shift and go to state 50

    factor                         shift and go to state 66

state 49

    (26) factor -> LPAREN expr . RPAREN
    (18) expr -> expr . PLUS term
    (19) expr -> expr . PLUS VAR
    (20) expr -> expr . MINUS term
    (21) expr -> expr . MINUS VAR

    RPAREN          shift and go to state 67
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46


state 50

    (28) factor -> VAR .

    MULT            reduce using rule 28 (factor -> VAR .)
    DIV             reduce using rule 28 (factor -> VAR .)
    RPAREN          reduce using rule 28 (factor -> VAR .)
    PLUS            reduce using rule 28 (factor -> VAR .)
    MINUS           reduce using rule 28 (factor -> VAR .)
    SEMICOLON       reduce using rule 28 (factor -> VAR .)


state 51

    (27) factor -> NUM .

    MULT            reduce using rule 27 (factor -> NUM .)
    DIV             reduce using rule 27 (factor -> NUM .)
    RPAREN          reduce using rule 27 (factor -> NUM .)
    PLUS            reduce using rule 27 (factor -> NUM .)
    MINUS           reduce using rule 27 (factor -> NUM .)
    SEMICOLON       reduce using rule 27 (factor -> NUM .)


state 52

    (13) condition -> VAR GREATER VAR .

    RPAREN          reduce using rule 13 (condition -> VAR GREATER VAR .)
    SEMICOLON       reduce using rule 13 (condition -> VAR GREATER VAR .)


state 53

    (11) condition -> VAR GREATER NUM .

    RPAREN          reduce using rule 11 (condition -> VAR GREATER NUM .)
    SEMICOLON       reduce using rule 11 (condition -> VAR GREATER NUM .)


state 54

    (14) condition -> VAR LESS VAR .

    RPAREN          reduce using rule 14 (condition -> VAR LESS VAR .)
    SEMICOLON       reduce using rule 14 (condition -> VAR LESS VAR .)


state 55

    (12) condition -> VAR LESS NUM .

    RPAREN          reduce using rule 12 (condition -> VAR LESS NUM .)
    SEMICOLON       reduce using rule 12 (condition -> VAR LESS NUM .)


state 56

    (15) condition -> VAR EQUALS EQUALS . NUM

    NUM             shift and go to state 68


state 57

    (9) statement -> FOR LPAREN INT VAR EQUALS . NUM SEMICOLON condition SEMICOLON for_update RPAREN

    NUM             shift and go to state 69


state 58

    (29) statement -> COUT LESS LESS VAR SEMICOLON .

    INT             reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    VAR             reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    IF              reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    FOR             reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    LB              reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    COUT            reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    $end            reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)
    RB              reduce using rule 29 (statement -> COUT LESS LESS VAR SEMICOLON .)


state 59

    (31) statement -> COUT LESS LESS SENTENCE LESS . LESS VAR SEMICOLON

    LESS            shift and go to state 70


state 60

    (30) statement -> COUT LESS LESS SENTENCE SEMICOLON .

    INT             reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    VAR             reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    IF              reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    FOR             reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    LB              reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    COUT            reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    $end            reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)
    RB              reduce using rule 30 (statement -> COUT LESS LESS SENTENCE SEMICOLON .)


state 61

    (18) expr -> expr PLUS term .
    (23) term -> term . MULT factor
    (24) term -> term . DIV factor

    SEMICOLON       reduce using rule 18 (expr -> expr PLUS term .)
    PLUS            reduce using rule 18 (expr -> expr PLUS term .)
    MINUS           reduce using rule 18 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 18 (expr -> expr PLUS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 62

    (19) expr -> expr PLUS VAR .
    (28) factor -> VAR .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 19 (expr -> expr PLUS VAR .)
  ! reduce/reduce conflict for PLUS resolved using rule 19 (expr -> expr PLUS VAR .)
  ! reduce/reduce conflict for MINUS resolved using rule 19 (expr -> expr PLUS VAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 19 (expr -> expr PLUS VAR .)
    SEMICOLON       reduce using rule 19 (expr -> expr PLUS VAR .)
    PLUS            reduce using rule 19 (expr -> expr PLUS VAR .)
    MINUS           reduce using rule 19 (expr -> expr PLUS VAR .)
    RPAREN          reduce using rule 19 (expr -> expr PLUS VAR .)
    MULT            reduce using rule 28 (factor -> VAR .)
    DIV             reduce using rule 28 (factor -> VAR .)

  ! SEMICOLON       [ reduce using rule 28 (factor -> VAR .) ]
  ! PLUS            [ reduce using rule 28 (factor -> VAR .) ]
  ! MINUS           [ reduce using rule 28 (factor -> VAR .) ]
  ! RPAREN          [ reduce using rule 28 (factor -> VAR .) ]


state 63

    (20) expr -> expr MINUS term .
    (23) term -> term . MULT factor
    (24) term -> term . DIV factor

    SEMICOLON       reduce using rule 20 (expr -> expr MINUS term .)
    PLUS            reduce using rule 20 (expr -> expr MINUS term .)
    MINUS           reduce using rule 20 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 20 (expr -> expr MINUS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 64

    (21) expr -> expr MINUS VAR .
    (28) factor -> VAR .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 21 (expr -> expr MINUS VAR .)
  ! reduce/reduce conflict for PLUS resolved using rule 21 (expr -> expr MINUS VAR .)
  ! reduce/reduce conflict for MINUS resolved using rule 21 (expr -> expr MINUS VAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 21 (expr -> expr MINUS VAR .)
    SEMICOLON       reduce using rule 21 (expr -> expr MINUS VAR .)
    PLUS            reduce using rule 21 (expr -> expr MINUS VAR .)
    MINUS           reduce using rule 21 (expr -> expr MINUS VAR .)
    RPAREN          reduce using rule 21 (expr -> expr MINUS VAR .)
    MULT            reduce using rule 28 (factor -> VAR .)
    DIV             reduce using rule 28 (factor -> VAR .)

  ! SEMICOLON       [ reduce using rule 28 (factor -> VAR .) ]
  ! PLUS            [ reduce using rule 28 (factor -> VAR .) ]
  ! MINUS           [ reduce using rule 28 (factor -> VAR .) ]
  ! RPAREN          [ reduce using rule 28 (factor -> VAR .) ]


state 65

    (23) term -> term MULT factor .

    MULT            reduce using rule 23 (term -> term MULT factor .)
    DIV             reduce using rule 23 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 23 (term -> term MULT factor .)
    PLUS            reduce using rule 23 (term -> term MULT factor .)
    MINUS           reduce using rule 23 (term -> term MULT factor .)
    RPAREN          reduce using rule 23 (term -> term MULT factor .)


state 66

    (24) term -> term DIV factor .

    MULT            reduce using rule 24 (term -> term DIV factor .)
    DIV             reduce using rule 24 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 24 (term -> term DIV factor .)
    PLUS            reduce using rule 24 (term -> term DIV factor .)
    MINUS           reduce using rule 24 (term -> term DIV factor .)
    RPAREN          reduce using rule 24 (term -> term DIV factor .)


state 67

    (26) factor -> LPAREN expr RPAREN .

    MULT            reduce using rule 26 (factor -> LPAREN expr RPAREN .)
    DIV             reduce using rule 26 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 26 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expr RPAREN .)


state 68

    (15) condition -> VAR EQUALS EQUALS NUM .

    RPAREN          reduce using rule 15 (condition -> VAR EQUALS EQUALS NUM .)
    SEMICOLON       reduce using rule 15 (condition -> VAR EQUALS EQUALS NUM .)


state 69

    (9) statement -> FOR LPAREN INT VAR EQUALS NUM . SEMICOLON condition SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 71


state 70

    (31) statement -> COUT LESS LESS SENTENCE LESS LESS . VAR SEMICOLON

    VAR             shift and go to state 72


state 71

    (9) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON . condition SEMICOLON for_update RPAREN
    (11) condition -> . VAR GREATER NUM
    (12) condition -> . VAR LESS NUM
    (13) condition -> . VAR GREATER VAR
    (14) condition -> . VAR LESS VAR
    (15) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 22

    condition                      shift and go to state 73

state 72

    (31) statement -> COUT LESS LESS SENTENCE LESS LESS VAR . SEMICOLON

    SEMICOLON       shift and go to state 74


state 73

    (9) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition . SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 75


state 74

    (31) statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .

    INT             reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    VAR             reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    IF              reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    FOR             reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    LB              reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    COUT            reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    $end            reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)
    RB              reduce using rule 31 (statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON .)


state 75

    (9) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON . for_update RPAREN
    (16) for_update -> . VAR PLUS PLUS

    VAR             shift and go to state 76

    for_update                     shift and go to state 77

state 76

    (16) for_update -> VAR . PLUS PLUS

    PLUS            shift and go to state 78


state 77

    (9) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update . RPAREN

    RPAREN          shift and go to state 79


state 78

    (16) for_update -> VAR PLUS . PLUS

    PLUS            shift and go to state 80


state 79

    (9) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .

    INT             reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    VAR             reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    IF              reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    FOR             reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    WHILE           reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    LB              reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    COUT            reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    $end            reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RB              reduce using rule 9 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)


state 80

    (16) for_update -> VAR PLUS PLUS .

    RPAREN          reduce using rule 16 (for_update -> VAR PLUS PLUS .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 27 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 28 resolved as shift
WARNING: reduce/reduce conflict in state 62 resolved using rule (expr -> expr PLUS VAR)
WARNING: rejected rule (factor -> VAR) in state 62
WARNING: reduce/reduce conflict in state 64 resolved using rule (expr -> expr MINUS VAR)
WARNING: rejected rule (factor -> VAR) in state 64
