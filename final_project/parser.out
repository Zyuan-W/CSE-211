Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    IGNORE_CONTENT
    PRINT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> INT VAR LPAREN params RPAREN SEMICOLON
Rule 4     statement -> INT VAR LPAREN params RPAREN
Rule 5     params -> INT VAR
Rule 6     params -> params COMMA INT VAR
Rule 7     params -> <empty>
Rule 8     args -> VAR
Rule 9     args -> args COMMA VAR
Rule 10    args -> NUM
Rule 11    args -> args COMMA NUM
Rule 12    args -> <empty>
Rule 13    statement -> f_statement
Rule 14    f_statement -> VAR LPAREN args RPAREN SEMICOLON
Rule 15    f_statement -> VAR EQUALS f_statement
Rule 16    statement -> INT VAR SEMICOLON
Rule 17    statement -> INT VAR EQUALS NUM SEMICOLON
Rule 18    statement -> INT VAR EQUALS VAR SEMICOLON
Rule 19    statement -> INT VAR EQUALS expr SEMICOLON
Rule 20    statement -> VAR EQUALS NUM SEMICOLON
Rule 21    statement -> array EQUALS NUM SEMICOLON
Rule 22    statement -> VAR EQUALS expr SEMICOLON
Rule 23    statement -> array EQUALS expr SEMICOLON
Rule 24    statement -> IF LPAREN condition RPAREN
Rule 25    statement -> ELSE
Rule 26    statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
Rule 27    statement -> WHILE LPAREN condition RPAREN
Rule 28    condition -> factor GREATER factor
Rule 29    condition -> factor LESS factor
Rule 30    condition -> factor EQUALS EQUALS factor
Rule 31    condition -> factor GREATER EQUALS factor
Rule 32    condition -> factor LESS EQUALS factor
Rule 33    statement -> RETURN expr SEMICOLON
Rule 34    statement -> VAR PLUS EQUALS factor SEMICOLON
Rule 35    statement -> VAR MINUS EQUALS factor SEMICOLON
Rule 36    statement -> VAR PLUS PLUS SEMICOLON
Rule 37    statement -> VAR MINUS MINUS SEMICOLON
Rule 38    for_update -> VAR PLUS PLUS
Rule 39    for_update -> VAR MINUS MINUS
Rule 40    statement -> LB
Rule 41    statement -> RB
Rule 42    expr -> expr PLUS term
Rule 43    expr -> expr MINUS term
Rule 44    expr -> term
Rule 45    term -> term STAR factor
Rule 46    term -> term DIV factor
Rule 47    term -> factor
Rule 48    factor -> LPAREN expr RPAREN
Rule 49    factor -> NUM
Rule 50    factor -> VAR
Rule 51    factor -> array
Rule 52    array -> VAR LBRACKET NUM RBRACKET
Rule 53    array -> VAR LBRACKET VAR RBRACKET
Rule 54    statement -> INT STAR VAR SEMICOLON
Rule 55    statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
Rule 56    p_content -> LESS LESS VAR p_content
Rule 57    p_content -> LESS LESS SENTENCE p_content
Rule 58    p_content -> LESS LESS ENDL
Rule 59    p_content -> <empty>
Rule 60    statement -> COUT p_content SEMICOLON

Terminals, with rules where they appear

COMMA                : 6 9 11
COUT                 : 60
DIV                  : 46
ELSE                 : 25
ENDL                 : 58
EQUALS               : 15 17 18 19 20 21 22 23 26 30 30 31 32 34 35 55
FOR                  : 26
GREATER              : 28 31
IF                   : 24
IGNORE_CONTENT       : 
INT                  : 3 4 5 6 16 17 18 19 26 54 55 55
LB                   : 40
LBRACKET             : 52 53
LESS                 : 29 32 56 56 57 57 58 58
LPAREN               : 3 4 14 24 26 27 48 55 55 55
MALLOC               : 55
MINUS                : 35 37 37 39 39 43
NUM                  : 10 11 17 20 21 26 49 52
PLUS                 : 34 36 36 38 38 42
PRINT                : 
RB                   : 41
RBRACKET             : 52 53
RETURN               : 33
RPAREN               : 3 4 14 24 26 27 48 55 55 55
SEMICOLON            : 3 14 16 17 18 19 20 21 22 23 26 26 33 34 35 36 37 54 55 60
SENTENCE             : 57
SIZEOF               : 55
STAR                 : 45 54 55 55
VAR                  : 3 4 5 6 8 9 14 15 16 17 18 18 19 20 22 26 34 35 36 37 38 39 50 52 53 53 54 55 56
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

args                 : 9 11 14
array                : 21 23 51
condition            : 24 26 27
expr                 : 19 22 23 33 42 43 48
f_statement          : 13 15
factor               : 28 28 29 29 30 30 31 31 32 32 34 35 45 46 47 55
for_update           : 26
p_content            : 56 57 60
params               : 3 4 6
program              : 2 0
statement            : 1 2
term                 : 42 43 44 45 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . f_statement
    (16) statement -> . INT VAR SEMICOLON
    (17) statement -> . INT VAR EQUALS NUM SEMICOLON
    (18) statement -> . INT VAR EQUALS VAR SEMICOLON
    (19) statement -> . INT VAR EQUALS expr SEMICOLON
    (20) statement -> . VAR EQUALS NUM SEMICOLON
    (21) statement -> . array EQUALS NUM SEMICOLON
    (22) statement -> . VAR EQUALS expr SEMICOLON
    (23) statement -> . array EQUALS expr SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN
    (25) statement -> . ELSE
    (26) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (27) statement -> . WHILE LPAREN condition RPAREN
    (33) statement -> . RETURN expr SEMICOLON
    (34) statement -> . VAR PLUS EQUALS factor SEMICOLON
    (35) statement -> . VAR MINUS EQUALS factor SEMICOLON
    (36) statement -> . VAR PLUS PLUS SEMICOLON
    (37) statement -> . VAR MINUS MINUS SEMICOLON
    (40) statement -> . LB
    (41) statement -> . RB
    (54) statement -> . INT STAR VAR SEMICOLON
    (55) statement -> . VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (60) statement -> . COUT p_content SEMICOLON
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 7
    ELSE            shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    RETURN          shift and go to state 11
    LB              shift and go to state 12
    RB              shift and go to state 13
    COUT            shift and go to state 14

    program                        shift and go to state 1
    statement                      shift and go to state 2
    f_statement                    shift and go to state 5
    array                          shift and go to state 6

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . f_statement
    (16) statement -> . INT VAR SEMICOLON
    (17) statement -> . INT VAR EQUALS NUM SEMICOLON
    (18) statement -> . INT VAR EQUALS VAR SEMICOLON
    (19) statement -> . INT VAR EQUALS expr SEMICOLON
    (20) statement -> . VAR EQUALS NUM SEMICOLON
    (21) statement -> . array EQUALS NUM SEMICOLON
    (22) statement -> . VAR EQUALS expr SEMICOLON
    (23) statement -> . array EQUALS expr SEMICOLON
    (24) statement -> . IF LPAREN condition RPAREN
    (25) statement -> . ELSE
    (26) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (27) statement -> . WHILE LPAREN condition RPAREN
    (33) statement -> . RETURN expr SEMICOLON
    (34) statement -> . VAR PLUS EQUALS factor SEMICOLON
    (35) statement -> . VAR MINUS EQUALS factor SEMICOLON
    (36) statement -> . VAR PLUS PLUS SEMICOLON
    (37) statement -> . VAR MINUS MINUS SEMICOLON
    (40) statement -> . LB
    (41) statement -> . RB
    (54) statement -> . INT STAR VAR SEMICOLON
    (55) statement -> . VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (60) statement -> . COUT p_content SEMICOLON
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 7
    ELSE            shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    RETURN          shift and go to state 11
    LB              shift and go to state 12
    RB              shift and go to state 13
    COUT            shift and go to state 14

    statement                      shift and go to state 15
    f_statement                    shift and go to state 5
    array                          shift and go to state 6

state 2

    (1) program -> statement .

    INT             reduce using rule 1 (program -> statement .)
    VAR             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    ELSE            reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    LB              reduce using rule 1 (program -> statement .)
    RB              reduce using rule 1 (program -> statement .)
    COUT            reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> INT . VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> INT . VAR LPAREN params RPAREN
    (16) statement -> INT . VAR SEMICOLON
    (17) statement -> INT . VAR EQUALS NUM SEMICOLON
    (18) statement -> INT . VAR EQUALS VAR SEMICOLON
    (19) statement -> INT . VAR EQUALS expr SEMICOLON
    (54) statement -> INT . STAR VAR SEMICOLON

    VAR             shift and go to state 16
    STAR            shift and go to state 17


state 4

    (20) statement -> VAR . EQUALS NUM SEMICOLON
    (22) statement -> VAR . EQUALS expr SEMICOLON
    (34) statement -> VAR . PLUS EQUALS factor SEMICOLON
    (35) statement -> VAR . MINUS EQUALS factor SEMICOLON
    (36) statement -> VAR . PLUS PLUS SEMICOLON
    (37) statement -> VAR . MINUS MINUS SEMICOLON
    (55) statement -> VAR . EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (14) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (15) f_statement -> VAR . EQUALS f_statement
    (52) array -> VAR . LBRACKET NUM RBRACKET
    (53) array -> VAR . LBRACKET VAR RBRACKET

    EQUALS          shift and go to state 18
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    LPAREN          shift and go to state 21
    LBRACKET        shift and go to state 22


state 5

    (13) statement -> f_statement .

    INT             reduce using rule 13 (statement -> f_statement .)
    VAR             reduce using rule 13 (statement -> f_statement .)
    IF              reduce using rule 13 (statement -> f_statement .)
    ELSE            reduce using rule 13 (statement -> f_statement .)
    FOR             reduce using rule 13 (statement -> f_statement .)
    WHILE           reduce using rule 13 (statement -> f_statement .)
    RETURN          reduce using rule 13 (statement -> f_statement .)
    LB              reduce using rule 13 (statement -> f_statement .)
    RB              reduce using rule 13 (statement -> f_statement .)
    COUT            reduce using rule 13 (statement -> f_statement .)
    $end            reduce using rule 13 (statement -> f_statement .)


state 6

    (21) statement -> array . EQUALS NUM SEMICOLON
    (23) statement -> array . EQUALS expr SEMICOLON

    EQUALS          shift and go to state 23


state 7

    (24) statement -> IF . LPAREN condition RPAREN

    LPAREN          shift and go to state 24


state 8

    (25) statement -> ELSE .

    INT             reduce using rule 25 (statement -> ELSE .)
    VAR             reduce using rule 25 (statement -> ELSE .)
    IF              reduce using rule 25 (statement -> ELSE .)
    ELSE            reduce using rule 25 (statement -> ELSE .)
    FOR             reduce using rule 25 (statement -> ELSE .)
    WHILE           reduce using rule 25 (statement -> ELSE .)
    RETURN          reduce using rule 25 (statement -> ELSE .)
    LB              reduce using rule 25 (statement -> ELSE .)
    RB              reduce using rule 25 (statement -> ELSE .)
    COUT            reduce using rule 25 (statement -> ELSE .)
    $end            reduce using rule 25 (statement -> ELSE .)


state 9

    (26) statement -> FOR . LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    LPAREN          shift and go to state 25


state 10

    (27) statement -> WHILE . LPAREN condition RPAREN

    LPAREN          shift and go to state 26


state 11

    (33) statement -> RETURN . expr SEMICOLON
    (42) expr -> . expr PLUS term
    (43) expr -> . expr MINUS term
    (44) expr -> . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    expr                           shift and go to state 27
    term                           shift and go to state 28
    factor                         shift and go to state 29
    array                          shift and go to state 33

state 12

    (40) statement -> LB .

    INT             reduce using rule 40 (statement -> LB .)
    VAR             reduce using rule 40 (statement -> LB .)
    IF              reduce using rule 40 (statement -> LB .)
    ELSE            reduce using rule 40 (statement -> LB .)
    FOR             reduce using rule 40 (statement -> LB .)
    WHILE           reduce using rule 40 (statement -> LB .)
    RETURN          reduce using rule 40 (statement -> LB .)
    LB              reduce using rule 40 (statement -> LB .)
    RB              reduce using rule 40 (statement -> LB .)
    COUT            reduce using rule 40 (statement -> LB .)
    $end            reduce using rule 40 (statement -> LB .)


state 13

    (41) statement -> RB .

    INT             reduce using rule 41 (statement -> RB .)
    VAR             reduce using rule 41 (statement -> RB .)
    IF              reduce using rule 41 (statement -> RB .)
    ELSE            reduce using rule 41 (statement -> RB .)
    FOR             reduce using rule 41 (statement -> RB .)
    WHILE           reduce using rule 41 (statement -> RB .)
    RETURN          reduce using rule 41 (statement -> RB .)
    LB              reduce using rule 41 (statement -> RB .)
    RB              reduce using rule 41 (statement -> RB .)
    COUT            reduce using rule 41 (statement -> RB .)
    $end            reduce using rule 41 (statement -> RB .)


state 14

    (60) statement -> COUT . p_content SEMICOLON
    (56) p_content -> . LESS LESS VAR p_content
    (57) p_content -> . LESS LESS SENTENCE p_content
    (58) p_content -> . LESS LESS ENDL
    (59) p_content -> .

    LESS            shift and go to state 35
    SEMICOLON       reduce using rule 59 (p_content -> .)

    p_content                      shift and go to state 34

state 15

    (2) program -> program statement .

    INT             reduce using rule 2 (program -> program statement .)
    VAR             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    ELSE            reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    LB              reduce using rule 2 (program -> program statement .)
    RB              reduce using rule 2 (program -> program statement .)
    COUT            reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 16

    (3) statement -> INT VAR . LPAREN params RPAREN SEMICOLON
    (4) statement -> INT VAR . LPAREN params RPAREN
    (16) statement -> INT VAR . SEMICOLON
    (17) statement -> INT VAR . EQUALS NUM SEMICOLON
    (18) statement -> INT VAR . EQUALS VAR SEMICOLON
    (19) statement -> INT VAR . EQUALS expr SEMICOLON

    LPAREN          shift and go to state 36
    SEMICOLON       shift and go to state 37
    EQUALS          shift and go to state 38


state 17

    (54) statement -> INT STAR . VAR SEMICOLON

    VAR             shift and go to state 39


state 18

    (20) statement -> VAR EQUALS . NUM SEMICOLON
    (22) statement -> VAR EQUALS . expr SEMICOLON
    (55) statement -> VAR EQUALS . LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (15) f_statement -> VAR EQUALS . f_statement
    (42) expr -> . expr PLUS term
    (43) expr -> . expr MINUS term
    (44) expr -> . term
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    NUM             shift and go to state 41
    LPAREN          shift and go to state 43
    VAR             shift and go to state 40

    expr                           shift and go to state 42
    factor                         shift and go to state 29
    f_statement                    shift and go to state 44
    term                           shift and go to state 28
    array                          shift and go to state 33

state 19

    (34) statement -> VAR PLUS . EQUALS factor SEMICOLON
    (36) statement -> VAR PLUS . PLUS SEMICOLON

    EQUALS          shift and go to state 46
    PLUS            shift and go to state 45


state 20

    (35) statement -> VAR MINUS . EQUALS factor SEMICOLON
    (37) statement -> VAR MINUS . MINUS SEMICOLON

    EQUALS          shift and go to state 48
    MINUS           shift and go to state 47


state 21

    (14) f_statement -> VAR LPAREN . args RPAREN SEMICOLON
    (8) args -> . VAR
    (9) args -> . args COMMA VAR
    (10) args -> . NUM
    (11) args -> . args COMMA NUM
    (12) args -> .

    VAR             shift and go to state 49
    NUM             shift and go to state 51
    RPAREN          reduce using rule 12 (args -> .)
    COMMA           reduce using rule 12 (args -> .)

    args                           shift and go to state 50

state 22

    (52) array -> VAR LBRACKET . NUM RBRACKET
    (53) array -> VAR LBRACKET . VAR RBRACKET

    NUM             shift and go to state 53
    VAR             shift and go to state 52


state 23

    (21) statement -> array EQUALS . NUM SEMICOLON
    (23) statement -> array EQUALS . expr SEMICOLON
    (42) expr -> . expr PLUS term
    (43) expr -> . expr MINUS term
    (44) expr -> . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    NUM             shift and go to state 54
    LPAREN          shift and go to state 30
    VAR             shift and go to state 32

    array                          shift and go to state 33
    expr                           shift and go to state 55
    term                           shift and go to state 28
    factor                         shift and go to state 29

state 24

    (24) statement -> IF LPAREN . condition RPAREN
    (28) condition -> . factor GREATER factor
    (29) condition -> . factor LESS factor
    (30) condition -> . factor EQUALS EQUALS factor
    (31) condition -> . factor GREATER EQUALS factor
    (32) condition -> . factor LESS EQUALS factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    condition                      shift and go to state 56
    factor                         shift and go to state 57
    array                          shift and go to state 33

state 25

    (26) statement -> FOR LPAREN . INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    INT             shift and go to state 58


state 26

    (27) statement -> WHILE LPAREN . condition RPAREN
    (28) condition -> . factor GREATER factor
    (29) condition -> . factor LESS factor
    (30) condition -> . factor EQUALS EQUALS factor
    (31) condition -> . factor GREATER EQUALS factor
    (32) condition -> . factor LESS EQUALS factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    condition                      shift and go to state 59
    factor                         shift and go to state 57
    array                          shift and go to state 33

state 27

    (33) statement -> RETURN expr . SEMICOLON
    (42) expr -> expr . PLUS term
    (43) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62


state 28

    (44) expr -> term .
    (45) term -> term . STAR factor
    (46) term -> term . DIV factor

    SEMICOLON       reduce using rule 44 (expr -> term .)
    PLUS            reduce using rule 44 (expr -> term .)
    MINUS           reduce using rule 44 (expr -> term .)
    RPAREN          reduce using rule 44 (expr -> term .)
    STAR            shift and go to state 63
    DIV             shift and go to state 64


state 29

    (47) term -> factor .

    STAR            reduce using rule 47 (term -> factor .)
    DIV             reduce using rule 47 (term -> factor .)
    SEMICOLON       reduce using rule 47 (term -> factor .)
    PLUS            reduce using rule 47 (term -> factor .)
    MINUS           reduce using rule 47 (term -> factor .)
    RPAREN          reduce using rule 47 (term -> factor .)


state 30

    (48) factor -> LPAREN . expr RPAREN
    (42) expr -> . expr PLUS term
    (43) expr -> . expr MINUS term
    (44) expr -> . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    expr                           shift and go to state 65
    term                           shift and go to state 28
    factor                         shift and go to state 29
    array                          shift and go to state 33

state 31

    (49) factor -> NUM .

    STAR            reduce using rule 49 (factor -> NUM .)
    DIV             reduce using rule 49 (factor -> NUM .)
    SEMICOLON       reduce using rule 49 (factor -> NUM .)
    PLUS            reduce using rule 49 (factor -> NUM .)
    MINUS           reduce using rule 49 (factor -> NUM .)
    GREATER         reduce using rule 49 (factor -> NUM .)
    LESS            reduce using rule 49 (factor -> NUM .)
    EQUALS          reduce using rule 49 (factor -> NUM .)
    RPAREN          reduce using rule 49 (factor -> NUM .)


state 32

    (50) factor -> VAR .
    (52) array -> VAR . LBRACKET NUM RBRACKET
    (53) array -> VAR . LBRACKET VAR RBRACKET

    STAR            reduce using rule 50 (factor -> VAR .)
    DIV             reduce using rule 50 (factor -> VAR .)
    SEMICOLON       reduce using rule 50 (factor -> VAR .)
    PLUS            reduce using rule 50 (factor -> VAR .)
    MINUS           reduce using rule 50 (factor -> VAR .)
    GREATER         reduce using rule 50 (factor -> VAR .)
    LESS            reduce using rule 50 (factor -> VAR .)
    EQUALS          reduce using rule 50 (factor -> VAR .)
    RPAREN          reduce using rule 50 (factor -> VAR .)
    LBRACKET        shift and go to state 22


state 33

    (51) factor -> array .

    STAR            reduce using rule 51 (factor -> array .)
    DIV             reduce using rule 51 (factor -> array .)
    SEMICOLON       reduce using rule 51 (factor -> array .)
    PLUS            reduce using rule 51 (factor -> array .)
    MINUS           reduce using rule 51 (factor -> array .)
    GREATER         reduce using rule 51 (factor -> array .)
    LESS            reduce using rule 51 (factor -> array .)
    EQUALS          reduce using rule 51 (factor -> array .)
    RPAREN          reduce using rule 51 (factor -> array .)


state 34

    (60) statement -> COUT p_content . SEMICOLON

    SEMICOLON       shift and go to state 66


state 35

    (56) p_content -> LESS . LESS VAR p_content
    (57) p_content -> LESS . LESS SENTENCE p_content
    (58) p_content -> LESS . LESS ENDL

    LESS            shift and go to state 67


state 36

    (3) statement -> INT VAR LPAREN . params RPAREN SEMICOLON
    (4) statement -> INT VAR LPAREN . params RPAREN
    (5) params -> . INT VAR
    (6) params -> . params COMMA INT VAR
    (7) params -> .

    INT             shift and go to state 68
    RPAREN          reduce using rule 7 (params -> .)
    COMMA           reduce using rule 7 (params -> .)

    params                         shift and go to state 69

state 37

    (16) statement -> INT VAR SEMICOLON .

    INT             reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    VAR             reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    IF              reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    ELSE            reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    FOR             reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    RETURN          reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    LB              reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    RB              reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    COUT            reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    $end            reduce using rule 16 (statement -> INT VAR SEMICOLON .)


state 38

    (17) statement -> INT VAR EQUALS . NUM SEMICOLON
    (18) statement -> INT VAR EQUALS . VAR SEMICOLON
    (19) statement -> INT VAR EQUALS . expr SEMICOLON
    (42) expr -> . expr PLUS term
    (43) expr -> . expr MINUS term
    (44) expr -> . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    NUM             shift and go to state 71
    VAR             shift and go to state 70
    LPAREN          shift and go to state 30

    expr                           shift and go to state 72
    term                           shift and go to state 28
    factor                         shift and go to state 29
    array                          shift and go to state 33

state 39

    (54) statement -> INT STAR VAR . SEMICOLON

    SEMICOLON       shift and go to state 73


state 40

    (14) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (15) f_statement -> VAR . EQUALS f_statement
    (50) factor -> VAR .
    (52) array -> VAR . LBRACKET NUM RBRACKET
    (53) array -> VAR . LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 21
    EQUALS          shift and go to state 74
    STAR            reduce using rule 50 (factor -> VAR .)
    DIV             reduce using rule 50 (factor -> VAR .)
    SEMICOLON       reduce using rule 50 (factor -> VAR .)
    PLUS            reduce using rule 50 (factor -> VAR .)
    MINUS           reduce using rule 50 (factor -> VAR .)
    LBRACKET        shift and go to state 22


state 41

    (20) statement -> VAR EQUALS NUM . SEMICOLON
    (49) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 75
    STAR            reduce using rule 49 (factor -> NUM .)
    DIV             reduce using rule 49 (factor -> NUM .)
    PLUS            reduce using rule 49 (factor -> NUM .)
    MINUS           reduce using rule 49 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 49 (factor -> NUM .) ]


state 42

    (22) statement -> VAR EQUALS expr . SEMICOLON
    (42) expr -> expr . PLUS term
    (43) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 76
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62


state 43

    (55) statement -> VAR EQUALS LPAREN . INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (48) factor -> LPAREN . expr RPAREN
    (42) expr -> . expr PLUS term
    (43) expr -> . expr MINUS term
    (44) expr -> . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    INT             shift and go to state 77
    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 29
    expr                           shift and go to state 65
    term                           shift and go to state 28
    array                          shift and go to state 33

state 44

    (15) f_statement -> VAR EQUALS f_statement .

    INT             reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    VAR             reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    IF              reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    ELSE            reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    FOR             reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    WHILE           reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    RETURN          reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    LB              reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    RB              reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    COUT            reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    $end            reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)


state 45

    (36) statement -> VAR PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 78


state 46

    (34) statement -> VAR PLUS EQUALS . factor SEMICOLON
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 79
    array                          shift and go to state 33

state 47

    (37) statement -> VAR MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 80


state 48

    (35) statement -> VAR MINUS EQUALS . factor SEMICOLON
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 81
    array                          shift and go to state 33

state 49

    (8) args -> VAR .

    RPAREN          reduce using rule 8 (args -> VAR .)
    COMMA           reduce using rule 8 (args -> VAR .)


state 50

    (14) f_statement -> VAR LPAREN args . RPAREN SEMICOLON
    (9) args -> args . COMMA VAR
    (11) args -> args . COMMA NUM

    RPAREN          shift and go to state 82
    COMMA           shift and go to state 83


state 51

    (10) args -> NUM .

    RPAREN          reduce using rule 10 (args -> NUM .)
    COMMA           reduce using rule 10 (args -> NUM .)


state 52

    (53) array -> VAR LBRACKET VAR . RBRACKET

    RBRACKET        shift and go to state 84


state 53

    (52) array -> VAR LBRACKET NUM . RBRACKET

    RBRACKET        shift and go to state 85


state 54

    (21) statement -> array EQUALS NUM . SEMICOLON
    (49) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 86
    STAR            reduce using rule 49 (factor -> NUM .)
    DIV             reduce using rule 49 (factor -> NUM .)
    PLUS            reduce using rule 49 (factor -> NUM .)
    MINUS           reduce using rule 49 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 49 (factor -> NUM .) ]


state 55

    (23) statement -> array EQUALS expr . SEMICOLON
    (42) expr -> expr . PLUS term
    (43) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 87
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62


state 56

    (24) statement -> IF LPAREN condition . RPAREN

    RPAREN          shift and go to state 88


state 57

    (28) condition -> factor . GREATER factor
    (29) condition -> factor . LESS factor
    (30) condition -> factor . EQUALS EQUALS factor
    (31) condition -> factor . GREATER EQUALS factor
    (32) condition -> factor . LESS EQUALS factor

    GREATER         shift and go to state 89
    LESS            shift and go to state 90
    EQUALS          shift and go to state 91


state 58

    (26) statement -> FOR LPAREN INT . VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    VAR             shift and go to state 92


state 59

    (27) statement -> WHILE LPAREN condition . RPAREN

    RPAREN          shift and go to state 93


state 60

    (33) statement -> RETURN expr SEMICOLON .

    INT             reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    VAR             reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    IF              reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    LB              reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    RB              reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    COUT            reduce using rule 33 (statement -> RETURN expr SEMICOLON .)
    $end            reduce using rule 33 (statement -> RETURN expr SEMICOLON .)


state 61

    (42) expr -> expr PLUS . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    term                           shift and go to state 94
    factor                         shift and go to state 29
    array                          shift and go to state 33

state 62

    (43) expr -> expr MINUS . term
    (45) term -> . term STAR factor
    (46) term -> . term DIV factor
    (47) term -> . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    term                           shift and go to state 95
    factor                         shift and go to state 29
    array                          shift and go to state 33

state 63

    (45) term -> term STAR . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 96
    array                          shift and go to state 33

state 64

    (46) term -> term DIV . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 97
    array                          shift and go to state 33

state 65

    (48) factor -> LPAREN expr . RPAREN
    (42) expr -> expr . PLUS term
    (43) expr -> expr . MINUS term

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62


state 66

    (60) statement -> COUT p_content SEMICOLON .

    INT             reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    VAR             reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    IF              reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    ELSE            reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    FOR             reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    WHILE           reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    RETURN          reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    LB              reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    RB              reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    COUT            reduce using rule 60 (statement -> COUT p_content SEMICOLON .)
    $end            reduce using rule 60 (statement -> COUT p_content SEMICOLON .)


state 67

    (56) p_content -> LESS LESS . VAR p_content
    (57) p_content -> LESS LESS . SENTENCE p_content
    (58) p_content -> LESS LESS . ENDL

    VAR             shift and go to state 99
    SENTENCE        shift and go to state 100
    ENDL            shift and go to state 101


state 68

    (5) params -> INT . VAR

    VAR             shift and go to state 102


state 69

    (3) statement -> INT VAR LPAREN params . RPAREN SEMICOLON
    (4) statement -> INT VAR LPAREN params . RPAREN
    (6) params -> params . COMMA INT VAR

    RPAREN          shift and go to state 103
    COMMA           shift and go to state 104


state 70

    (18) statement -> INT VAR EQUALS VAR . SEMICOLON
    (50) factor -> VAR .
    (52) array -> VAR . LBRACKET NUM RBRACKET
    (53) array -> VAR . LBRACKET VAR RBRACKET

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 105
    STAR            reduce using rule 50 (factor -> VAR .)
    DIV             reduce using rule 50 (factor -> VAR .)
    PLUS            reduce using rule 50 (factor -> VAR .)
    MINUS           reduce using rule 50 (factor -> VAR .)
    LBRACKET        shift and go to state 22

  ! SEMICOLON       [ reduce using rule 50 (factor -> VAR .) ]


state 71

    (17) statement -> INT VAR EQUALS NUM . SEMICOLON
    (49) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 106
    STAR            reduce using rule 49 (factor -> NUM .)
    DIV             reduce using rule 49 (factor -> NUM .)
    PLUS            reduce using rule 49 (factor -> NUM .)
    MINUS           reduce using rule 49 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 49 (factor -> NUM .) ]


state 72

    (19) statement -> INT VAR EQUALS expr . SEMICOLON
    (42) expr -> expr . PLUS term
    (43) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 107
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62


state 73

    (54) statement -> INT STAR VAR SEMICOLON .

    INT             reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    VAR             reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    IF              reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    ELSE            reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    FOR             reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    WHILE           reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    RETURN          reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    LB              reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    RB              reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    COUT            reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)
    $end            reduce using rule 54 (statement -> INT STAR VAR SEMICOLON .)


state 74

    (15) f_statement -> VAR EQUALS . f_statement
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement

    VAR             shift and go to state 108

    f_statement                    shift and go to state 44

state 75

    (20) statement -> VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)


state 76

    (22) statement -> VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 22 (statement -> VAR EQUALS expr SEMICOLON .)


state 77

    (55) statement -> VAR EQUALS LPAREN INT . STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    STAR            shift and go to state 109


state 78

    (36) statement -> VAR PLUS PLUS SEMICOLON .

    INT             reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    IF              reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    LB              reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    RB              reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    COUT            reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)
    $end            reduce using rule 36 (statement -> VAR PLUS PLUS SEMICOLON .)


state 79

    (34) statement -> VAR PLUS EQUALS factor . SEMICOLON

    SEMICOLON       shift and go to state 110


state 80

    (37) statement -> VAR MINUS MINUS SEMICOLON .

    INT             reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    VAR             reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    IF              reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    LB              reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    RB              reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    COUT            reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)
    $end            reduce using rule 37 (statement -> VAR MINUS MINUS SEMICOLON .)


state 81

    (35) statement -> VAR MINUS EQUALS factor . SEMICOLON

    SEMICOLON       shift and go to state 111


state 82

    (14) f_statement -> VAR LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 112


state 83

    (9) args -> args COMMA . VAR
    (11) args -> args COMMA . NUM

    VAR             shift and go to state 113
    NUM             shift and go to state 114


state 84

    (53) array -> VAR LBRACKET VAR RBRACKET .

    EQUALS          reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    STAR            reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    DIV             reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    SEMICOLON       reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    PLUS            reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    MINUS           reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    GREATER         reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    LESS            reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)
    RPAREN          reduce using rule 53 (array -> VAR LBRACKET VAR RBRACKET .)


state 85

    (52) array -> VAR LBRACKET NUM RBRACKET .

    EQUALS          reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    STAR            reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    DIV             reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    SEMICOLON       reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    PLUS            reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    MINUS           reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    GREATER         reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    LESS            reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)
    RPAREN          reduce using rule 52 (array -> VAR LBRACKET NUM RBRACKET .)


state 86

    (21) statement -> array EQUALS NUM SEMICOLON .

    INT             reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    IF              reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    LB              reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    RB              reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)
    $end            reduce using rule 21 (statement -> array EQUALS NUM SEMICOLON .)


state 87

    (23) statement -> array EQUALS expr SEMICOLON .

    INT             reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    VAR             reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    IF              reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    FOR             reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    LB              reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    RB              reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    COUT            reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)
    $end            reduce using rule 23 (statement -> array EQUALS expr SEMICOLON .)


state 88

    (24) statement -> IF LPAREN condition RPAREN .

    INT             reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    VAR             reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    IF              reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    ELSE            reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    FOR             reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    WHILE           reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    RETURN          reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    LB              reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    RB              reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    COUT            reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)
    $end            reduce using rule 24 (statement -> IF LPAREN condition RPAREN .)


state 89

    (28) condition -> factor GREATER . factor
    (31) condition -> factor GREATER . EQUALS factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    EQUALS          shift and go to state 116
    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 115
    array                          shift and go to state 33

state 90

    (29) condition -> factor LESS . factor
    (32) condition -> factor LESS . EQUALS factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    EQUALS          shift and go to state 118
    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 117
    array                          shift and go to state 33

state 91

    (30) condition -> factor EQUALS . EQUALS factor

    EQUALS          shift and go to state 119


state 92

    (26) statement -> FOR LPAREN INT VAR . EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    EQUALS          shift and go to state 120


state 93

    (27) statement -> WHILE LPAREN condition RPAREN .

    INT             reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    VAR             reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    IF              reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    ELSE            reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    FOR             reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    WHILE           reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    RETURN          reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    LB              reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    RB              reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    COUT            reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)
    $end            reduce using rule 27 (statement -> WHILE LPAREN condition RPAREN .)


state 94

    (42) expr -> expr PLUS term .
    (45) term -> term . STAR factor
    (46) term -> term . DIV factor

    SEMICOLON       reduce using rule 42 (expr -> expr PLUS term .)
    PLUS            reduce using rule 42 (expr -> expr PLUS term .)
    MINUS           reduce using rule 42 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 42 (expr -> expr PLUS term .)
    STAR            shift and go to state 63
    DIV             shift and go to state 64


state 95

    (43) expr -> expr MINUS term .
    (45) term -> term . STAR factor
    (46) term -> term . DIV factor

    SEMICOLON       reduce using rule 43 (expr -> expr MINUS term .)
    PLUS            reduce using rule 43 (expr -> expr MINUS term .)
    MINUS           reduce using rule 43 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 43 (expr -> expr MINUS term .)
    STAR            shift and go to state 63
    DIV             shift and go to state 64


state 96

    (45) term -> term STAR factor .

    STAR            reduce using rule 45 (term -> term STAR factor .)
    DIV             reduce using rule 45 (term -> term STAR factor .)
    SEMICOLON       reduce using rule 45 (term -> term STAR factor .)
    PLUS            reduce using rule 45 (term -> term STAR factor .)
    MINUS           reduce using rule 45 (term -> term STAR factor .)
    RPAREN          reduce using rule 45 (term -> term STAR factor .)


state 97

    (46) term -> term DIV factor .

    STAR            reduce using rule 46 (term -> term DIV factor .)
    DIV             reduce using rule 46 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 46 (term -> term DIV factor .)
    PLUS            reduce using rule 46 (term -> term DIV factor .)
    MINUS           reduce using rule 46 (term -> term DIV factor .)
    RPAREN          reduce using rule 46 (term -> term DIV factor .)


state 98

    (48) factor -> LPAREN expr RPAREN .

    STAR            reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    DIV             reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    GREATER         reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    LESS            reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    EQUALS          reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 48 (factor -> LPAREN expr RPAREN .)


state 99

    (56) p_content -> LESS LESS VAR . p_content
    (56) p_content -> . LESS LESS VAR p_content
    (57) p_content -> . LESS LESS SENTENCE p_content
    (58) p_content -> . LESS LESS ENDL
    (59) p_content -> .

    LESS            shift and go to state 35
    SEMICOLON       reduce using rule 59 (p_content -> .)

    p_content                      shift and go to state 121

state 100

    (57) p_content -> LESS LESS SENTENCE . p_content
    (56) p_content -> . LESS LESS VAR p_content
    (57) p_content -> . LESS LESS SENTENCE p_content
    (58) p_content -> . LESS LESS ENDL
    (59) p_content -> .

    LESS            shift and go to state 35
    SEMICOLON       reduce using rule 59 (p_content -> .)

    p_content                      shift and go to state 122

state 101

    (58) p_content -> LESS LESS ENDL .

    SEMICOLON       reduce using rule 58 (p_content -> LESS LESS ENDL .)


state 102

    (5) params -> INT VAR .

    RPAREN          reduce using rule 5 (params -> INT VAR .)
    COMMA           reduce using rule 5 (params -> INT VAR .)


state 103

    (3) statement -> INT VAR LPAREN params RPAREN . SEMICOLON
    (4) statement -> INT VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 123
    INT             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    VAR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    IF              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    FOR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    LB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    RB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    COUT            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    $end            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)


state 104

    (6) params -> params COMMA . INT VAR

    INT             shift and go to state 124


state 105

    (18) statement -> INT VAR EQUALS VAR SEMICOLON .

    INT             reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    VAR             reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    IF              reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    ELSE            reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    FOR             reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    WHILE           reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    LB              reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RB              reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    COUT            reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    $end            reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)


state 106

    (17) statement -> INT VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)


state 107

    (19) statement -> INT VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)


state 108

    (14) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (15) f_statement -> VAR . EQUALS f_statement

    LPAREN          shift and go to state 21
    EQUALS          shift and go to state 74


state 109

    (55) statement -> VAR EQUALS LPAREN INT STAR . RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    RPAREN          shift and go to state 125


state 110

    (34) statement -> VAR PLUS EQUALS factor SEMICOLON .

    INT             reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    VAR             reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    IF              reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    FOR             reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    LB              reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    RB              reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    COUT            reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)
    $end            reduce using rule 34 (statement -> VAR PLUS EQUALS factor SEMICOLON .)


state 111

    (35) statement -> VAR MINUS EQUALS factor SEMICOLON .

    INT             reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    VAR             reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    IF              reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    FOR             reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    LB              reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    RB              reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    COUT            reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)
    $end            reduce using rule 35 (statement -> VAR MINUS EQUALS factor SEMICOLON .)


state 112

    (14) f_statement -> VAR LPAREN args RPAREN SEMICOLON .

    INT             reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VAR             reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    ELSE            reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    LB              reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RB              reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    COUT            reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)


state 113

    (9) args -> args COMMA VAR .

    RPAREN          reduce using rule 9 (args -> args COMMA VAR .)
    COMMA           reduce using rule 9 (args -> args COMMA VAR .)


state 114

    (11) args -> args COMMA NUM .

    RPAREN          reduce using rule 11 (args -> args COMMA NUM .)
    COMMA           reduce using rule 11 (args -> args COMMA NUM .)


state 115

    (28) condition -> factor GREATER factor .

    RPAREN          reduce using rule 28 (condition -> factor GREATER factor .)
    SEMICOLON       reduce using rule 28 (condition -> factor GREATER factor .)


state 116

    (31) condition -> factor GREATER EQUALS . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 126
    array                          shift and go to state 33

state 117

    (29) condition -> factor LESS factor .

    RPAREN          reduce using rule 29 (condition -> factor LESS factor .)
    SEMICOLON       reduce using rule 29 (condition -> factor LESS factor .)


state 118

    (32) condition -> factor LESS EQUALS . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 127
    array                          shift and go to state 33

state 119

    (30) condition -> factor EQUALS EQUALS . factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 128
    array                          shift and go to state 33

state 120

    (26) statement -> FOR LPAREN INT VAR EQUALS . NUM SEMICOLON condition SEMICOLON for_update RPAREN

    NUM             shift and go to state 129


state 121

    (56) p_content -> LESS LESS VAR p_content .

    SEMICOLON       reduce using rule 56 (p_content -> LESS LESS VAR p_content .)


state 122

    (57) p_content -> LESS LESS SENTENCE p_content .

    SEMICOLON       reduce using rule 57 (p_content -> LESS LESS SENTENCE p_content .)


state 123

    (3) statement -> INT VAR LPAREN params RPAREN SEMICOLON .

    INT             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)


state 124

    (6) params -> params COMMA INT . VAR

    VAR             shift and go to state 130


state 125

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN . MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    MALLOC          shift and go to state 131


state 126

    (31) condition -> factor GREATER EQUALS factor .

    RPAREN          reduce using rule 31 (condition -> factor GREATER EQUALS factor .)
    SEMICOLON       reduce using rule 31 (condition -> factor GREATER EQUALS factor .)


state 127

    (32) condition -> factor LESS EQUALS factor .

    RPAREN          reduce using rule 32 (condition -> factor LESS EQUALS factor .)
    SEMICOLON       reduce using rule 32 (condition -> factor LESS EQUALS factor .)


state 128

    (30) condition -> factor EQUALS EQUALS factor .

    RPAREN          reduce using rule 30 (condition -> factor EQUALS EQUALS factor .)
    SEMICOLON       reduce using rule 30 (condition -> factor EQUALS EQUALS factor .)


state 129

    (26) statement -> FOR LPAREN INT VAR EQUALS NUM . SEMICOLON condition SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 132


state 130

    (6) params -> params COMMA INT VAR .

    RPAREN          reduce using rule 6 (params -> params COMMA INT VAR .)
    COMMA           reduce using rule 6 (params -> params COMMA INT VAR .)


state 131

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC . LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    LPAREN          shift and go to state 133


state 132

    (26) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON . condition SEMICOLON for_update RPAREN
    (28) condition -> . factor GREATER factor
    (29) condition -> . factor LESS factor
    (30) condition -> . factor EQUALS EQUALS factor
    (31) condition -> . factor GREATER EQUALS factor
    (32) condition -> . factor LESS EQUALS factor
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    condition                      shift and go to state 134
    factor                         shift and go to state 57
    array                          shift and go to state 33

state 133

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN . SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    SIZEOF          shift and go to state 135


state 134

    (26) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition . SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 136


state 135

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF . LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    LPAREN          shift and go to state 137


state 136

    (26) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON . for_update RPAREN
    (38) for_update -> . VAR PLUS PLUS
    (39) for_update -> . VAR MINUS MINUS

    VAR             shift and go to state 138

    for_update                     shift and go to state 139

state 137

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN . INT RPAREN STAR factor RPAREN SEMICOLON

    INT             shift and go to state 140


state 138

    (38) for_update -> VAR . PLUS PLUS
    (39) for_update -> VAR . MINUS MINUS

    PLUS            shift and go to state 141
    MINUS           shift and go to state 142


state 139

    (26) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update . RPAREN

    RPAREN          shift and go to state 143


state 140

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT . RPAREN STAR factor RPAREN SEMICOLON

    RPAREN          shift and go to state 144


state 141

    (38) for_update -> VAR PLUS . PLUS

    PLUS            shift and go to state 145


state 142

    (39) for_update -> VAR MINUS . MINUS

    MINUS           shift and go to state 146


state 143

    (26) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .

    INT             reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    VAR             reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    IF              reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    ELSE            reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    FOR             reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    WHILE           reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RETURN          reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    LB              reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RB              reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    COUT            reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    $end            reduce using rule 26 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)


state 144

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN . STAR factor RPAREN SEMICOLON

    STAR            shift and go to state 147


state 145

    (38) for_update -> VAR PLUS PLUS .

    RPAREN          reduce using rule 38 (for_update -> VAR PLUS PLUS .)


state 146

    (39) for_update -> VAR MINUS MINUS .

    RPAREN          reduce using rule 39 (for_update -> VAR MINUS MINUS .)


state 147

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR . factor RPAREN SEMICOLON
    (48) factor -> . LPAREN expr RPAREN
    (49) factor -> . NUM
    (50) factor -> . VAR
    (51) factor -> . array
    (52) array -> . VAR LBRACKET NUM RBRACKET
    (53) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 30
    NUM             shift and go to state 31
    VAR             shift and go to state 32

    factor                         shift and go to state 148
    array                          shift and go to state 33

state 148

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 149

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 150


state 150

    (55) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .

    INT             reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    VAR             reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    IF              reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    ELSE            reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    FOR             reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    LB              reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    RB              reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    COUT            reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    $end            reduce using rule 55 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 41 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 54 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 70 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 71 resolved as shift
