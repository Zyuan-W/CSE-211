Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    IGNORE_CONTENT
    PRINT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> INT VAR LPAREN params RPAREN SEMICOLON
Rule 4     statement -> INT VAR LPAREN params RPAREN
Rule 5     params -> INT VAR
Rule 6     params -> params COMMA INT VAR
Rule 7     params -> <empty>
Rule 8     args -> VAR
Rule 9     args -> args COMMA VAR
Rule 10    args -> NUM
Rule 11    args -> args COMMA NUM
Rule 12    args -> <empty>
Rule 13    statement -> f_statement
Rule 14    f_statement -> VAR LPAREN args RPAREN SEMICOLON
Rule 15    f_statement -> VAR EQUALS f_statement
Rule 16    statement -> INT VAR SEMICOLON
Rule 17    statement -> INT VAR EQUALS NUM SEMICOLON
Rule 18    statement -> INT VAR EQUALS VAR SEMICOLON
Rule 19    statement -> INT VAR EQUALS expr SEMICOLON
Rule 20    statement -> VAR EQUALS NUM SEMICOLON
Rule 21    statement -> VAR EQUALS expr SEMICOLON
Rule 22    statement -> VAR PLUS PLUS SEMICOLON
Rule 23    statement -> IF LPAREN condition RPAREN
Rule 24    statement -> ELSE
Rule 25    statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
Rule 26    statement -> WHILE LPAREN condition RPAREN
Rule 27    condition -> VAR GREATER NUM
Rule 28    condition -> VAR LESS NUM
Rule 29    condition -> VAR GREATER VAR
Rule 30    condition -> VAR LESS VAR
Rule 31    condition -> VAR EQUALS EQUALS NUM
Rule 32    statement -> RETURN expr SEMICOLON
Rule 33    for_update -> VAR PLUS PLUS
Rule 34    statement -> LB
Rule 35    statement -> RB
Rule 36    expr -> expr PLUS term
Rule 37    expr -> expr MINUS term
Rule 38    expr -> term
Rule 39    term -> term STAR factor
Rule 40    term -> term DIV factor
Rule 41    term -> factor
Rule 42    factor -> LPAREN expr RPAREN
Rule 43    factor -> NUM
Rule 44    factor -> VAR
Rule 45    factor -> VAR LBRACKET factor RBRACKET
Rule 46    statement -> INT STAR VAR SEMICOLON
Rule 47    p_content -> LESS LESS VAR p_content
Rule 48    p_content -> LESS LESS SENTENCE p_content
Rule 49    p_content -> LESS LESS ENDL
Rule 50    p_content -> <empty>
Rule 51    statement -> COUT p_content SEMICOLON

Terminals, with rules where they appear

COMMA                : 6 9 11
COUT                 : 51
DIV                  : 40
ELSE                 : 24
ENDL                 : 49
EQUALS               : 15 17 18 19 20 21 25 31 31
FOR                  : 25
GREATER              : 27 29
IF                   : 23
IGNORE_CONTENT       : 
INT                  : 3 4 5 6 16 17 18 19 25 46
LB                   : 34
LBRACKET             : 45
LESS                 : 28 30 47 47 48 48 49 49
LPAREN               : 3 4 14 23 25 26 42
MINUS                : 37
NUM                  : 10 11 17 20 25 27 28 31 43
PLUS                 : 22 22 33 33 36
PRINT                : 
RB                   : 35
RBRACKET             : 45
RETURN               : 32
RPAREN               : 3 4 14 23 25 26 42
SEMICOLON            : 3 14 16 17 18 19 20 21 22 25 25 32 46 51
SENTENCE             : 48
STAR                 : 39 46
VAR                  : 3 4 5 6 8 9 14 15 16 17 18 18 19 20 21 22 25 27 28 29 29 30 30 31 33 44 45 46 47
WHILE                : 26
error                : 

Nonterminals, with rules where they appear

args                 : 9 11 14
condition            : 23 25 26
expr                 : 19 21 32 36 37 42
f_statement          : 13 15
factor               : 39 40 41 45
for_update           : 25
p_content            : 47 48 51
params               : 3 4 6
program              : 2 0
statement            : 1 2
term                 : 36 37 38 39 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . f_statement
    (16) statement -> . INT VAR SEMICOLON
    (17) statement -> . INT VAR EQUALS NUM SEMICOLON
    (18) statement -> . INT VAR EQUALS VAR SEMICOLON
    (19) statement -> . INT VAR EQUALS expr SEMICOLON
    (20) statement -> . VAR EQUALS NUM SEMICOLON
    (21) statement -> . VAR EQUALS expr SEMICOLON
    (22) statement -> . VAR PLUS PLUS SEMICOLON
    (23) statement -> . IF LPAREN condition RPAREN
    (24) statement -> . ELSE
    (25) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (26) statement -> . WHILE LPAREN condition RPAREN
    (32) statement -> . RETURN expr SEMICOLON
    (34) statement -> . LB
    (35) statement -> . RB
    (46) statement -> . INT STAR VAR SEMICOLON
    (51) statement -> . COUT p_content SEMICOLON
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    RETURN          shift and go to state 10
    LB              shift and go to state 11
    RB              shift and go to state 12
    COUT            shift and go to state 13

    program                        shift and go to state 1
    statement                      shift and go to state 2
    f_statement                    shift and go to state 5

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . f_statement
    (16) statement -> . INT VAR SEMICOLON
    (17) statement -> . INT VAR EQUALS NUM SEMICOLON
    (18) statement -> . INT VAR EQUALS VAR SEMICOLON
    (19) statement -> . INT VAR EQUALS expr SEMICOLON
    (20) statement -> . VAR EQUALS NUM SEMICOLON
    (21) statement -> . VAR EQUALS expr SEMICOLON
    (22) statement -> . VAR PLUS PLUS SEMICOLON
    (23) statement -> . IF LPAREN condition RPAREN
    (24) statement -> . ELSE
    (25) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (26) statement -> . WHILE LPAREN condition RPAREN
    (32) statement -> . RETURN expr SEMICOLON
    (34) statement -> . LB
    (35) statement -> . RB
    (46) statement -> . INT STAR VAR SEMICOLON
    (51) statement -> . COUT p_content SEMICOLON
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    RETURN          shift and go to state 10
    LB              shift and go to state 11
    RB              shift and go to state 12
    COUT            shift and go to state 13

    statement                      shift and go to state 14
    f_statement                    shift and go to state 5

state 2

    (1) program -> statement .

    INT             reduce using rule 1 (program -> statement .)
    VAR             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    ELSE            reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    LB              reduce using rule 1 (program -> statement .)
    RB              reduce using rule 1 (program -> statement .)
    COUT            reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> INT . VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> INT . VAR LPAREN params RPAREN
    (16) statement -> INT . VAR SEMICOLON
    (17) statement -> INT . VAR EQUALS NUM SEMICOLON
    (18) statement -> INT . VAR EQUALS VAR SEMICOLON
    (19) statement -> INT . VAR EQUALS expr SEMICOLON
    (46) statement -> INT . STAR VAR SEMICOLON

    VAR             shift and go to state 15
    STAR            shift and go to state 16


state 4

    (20) statement -> VAR . EQUALS NUM SEMICOLON
    (21) statement -> VAR . EQUALS expr SEMICOLON
    (22) statement -> VAR . PLUS PLUS SEMICOLON
    (14) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (15) f_statement -> VAR . EQUALS f_statement

    EQUALS          shift and go to state 17
    PLUS            shift and go to state 18
    LPAREN          shift and go to state 19


state 5

    (13) statement -> f_statement .

    INT             reduce using rule 13 (statement -> f_statement .)
    VAR             reduce using rule 13 (statement -> f_statement .)
    IF              reduce using rule 13 (statement -> f_statement .)
    ELSE            reduce using rule 13 (statement -> f_statement .)
    FOR             reduce using rule 13 (statement -> f_statement .)
    WHILE           reduce using rule 13 (statement -> f_statement .)
    RETURN          reduce using rule 13 (statement -> f_statement .)
    LB              reduce using rule 13 (statement -> f_statement .)
    RB              reduce using rule 13 (statement -> f_statement .)
    COUT            reduce using rule 13 (statement -> f_statement .)
    $end            reduce using rule 13 (statement -> f_statement .)


state 6

    (23) statement -> IF . LPAREN condition RPAREN

    LPAREN          shift and go to state 20


state 7

    (24) statement -> ELSE .

    INT             reduce using rule 24 (statement -> ELSE .)
    VAR             reduce using rule 24 (statement -> ELSE .)
    IF              reduce using rule 24 (statement -> ELSE .)
    ELSE            reduce using rule 24 (statement -> ELSE .)
    FOR             reduce using rule 24 (statement -> ELSE .)
    WHILE           reduce using rule 24 (statement -> ELSE .)
    RETURN          reduce using rule 24 (statement -> ELSE .)
    LB              reduce using rule 24 (statement -> ELSE .)
    RB              reduce using rule 24 (statement -> ELSE .)
    COUT            reduce using rule 24 (statement -> ELSE .)
    $end            reduce using rule 24 (statement -> ELSE .)


state 8

    (25) statement -> FOR . LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    LPAREN          shift and go to state 21


state 9

    (26) statement -> WHILE . LPAREN condition RPAREN

    LPAREN          shift and go to state 22


state 10

    (32) statement -> RETURN . expr SEMICOLON
    (36) expr -> . expr PLUS term
    (37) expr -> . expr MINUS term
    (38) expr -> . term
    (39) term -> . term STAR factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    expr                           shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25

state 11

    (34) statement -> LB .

    INT             reduce using rule 34 (statement -> LB .)
    VAR             reduce using rule 34 (statement -> LB .)
    IF              reduce using rule 34 (statement -> LB .)
    ELSE            reduce using rule 34 (statement -> LB .)
    FOR             reduce using rule 34 (statement -> LB .)
    WHILE           reduce using rule 34 (statement -> LB .)
    RETURN          reduce using rule 34 (statement -> LB .)
    LB              reduce using rule 34 (statement -> LB .)
    RB              reduce using rule 34 (statement -> LB .)
    COUT            reduce using rule 34 (statement -> LB .)
    $end            reduce using rule 34 (statement -> LB .)


state 12

    (35) statement -> RB .

    INT             reduce using rule 35 (statement -> RB .)
    VAR             reduce using rule 35 (statement -> RB .)
    IF              reduce using rule 35 (statement -> RB .)
    ELSE            reduce using rule 35 (statement -> RB .)
    FOR             reduce using rule 35 (statement -> RB .)
    WHILE           reduce using rule 35 (statement -> RB .)
    RETURN          reduce using rule 35 (statement -> RB .)
    LB              reduce using rule 35 (statement -> RB .)
    RB              reduce using rule 35 (statement -> RB .)
    COUT            reduce using rule 35 (statement -> RB .)
    $end            reduce using rule 35 (statement -> RB .)


state 13

    (51) statement -> COUT . p_content SEMICOLON
    (47) p_content -> . LESS LESS VAR p_content
    (48) p_content -> . LESS LESS SENTENCE p_content
    (49) p_content -> . LESS LESS ENDL
    (50) p_content -> .

    LESS            shift and go to state 30
    SEMICOLON       reduce using rule 50 (p_content -> .)

    p_content                      shift and go to state 29

state 14

    (2) program -> program statement .

    INT             reduce using rule 2 (program -> program statement .)
    VAR             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    ELSE            reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    LB              reduce using rule 2 (program -> program statement .)
    RB              reduce using rule 2 (program -> program statement .)
    COUT            reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 15

    (3) statement -> INT VAR . LPAREN params RPAREN SEMICOLON
    (4) statement -> INT VAR . LPAREN params RPAREN
    (16) statement -> INT VAR . SEMICOLON
    (17) statement -> INT VAR . EQUALS NUM SEMICOLON
    (18) statement -> INT VAR . EQUALS VAR SEMICOLON
    (19) statement -> INT VAR . EQUALS expr SEMICOLON

    LPAREN          shift and go to state 31
    SEMICOLON       shift and go to state 32
    EQUALS          shift and go to state 33


state 16

    (46) statement -> INT STAR . VAR SEMICOLON

    VAR             shift and go to state 34


state 17

    (20) statement -> VAR EQUALS . NUM SEMICOLON
    (21) statement -> VAR EQUALS . expr SEMICOLON
    (15) f_statement -> VAR EQUALS . f_statement
    (36) expr -> . expr PLUS term
    (37) expr -> . expr MINUS term
    (38) expr -> . term
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement
    (39) term -> . term STAR factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    NUM             shift and go to state 36
    VAR             shift and go to state 35
    LPAREN          shift and go to state 26

    expr                           shift and go to state 37
    f_statement                    shift and go to state 38
    term                           shift and go to state 24
    factor                         shift and go to state 25

state 18

    (22) statement -> VAR PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 39


state 19

    (14) f_statement -> VAR LPAREN . args RPAREN SEMICOLON
    (8) args -> . VAR
    (9) args -> . args COMMA VAR
    (10) args -> . NUM
    (11) args -> . args COMMA NUM
    (12) args -> .

    VAR             shift and go to state 40
    NUM             shift and go to state 42
    RPAREN          reduce using rule 12 (args -> .)
    COMMA           reduce using rule 12 (args -> .)

    args                           shift and go to state 41

state 20

    (23) statement -> IF LPAREN . condition RPAREN
    (27) condition -> . VAR GREATER NUM
    (28) condition -> . VAR LESS NUM
    (29) condition -> . VAR GREATER VAR
    (30) condition -> . VAR LESS VAR
    (31) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 44

    condition                      shift and go to state 43

state 21

    (25) statement -> FOR LPAREN . INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    INT             shift and go to state 45


state 22

    (26) statement -> WHILE LPAREN . condition RPAREN
    (27) condition -> . VAR GREATER NUM
    (28) condition -> . VAR LESS NUM
    (29) condition -> . VAR GREATER VAR
    (30) condition -> . VAR LESS VAR
    (31) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 44

    condition                      shift and go to state 46

state 23

    (32) statement -> RETURN expr . SEMICOLON
    (36) expr -> expr . PLUS term
    (37) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 47
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49


state 24

    (38) expr -> term .
    (39) term -> term . STAR factor
    (40) term -> term . DIV factor

    SEMICOLON       reduce using rule 38 (expr -> term .)
    PLUS            reduce using rule 38 (expr -> term .)
    MINUS           reduce using rule 38 (expr -> term .)
    RPAREN          reduce using rule 38 (expr -> term .)
    STAR            shift and go to state 50
    DIV             shift and go to state 51


state 25

    (41) term -> factor .

    STAR            reduce using rule 41 (term -> factor .)
    DIV             reduce using rule 41 (term -> factor .)
    SEMICOLON       reduce using rule 41 (term -> factor .)
    PLUS            reduce using rule 41 (term -> factor .)
    MINUS           reduce using rule 41 (term -> factor .)
    RPAREN          reduce using rule 41 (term -> factor .)


state 26

    (42) factor -> LPAREN . expr RPAREN
    (36) expr -> . expr PLUS term
    (37) expr -> . expr MINUS term
    (38) expr -> . term
    (39) term -> . term STAR factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    expr                           shift and go to state 52
    term                           shift and go to state 24
    factor                         shift and go to state 25

state 27

    (43) factor -> NUM .

    STAR            reduce using rule 43 (factor -> NUM .)
    DIV             reduce using rule 43 (factor -> NUM .)
    SEMICOLON       reduce using rule 43 (factor -> NUM .)
    PLUS            reduce using rule 43 (factor -> NUM .)
    MINUS           reduce using rule 43 (factor -> NUM .)
    RPAREN          reduce using rule 43 (factor -> NUM .)
    RBRACKET        reduce using rule 43 (factor -> NUM .)


state 28

    (44) factor -> VAR .
    (45) factor -> VAR . LBRACKET factor RBRACKET

    STAR            reduce using rule 44 (factor -> VAR .)
    DIV             reduce using rule 44 (factor -> VAR .)
    SEMICOLON       reduce using rule 44 (factor -> VAR .)
    PLUS            reduce using rule 44 (factor -> VAR .)
    MINUS           reduce using rule 44 (factor -> VAR .)
    RPAREN          reduce using rule 44 (factor -> VAR .)
    RBRACKET        reduce using rule 44 (factor -> VAR .)
    LBRACKET        shift and go to state 53


state 29

    (51) statement -> COUT p_content . SEMICOLON

    SEMICOLON       shift and go to state 54


state 30

    (47) p_content -> LESS . LESS VAR p_content
    (48) p_content -> LESS . LESS SENTENCE p_content
    (49) p_content -> LESS . LESS ENDL

    LESS            shift and go to state 55


state 31

    (3) statement -> INT VAR LPAREN . params RPAREN SEMICOLON
    (4) statement -> INT VAR LPAREN . params RPAREN
    (5) params -> . INT VAR
    (6) params -> . params COMMA INT VAR
    (7) params -> .

    INT             shift and go to state 56
    RPAREN          reduce using rule 7 (params -> .)
    COMMA           reduce using rule 7 (params -> .)

    params                         shift and go to state 57

state 32

    (16) statement -> INT VAR SEMICOLON .

    INT             reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    VAR             reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    IF              reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    ELSE            reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    FOR             reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    RETURN          reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    LB              reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    RB              reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    COUT            reduce using rule 16 (statement -> INT VAR SEMICOLON .)
    $end            reduce using rule 16 (statement -> INT VAR SEMICOLON .)


state 33

    (17) statement -> INT VAR EQUALS . NUM SEMICOLON
    (18) statement -> INT VAR EQUALS . VAR SEMICOLON
    (19) statement -> INT VAR EQUALS . expr SEMICOLON
    (36) expr -> . expr PLUS term
    (37) expr -> . expr MINUS term
    (38) expr -> . term
    (39) term -> . term STAR factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    NUM             shift and go to state 59
    VAR             shift and go to state 58
    LPAREN          shift and go to state 26

    expr                           shift and go to state 60
    term                           shift and go to state 24
    factor                         shift and go to state 25

state 34

    (46) statement -> INT STAR VAR . SEMICOLON

    SEMICOLON       shift and go to state 61


state 35

    (14) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (15) f_statement -> VAR . EQUALS f_statement
    (44) factor -> VAR .
    (45) factor -> VAR . LBRACKET factor RBRACKET

    LPAREN          shift and go to state 19
    EQUALS          shift and go to state 62
    STAR            reduce using rule 44 (factor -> VAR .)
    DIV             reduce using rule 44 (factor -> VAR .)
    SEMICOLON       reduce using rule 44 (factor -> VAR .)
    PLUS            reduce using rule 44 (factor -> VAR .)
    MINUS           reduce using rule 44 (factor -> VAR .)
    LBRACKET        shift and go to state 53


state 36

    (20) statement -> VAR EQUALS NUM . SEMICOLON
    (43) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 63
    STAR            reduce using rule 43 (factor -> NUM .)
    DIV             reduce using rule 43 (factor -> NUM .)
    PLUS            reduce using rule 43 (factor -> NUM .)
    MINUS           reduce using rule 43 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 43 (factor -> NUM .) ]


state 37

    (21) statement -> VAR EQUALS expr . SEMICOLON
    (36) expr -> expr . PLUS term
    (37) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 64
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49


state 38

    (15) f_statement -> VAR EQUALS f_statement .

    INT             reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    VAR             reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    IF              reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    ELSE            reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    FOR             reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    WHILE           reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    RETURN          reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    LB              reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    RB              reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    COUT            reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)
    $end            reduce using rule 15 (f_statement -> VAR EQUALS f_statement .)


state 39

    (22) statement -> VAR PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 65


state 40

    (8) args -> VAR .

    RPAREN          reduce using rule 8 (args -> VAR .)
    COMMA           reduce using rule 8 (args -> VAR .)


state 41

    (14) f_statement -> VAR LPAREN args . RPAREN SEMICOLON
    (9) args -> args . COMMA VAR
    (11) args -> args . COMMA NUM

    RPAREN          shift and go to state 66
    COMMA           shift and go to state 67


state 42

    (10) args -> NUM .

    RPAREN          reduce using rule 10 (args -> NUM .)
    COMMA           reduce using rule 10 (args -> NUM .)


state 43

    (23) statement -> IF LPAREN condition . RPAREN

    RPAREN          shift and go to state 68


state 44

    (27) condition -> VAR . GREATER NUM
    (28) condition -> VAR . LESS NUM
    (29) condition -> VAR . GREATER VAR
    (30) condition -> VAR . LESS VAR
    (31) condition -> VAR . EQUALS EQUALS NUM

    GREATER         shift and go to state 69
    LESS            shift and go to state 70
    EQUALS          shift and go to state 71


state 45

    (25) statement -> FOR LPAREN INT . VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    VAR             shift and go to state 72


state 46

    (26) statement -> WHILE LPAREN condition . RPAREN

    RPAREN          shift and go to state 73


state 47

    (32) statement -> RETURN expr SEMICOLON .

    INT             reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    VAR             reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    IF              reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    LB              reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    RB              reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    COUT            reduce using rule 32 (statement -> RETURN expr SEMICOLON .)
    $end            reduce using rule 32 (statement -> RETURN expr SEMICOLON .)


state 48

    (36) expr -> expr PLUS . term
    (39) term -> . term STAR factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    term                           shift and go to state 74
    factor                         shift and go to state 25

state 49

    (37) expr -> expr MINUS . term
    (39) term -> . term STAR factor
    (40) term -> . term DIV factor
    (41) term -> . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    term                           shift and go to state 75
    factor                         shift and go to state 25

state 50

    (39) term -> term STAR . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    factor                         shift and go to state 76

state 51

    (40) term -> term DIV . factor
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    factor                         shift and go to state 77

state 52

    (42) factor -> LPAREN expr . RPAREN
    (36) expr -> expr . PLUS term
    (37) expr -> expr . MINUS term

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49


state 53

    (45) factor -> VAR LBRACKET . factor RBRACKET
    (42) factor -> . LPAREN expr RPAREN
    (43) factor -> . NUM
    (44) factor -> . VAR
    (45) factor -> . VAR LBRACKET factor RBRACKET

    LPAREN          shift and go to state 26
    NUM             shift and go to state 27
    VAR             shift and go to state 28

    factor                         shift and go to state 79

state 54

    (51) statement -> COUT p_content SEMICOLON .

    INT             reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    VAR             reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    IF              reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    ELSE            reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    FOR             reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    WHILE           reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    RETURN          reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    LB              reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    RB              reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    COUT            reduce using rule 51 (statement -> COUT p_content SEMICOLON .)
    $end            reduce using rule 51 (statement -> COUT p_content SEMICOLON .)


state 55

    (47) p_content -> LESS LESS . VAR p_content
    (48) p_content -> LESS LESS . SENTENCE p_content
    (49) p_content -> LESS LESS . ENDL

    VAR             shift and go to state 80
    SENTENCE        shift and go to state 81
    ENDL            shift and go to state 82


state 56

    (5) params -> INT . VAR

    VAR             shift and go to state 83


state 57

    (3) statement -> INT VAR LPAREN params . RPAREN SEMICOLON
    (4) statement -> INT VAR LPAREN params . RPAREN
    (6) params -> params . COMMA INT VAR

    RPAREN          shift and go to state 84
    COMMA           shift and go to state 85


state 58

    (18) statement -> INT VAR EQUALS VAR . SEMICOLON
    (44) factor -> VAR .
    (45) factor -> VAR . LBRACKET factor RBRACKET

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 86
    STAR            reduce using rule 44 (factor -> VAR .)
    DIV             reduce using rule 44 (factor -> VAR .)
    PLUS            reduce using rule 44 (factor -> VAR .)
    MINUS           reduce using rule 44 (factor -> VAR .)
    LBRACKET        shift and go to state 53

  ! SEMICOLON       [ reduce using rule 44 (factor -> VAR .) ]


state 59

    (17) statement -> INT VAR EQUALS NUM . SEMICOLON
    (43) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 87
    STAR            reduce using rule 43 (factor -> NUM .)
    DIV             reduce using rule 43 (factor -> NUM .)
    PLUS            reduce using rule 43 (factor -> NUM .)
    MINUS           reduce using rule 43 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 43 (factor -> NUM .) ]


state 60

    (19) statement -> INT VAR EQUALS expr . SEMICOLON
    (36) expr -> expr . PLUS term
    (37) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 88
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49


state 61

    (46) statement -> INT STAR VAR SEMICOLON .

    INT             reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    VAR             reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    IF              reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    ELSE            reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    FOR             reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    WHILE           reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    RETURN          reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    LB              reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    RB              reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    COUT            reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)
    $end            reduce using rule 46 (statement -> INT STAR VAR SEMICOLON .)


state 62

    (15) f_statement -> VAR EQUALS . f_statement
    (14) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (15) f_statement -> . VAR EQUALS f_statement

    VAR             shift and go to state 89

    f_statement                    shift and go to state 38

state 63

    (20) statement -> VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 20 (statement -> VAR EQUALS NUM SEMICOLON .)


state 64

    (21) statement -> VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 21 (statement -> VAR EQUALS expr SEMICOLON .)


state 65

    (22) statement -> VAR PLUS PLUS SEMICOLON .

    INT             reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    IF              reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    LB              reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    RB              reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    COUT            reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)
    $end            reduce using rule 22 (statement -> VAR PLUS PLUS SEMICOLON .)


state 66

    (14) f_statement -> VAR LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 90


state 67

    (9) args -> args COMMA . VAR
    (11) args -> args COMMA . NUM

    VAR             shift and go to state 91
    NUM             shift and go to state 92


state 68

    (23) statement -> IF LPAREN condition RPAREN .

    INT             reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    VAR             reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    IF              reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    ELSE            reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    FOR             reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    WHILE           reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    RETURN          reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    LB              reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    RB              reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    COUT            reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)
    $end            reduce using rule 23 (statement -> IF LPAREN condition RPAREN .)


state 69

    (27) condition -> VAR GREATER . NUM
    (29) condition -> VAR GREATER . VAR

    NUM             shift and go to state 94
    VAR             shift and go to state 93


state 70

    (28) condition -> VAR LESS . NUM
    (30) condition -> VAR LESS . VAR

    NUM             shift and go to state 96
    VAR             shift and go to state 95


state 71

    (31) condition -> VAR EQUALS . EQUALS NUM

    EQUALS          shift and go to state 97


state 72

    (25) statement -> FOR LPAREN INT VAR . EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    EQUALS          shift and go to state 98


state 73

    (26) statement -> WHILE LPAREN condition RPAREN .

    INT             reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    VAR             reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    IF              reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    ELSE            reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    FOR             reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    WHILE           reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    RETURN          reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    LB              reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    RB              reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    COUT            reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)
    $end            reduce using rule 26 (statement -> WHILE LPAREN condition RPAREN .)


state 74

    (36) expr -> expr PLUS term .
    (39) term -> term . STAR factor
    (40) term -> term . DIV factor

    SEMICOLON       reduce using rule 36 (expr -> expr PLUS term .)
    PLUS            reduce using rule 36 (expr -> expr PLUS term .)
    MINUS           reduce using rule 36 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 36 (expr -> expr PLUS term .)
    STAR            shift and go to state 50
    DIV             shift and go to state 51


state 75

    (37) expr -> expr MINUS term .
    (39) term -> term . STAR factor
    (40) term -> term . DIV factor

    SEMICOLON       reduce using rule 37 (expr -> expr MINUS term .)
    PLUS            reduce using rule 37 (expr -> expr MINUS term .)
    MINUS           reduce using rule 37 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 37 (expr -> expr MINUS term .)
    STAR            shift and go to state 50
    DIV             shift and go to state 51


state 76

    (39) term -> term STAR factor .

    STAR            reduce using rule 39 (term -> term STAR factor .)
    DIV             reduce using rule 39 (term -> term STAR factor .)
    SEMICOLON       reduce using rule 39 (term -> term STAR factor .)
    PLUS            reduce using rule 39 (term -> term STAR factor .)
    MINUS           reduce using rule 39 (term -> term STAR factor .)
    RPAREN          reduce using rule 39 (term -> term STAR factor .)


state 77

    (40) term -> term DIV factor .

    STAR            reduce using rule 40 (term -> term DIV factor .)
    DIV             reduce using rule 40 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 40 (term -> term DIV factor .)
    PLUS            reduce using rule 40 (term -> term DIV factor .)
    MINUS           reduce using rule 40 (term -> term DIV factor .)
    RPAREN          reduce using rule 40 (term -> term DIV factor .)


state 78

    (42) factor -> LPAREN expr RPAREN .

    STAR            reduce using rule 42 (factor -> LPAREN expr RPAREN .)
    DIV             reduce using rule 42 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 42 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 42 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 42 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 42 (factor -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 42 (factor -> LPAREN expr RPAREN .)


state 79

    (45) factor -> VAR LBRACKET factor . RBRACKET

    RBRACKET        shift and go to state 99


state 80

    (47) p_content -> LESS LESS VAR . p_content
    (47) p_content -> . LESS LESS VAR p_content
    (48) p_content -> . LESS LESS SENTENCE p_content
    (49) p_content -> . LESS LESS ENDL
    (50) p_content -> .

    LESS            shift and go to state 30
    SEMICOLON       reduce using rule 50 (p_content -> .)

    p_content                      shift and go to state 100

state 81

    (48) p_content -> LESS LESS SENTENCE . p_content
    (47) p_content -> . LESS LESS VAR p_content
    (48) p_content -> . LESS LESS SENTENCE p_content
    (49) p_content -> . LESS LESS ENDL
    (50) p_content -> .

    LESS            shift and go to state 30
    SEMICOLON       reduce using rule 50 (p_content -> .)

    p_content                      shift and go to state 101

state 82

    (49) p_content -> LESS LESS ENDL .

    SEMICOLON       reduce using rule 49 (p_content -> LESS LESS ENDL .)


state 83

    (5) params -> INT VAR .

    RPAREN          reduce using rule 5 (params -> INT VAR .)
    COMMA           reduce using rule 5 (params -> INT VAR .)


state 84

    (3) statement -> INT VAR LPAREN params RPAREN . SEMICOLON
    (4) statement -> INT VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 102
    INT             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    VAR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    IF              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    FOR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    LB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    RB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    COUT            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    $end            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)


state 85

    (6) params -> params COMMA . INT VAR

    INT             shift and go to state 103


state 86

    (18) statement -> INT VAR EQUALS VAR SEMICOLON .

    INT             reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    VAR             reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    IF              reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    ELSE            reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    FOR             reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    WHILE           reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    LB              reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RB              reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    COUT            reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    $end            reduce using rule 18 (statement -> INT VAR EQUALS VAR SEMICOLON .)


state 87

    (17) statement -> INT VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 17 (statement -> INT VAR EQUALS NUM SEMICOLON .)


state 88

    (19) statement -> INT VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 19 (statement -> INT VAR EQUALS expr SEMICOLON .)


state 89

    (14) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (15) f_statement -> VAR . EQUALS f_statement

    LPAREN          shift and go to state 19
    EQUALS          shift and go to state 62


state 90

    (14) f_statement -> VAR LPAREN args RPAREN SEMICOLON .

    INT             reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VAR             reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    ELSE            reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    LB              reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RB              reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    COUT            reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 14 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)


state 91

    (9) args -> args COMMA VAR .

    RPAREN          reduce using rule 9 (args -> args COMMA VAR .)
    COMMA           reduce using rule 9 (args -> args COMMA VAR .)


state 92

    (11) args -> args COMMA NUM .

    RPAREN          reduce using rule 11 (args -> args COMMA NUM .)
    COMMA           reduce using rule 11 (args -> args COMMA NUM .)


state 93

    (29) condition -> VAR GREATER VAR .

    RPAREN          reduce using rule 29 (condition -> VAR GREATER VAR .)
    SEMICOLON       reduce using rule 29 (condition -> VAR GREATER VAR .)


state 94

    (27) condition -> VAR GREATER NUM .

    RPAREN          reduce using rule 27 (condition -> VAR GREATER NUM .)
    SEMICOLON       reduce using rule 27 (condition -> VAR GREATER NUM .)


state 95

    (30) condition -> VAR LESS VAR .

    RPAREN          reduce using rule 30 (condition -> VAR LESS VAR .)
    SEMICOLON       reduce using rule 30 (condition -> VAR LESS VAR .)


state 96

    (28) condition -> VAR LESS NUM .

    RPAREN          reduce using rule 28 (condition -> VAR LESS NUM .)
    SEMICOLON       reduce using rule 28 (condition -> VAR LESS NUM .)


state 97

    (31) condition -> VAR EQUALS EQUALS . NUM

    NUM             shift and go to state 104


state 98

    (25) statement -> FOR LPAREN INT VAR EQUALS . NUM SEMICOLON condition SEMICOLON for_update RPAREN

    NUM             shift and go to state 105


state 99

    (45) factor -> VAR LBRACKET factor RBRACKET .

    STAR            reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)
    DIV             reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)
    SEMICOLON       reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)
    PLUS            reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)
    MINUS           reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)
    RPAREN          reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)
    RBRACKET        reduce using rule 45 (factor -> VAR LBRACKET factor RBRACKET .)


state 100

    (47) p_content -> LESS LESS VAR p_content .

    SEMICOLON       reduce using rule 47 (p_content -> LESS LESS VAR p_content .)


state 101

    (48) p_content -> LESS LESS SENTENCE p_content .

    SEMICOLON       reduce using rule 48 (p_content -> LESS LESS SENTENCE p_content .)


state 102

    (3) statement -> INT VAR LPAREN params RPAREN SEMICOLON .

    INT             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)


state 103

    (6) params -> params COMMA INT . VAR

    VAR             shift and go to state 106


state 104

    (31) condition -> VAR EQUALS EQUALS NUM .

    RPAREN          reduce using rule 31 (condition -> VAR EQUALS EQUALS NUM .)
    SEMICOLON       reduce using rule 31 (condition -> VAR EQUALS EQUALS NUM .)


state 105

    (25) statement -> FOR LPAREN INT VAR EQUALS NUM . SEMICOLON condition SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 107


state 106

    (6) params -> params COMMA INT VAR .

    RPAREN          reduce using rule 6 (params -> params COMMA INT VAR .)
    COMMA           reduce using rule 6 (params -> params COMMA INT VAR .)


state 107

    (25) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON . condition SEMICOLON for_update RPAREN
    (27) condition -> . VAR GREATER NUM
    (28) condition -> . VAR LESS NUM
    (29) condition -> . VAR GREATER VAR
    (30) condition -> . VAR LESS VAR
    (31) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 44

    condition                      shift and go to state 108

state 108

    (25) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition . SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 109


state 109

    (25) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON . for_update RPAREN
    (33) for_update -> . VAR PLUS PLUS

    VAR             shift and go to state 110

    for_update                     shift and go to state 111

state 110

    (33) for_update -> VAR . PLUS PLUS

    PLUS            shift and go to state 112


state 111

    (25) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update . RPAREN

    RPAREN          shift and go to state 113


state 112

    (33) for_update -> VAR PLUS . PLUS

    PLUS            shift and go to state 114


state 113

    (25) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .

    INT             reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    VAR             reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    IF              reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    ELSE            reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    FOR             reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    WHILE           reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RETURN          reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    LB              reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RB              reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    COUT            reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    $end            reduce using rule 25 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)


state 114

    (33) for_update -> VAR PLUS PLUS .

    RPAREN          reduce using rule 33 (for_update -> VAR PLUS PLUS .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 36 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 58 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 59 resolved as shift
