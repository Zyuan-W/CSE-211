Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression SEMICOLON
Rule 2     expression -> expression PLUS expression
Rule 3     expression -> expression MINUS expression
Rule 4     expression -> expression TIMES expression
Rule 5     expression -> expression DIVIDE expression
Rule 6     expression -> NUMBER
Rule 7     expression -> NAME
Rule 8     statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 9     statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 10    statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE
Rule 11    statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE
Rule 12    statements -> statement
Rule 13    statements -> statements statement

Terminals, with rules where they appear

DIVIDE               : 5
ELSE                 : 8
EQUALS               : 1
FOR                  : 11
IF                   : 8 9
LBRACE               : 8 8 9 10 11
LPAREN               : 8 9 10 11
MINUS                : 3
NAME                 : 1 7
NUMBER               : 6
PLUS                 : 2
RBRACE               : 8 8 9 10 11
RPAREN               : 8 9 10 11
SEMICOLON            : 1 11 11
TIMES                : 4
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 3 3 4 4 5 5 8 9 10 11 11 11
statement            : 12 13 0
statements           : 8 8 9 10 11 13

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 6


state 3

    (8) statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 7


state 4

    (10) statement -> WHILE . LPAREN expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 8


state 5

    (11) statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 9


state 6

    (1) statement -> NAME EQUALS . expression SEMICOLON
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 11

state 7

    (8) statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 13

state 8

    (10) statement -> WHILE LPAREN . expression RPAREN LBRACE statements RBRACE
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 14

state 9

    (11) statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 15

state 10

    (7) expression -> NAME .

    SEMICOLON       reduce using rule 7 (expression -> NAME .)
    PLUS            reduce using rule 7 (expression -> NAME .)
    MINUS           reduce using rule 7 (expression -> NAME .)
    TIMES           reduce using rule 7 (expression -> NAME .)
    DIVIDE          reduce using rule 7 (expression -> NAME .)
    RPAREN          reduce using rule 7 (expression -> NAME .)


state 11

    (1) statement -> NAME EQUALS expression . SEMICOLON
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 12

    (6) expression -> NUMBER .

    SEMICOLON       reduce using rule 6 (expression -> NUMBER .)
    PLUS            reduce using rule 6 (expression -> NUMBER .)
    MINUS           reduce using rule 6 (expression -> NUMBER .)
    TIMES           reduce using rule 6 (expression -> NUMBER .)
    DIVIDE          reduce using rule 6 (expression -> NUMBER .)
    RPAREN          reduce using rule 6 (expression -> NUMBER .)


state 13

    (8) statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 21
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 14

    (10) statement -> WHILE LPAREN expression . RPAREN LBRACE statements RBRACE
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 22
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 15

    (11) statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 23
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 16

    (1) statement -> NAME EQUALS expression SEMICOLON .

    $end            reduce using rule 1 (statement -> NAME EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 1 (statement -> NAME EQUALS expression SEMICOLON .)
    NAME            reduce using rule 1 (statement -> NAME EQUALS expression SEMICOLON .)
    IF              reduce using rule 1 (statement -> NAME EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 1 (statement -> NAME EQUALS expression SEMICOLON .)
    FOR             reduce using rule 1 (statement -> NAME EQUALS expression SEMICOLON .)


state 17

    (2) expression -> expression PLUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 24

state 18

    (3) expression -> expression MINUS . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 25

state 19

    (4) expression -> expression TIMES . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 26

state 20

    (5) expression -> expression DIVIDE . expression
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 27

state 21

    (8) statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 28


state 22

    (10) statement -> WHILE LPAREN expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 29


state 23

    (11) statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN LBRACE statements RBRACE
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 30

state 24

    (2) expression -> expression PLUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 2 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 2 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 2 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! TIMES           [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]


state 25

    (3) expression -> expression MINUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 3 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 3 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 3 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! TIMES           [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]


state 26

    (4) expression -> expression TIMES expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 4 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 4 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 4 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 4 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 4 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 4 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 27

    (5) expression -> expression DIVIDE expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 5 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 5 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 5 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 5 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 5 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 5 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 28

    (8) statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE
    (12) statements -> . statement
    (13) statements -> . statements statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statements                     shift and go to state 31
    statement                      shift and go to state 32

state 29

    (10) statement -> WHILE LPAREN expression RPAREN LBRACE . statements RBRACE
    (12) statements -> . statement
    (13) statements -> . statements statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statements                     shift and go to state 33
    statement                      shift and go to state 32

state 30

    (11) statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN LBRACE statements RBRACE
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 34
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 31

    (8) statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 35
    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statement                      shift and go to state 36

state 32

    (12) statements -> statement .

    RBRACE          reduce using rule 12 (statements -> statement .)
    NAME            reduce using rule 12 (statements -> statement .)
    IF              reduce using rule 12 (statements -> statement .)
    WHILE           reduce using rule 12 (statements -> statement .)
    FOR             reduce using rule 12 (statements -> statement .)


state 33

    (10) statement -> WHILE LPAREN expression RPAREN LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 37
    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statement                      shift and go to state 36

state 34

    (11) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN LBRACE statements RBRACE
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . expression DIVIDE expression
    (6) expression -> . NUMBER
    (7) expression -> . NAME

    NUMBER          shift and go to state 12
    NAME            shift and go to state 10

    expression                     shift and go to state 38

state 35

    (8) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE
    (9) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .

    ELSE            shift and go to state 39
    $end            reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)


state 36

    (13) statements -> statements statement .

    RBRACE          reduce using rule 13 (statements -> statements statement .)
    NAME            reduce using rule 13 (statements -> statements statement .)
    IF              reduce using rule 13 (statements -> statements statement .)
    WHILE           reduce using rule 13 (statements -> statements statement .)
    FOR             reduce using rule 13 (statements -> statements statement .)


state 37

    (10) statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 10 (statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE .)


state 38

    (11) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN LBRACE statements RBRACE
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression
    (5) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 39

    (8) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 41


state 40

    (11) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 42


state 41

    (8) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (12) statements -> . statement
    (13) statements -> . statements statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statements                     shift and go to state 43
    statement                      shift and go to state 32

state 42

    (11) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE . statements RBRACE
    (12) statements -> . statement
    (13) statements -> . statements statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statements                     shift and go to state 44
    statement                      shift and go to state 32

state 43

    (8) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 45
    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statement                      shift and go to state 36

state 44

    (11) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (1) statement -> . NAME EQUALS expression SEMICOLON
    (8) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (10) statement -> . WHILE LPAREN expression RPAREN LBRACE statements RBRACE
    (11) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE

    RBRACE          shift and go to state 46
    NAME            shift and go to state 2
    IF              shift and go to state 3
    WHILE           shift and go to state 4
    FOR             shift and go to state 5

    statement                      shift and go to state 36

state 45

    (8) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    $end            reduce using rule 8 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 8 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NAME            reduce using rule 8 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 8 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 8 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 8 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 46

    (11) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 11 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 11 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 11 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 11 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 11 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 11 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN LBRACE statements RBRACE .)

