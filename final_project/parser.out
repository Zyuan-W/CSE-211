Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    IGNORE_CONTENT
    PRINT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> INT VAR LPAREN params RPAREN SEMICOLON
Rule 4     statement -> INT VAR LPAREN params RPAREN
Rule 5     params -> INT VAR
Rule 6     params -> INT VAR COMMA params
Rule 7     params -> <empty>
Rule 8     args -> VAR
Rule 9     args -> VAR COMMA args
Rule 10    args -> NUM
Rule 11    args -> NUM COMMA args
Rule 12    args -> <empty>
Rule 13    statement -> VAR LPAREN args RPAREN SEMICOLON
Rule 14    statement -> VAR EQUALS statement
Rule 15    statement -> INT VAR SEMICOLON
Rule 16    statement -> INT VAR EQUALS NUM SEMICOLON
Rule 17    statement -> INT VAR EQUALS VAR SEMICOLON
Rule 18    statement -> INT VAR EQUALS expr SEMICOLON
Rule 19    statement -> VAR EQUALS NUM SEMICOLON
Rule 20    statement -> VAR EQUALS expr SEMICOLON
Rule 21    statement -> VAR PLUS PLUS SEMICOLON
Rule 22    statement -> IF LPAREN condition RPAREN
Rule 23    statement -> ELSE
Rule 24    statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
Rule 25    statement -> WHILE LPAREN condition RPAREN
Rule 26    condition -> VAR GREATER NUM
Rule 27    condition -> VAR LESS NUM
Rule 28    condition -> VAR GREATER VAR
Rule 29    condition -> VAR LESS VAR
Rule 30    condition -> VAR EQUALS EQUALS NUM
Rule 31    statement -> RETURN expr SEMICOLON
Rule 32    for_update -> VAR PLUS PLUS
Rule 33    statement -> LB
Rule 34    statement -> RB
Rule 35    expr -> expr PLUS term
Rule 36    expr -> expr PLUS VAR
Rule 37    expr -> expr MINUS term
Rule 38    expr -> expr MINUS VAR
Rule 39    expr -> term
Rule 40    term -> term MULT factor
Rule 41    term -> term DIV factor
Rule 42    term -> factor
Rule 43    factor -> LPAREN expr RPAREN
Rule 44    factor -> NUM
Rule 45    factor -> VAR
Rule 46    p_content -> LESS LESS VAR p_content
Rule 47    p_content -> LESS LESS SENTENCE p_content
Rule 48    p_content -> LESS LESS ENDL
Rule 49    p_content -> <empty>
Rule 50    statement -> COUT p_content SEMICOLON

Terminals, with rules where they appear

COMMA                : 6 9 11
COUT                 : 50
DIV                  : 41
ELSE                 : 23
ENDL                 : 48
EQUALS               : 14 16 17 18 19 20 24 30 30
FOR                  : 24
GREATER              : 26 28
IF                   : 22
IGNORE_CONTENT       : 
INT                  : 3 4 5 6 15 16 17 18 24
LB                   : 33
LESS                 : 27 29 46 46 47 47 48 48
LPAREN               : 3 4 13 22 24 25 43
MINUS                : 37 38
MULT                 : 40
NUM                  : 10 11 16 19 24 26 27 30 44
PLUS                 : 21 21 32 32 35 36
PRINT                : 
RB                   : 34
RETURN               : 31
RPAREN               : 3 4 13 22 24 25 43
SEMICOLON            : 3 13 15 16 17 18 19 20 21 24 24 31 50
SENTENCE             : 47
VAR                  : 3 4 5 6 8 9 13 14 15 16 17 17 18 19 20 21 24 26 27 28 28 29 29 30 32 36 38 45 46
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

args                 : 9 11 13
condition            : 22 24 25
expr                 : 18 20 31 35 36 37 38 43
factor               : 40 41 42
for_update           : 24
p_content            : 46 47 50
params               : 3 4 6
program              : 2 0
statement            : 1 2 14
term                 : 35 37 39 40 41

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . VAR LPAREN args RPAREN SEMICOLON
    (14) statement -> . VAR EQUALS statement
    (15) statement -> . INT VAR SEMICOLON
    (16) statement -> . INT VAR EQUALS NUM SEMICOLON
    (17) statement -> . INT VAR EQUALS VAR SEMICOLON
    (18) statement -> . INT VAR EQUALS expr SEMICOLON
    (19) statement -> . VAR EQUALS NUM SEMICOLON
    (20) statement -> . VAR EQUALS expr SEMICOLON
    (21) statement -> . VAR PLUS PLUS SEMICOLON
    (22) statement -> . IF LPAREN condition RPAREN
    (23) statement -> . ELSE
    (24) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (25) statement -> . WHILE LPAREN condition RPAREN
    (31) statement -> . RETURN expr SEMICOLON
    (33) statement -> . LB
    (34) statement -> . RB
    (50) statement -> . COUT p_content SEMICOLON

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 5
    ELSE            shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    LB              shift and go to state 10
    RB              shift and go to state 11
    COUT            shift and go to state 12

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . VAR LPAREN args RPAREN SEMICOLON
    (14) statement -> . VAR EQUALS statement
    (15) statement -> . INT VAR SEMICOLON
    (16) statement -> . INT VAR EQUALS NUM SEMICOLON
    (17) statement -> . INT VAR EQUALS VAR SEMICOLON
    (18) statement -> . INT VAR EQUALS expr SEMICOLON
    (19) statement -> . VAR EQUALS NUM SEMICOLON
    (20) statement -> . VAR EQUALS expr SEMICOLON
    (21) statement -> . VAR PLUS PLUS SEMICOLON
    (22) statement -> . IF LPAREN condition RPAREN
    (23) statement -> . ELSE
    (24) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (25) statement -> . WHILE LPAREN condition RPAREN
    (31) statement -> . RETURN expr SEMICOLON
    (33) statement -> . LB
    (34) statement -> . RB
    (50) statement -> . COUT p_content SEMICOLON

    INT             shift and go to state 3
    VAR             shift and go to state 4
    IF              shift and go to state 5
    ELSE            shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    LB              shift and go to state 10
    RB              shift and go to state 11
    COUT            shift and go to state 12

    statement                      shift and go to state 13

state 2

    (1) program -> statement .

    INT             reduce using rule 1 (program -> statement .)
    VAR             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    ELSE            reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    LB              reduce using rule 1 (program -> statement .)
    RB              reduce using rule 1 (program -> statement .)
    COUT            reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> INT . VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> INT . VAR LPAREN params RPAREN
    (15) statement -> INT . VAR SEMICOLON
    (16) statement -> INT . VAR EQUALS NUM SEMICOLON
    (17) statement -> INT . VAR EQUALS VAR SEMICOLON
    (18) statement -> INT . VAR EQUALS expr SEMICOLON

    VAR             shift and go to state 14


state 4

    (13) statement -> VAR . LPAREN args RPAREN SEMICOLON
    (14) statement -> VAR . EQUALS statement
    (19) statement -> VAR . EQUALS NUM SEMICOLON
    (20) statement -> VAR . EQUALS expr SEMICOLON
    (21) statement -> VAR . PLUS PLUS SEMICOLON

    LPAREN          shift and go to state 15
    EQUALS          shift and go to state 16
    PLUS            shift and go to state 17


state 5

    (22) statement -> IF . LPAREN condition RPAREN

    LPAREN          shift and go to state 18


state 6

    (23) statement -> ELSE .

    INT             reduce using rule 23 (statement -> ELSE .)
    VAR             reduce using rule 23 (statement -> ELSE .)
    IF              reduce using rule 23 (statement -> ELSE .)
    ELSE            reduce using rule 23 (statement -> ELSE .)
    FOR             reduce using rule 23 (statement -> ELSE .)
    WHILE           reduce using rule 23 (statement -> ELSE .)
    RETURN          reduce using rule 23 (statement -> ELSE .)
    LB              reduce using rule 23 (statement -> ELSE .)
    RB              reduce using rule 23 (statement -> ELSE .)
    COUT            reduce using rule 23 (statement -> ELSE .)
    $end            reduce using rule 23 (statement -> ELSE .)


state 7

    (24) statement -> FOR . LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    LPAREN          shift and go to state 19


state 8

    (25) statement -> WHILE . LPAREN condition RPAREN

    LPAREN          shift and go to state 20


state 9

    (31) statement -> RETURN . expr SEMICOLON
    (35) expr -> . expr PLUS term
    (36) expr -> . expr PLUS VAR
    (37) expr -> . expr MINUS term
    (38) expr -> . expr MINUS VAR
    (39) expr -> . term
    (40) term -> . term MULT factor
    (41) term -> . term DIV factor
    (42) term -> . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    LPAREN          shift and go to state 25
    NUM             shift and go to state 26
    VAR             shift and go to state 23

    expr                           shift and go to state 21
    term                           shift and go to state 22
    factor                         shift and go to state 24

state 10

    (33) statement -> LB .

    INT             reduce using rule 33 (statement -> LB .)
    VAR             reduce using rule 33 (statement -> LB .)
    IF              reduce using rule 33 (statement -> LB .)
    ELSE            reduce using rule 33 (statement -> LB .)
    FOR             reduce using rule 33 (statement -> LB .)
    WHILE           reduce using rule 33 (statement -> LB .)
    RETURN          reduce using rule 33 (statement -> LB .)
    LB              reduce using rule 33 (statement -> LB .)
    RB              reduce using rule 33 (statement -> LB .)
    COUT            reduce using rule 33 (statement -> LB .)
    $end            reduce using rule 33 (statement -> LB .)


state 11

    (34) statement -> RB .

    INT             reduce using rule 34 (statement -> RB .)
    VAR             reduce using rule 34 (statement -> RB .)
    IF              reduce using rule 34 (statement -> RB .)
    ELSE            reduce using rule 34 (statement -> RB .)
    FOR             reduce using rule 34 (statement -> RB .)
    WHILE           reduce using rule 34 (statement -> RB .)
    RETURN          reduce using rule 34 (statement -> RB .)
    LB              reduce using rule 34 (statement -> RB .)
    RB              reduce using rule 34 (statement -> RB .)
    COUT            reduce using rule 34 (statement -> RB .)
    $end            reduce using rule 34 (statement -> RB .)


state 12

    (50) statement -> COUT . p_content SEMICOLON
    (46) p_content -> . LESS LESS VAR p_content
    (47) p_content -> . LESS LESS SENTENCE p_content
    (48) p_content -> . LESS LESS ENDL
    (49) p_content -> .

    LESS            shift and go to state 28
    SEMICOLON       reduce using rule 49 (p_content -> .)

    p_content                      shift and go to state 27

state 13

    (2) program -> program statement .

    INT             reduce using rule 2 (program -> program statement .)
    VAR             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    ELSE            reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    LB              reduce using rule 2 (program -> program statement .)
    RB              reduce using rule 2 (program -> program statement .)
    COUT            reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 14

    (3) statement -> INT VAR . LPAREN params RPAREN SEMICOLON
    (4) statement -> INT VAR . LPAREN params RPAREN
    (15) statement -> INT VAR . SEMICOLON
    (16) statement -> INT VAR . EQUALS NUM SEMICOLON
    (17) statement -> INT VAR . EQUALS VAR SEMICOLON
    (18) statement -> INT VAR . EQUALS expr SEMICOLON

    LPAREN          shift and go to state 29
    SEMICOLON       shift and go to state 30
    EQUALS          shift and go to state 31


state 15

    (13) statement -> VAR LPAREN . args RPAREN SEMICOLON
    (8) args -> . VAR
    (9) args -> . VAR COMMA args
    (10) args -> . NUM
    (11) args -> . NUM COMMA args
    (12) args -> .

    VAR             shift and go to state 32
    NUM             shift and go to state 34
    RPAREN          reduce using rule 12 (args -> .)

    args                           shift and go to state 33

state 16

    (14) statement -> VAR EQUALS . statement
    (19) statement -> VAR EQUALS . NUM SEMICOLON
    (20) statement -> VAR EQUALS . expr SEMICOLON
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . INT VAR LPAREN params RPAREN
    (13) statement -> . VAR LPAREN args RPAREN SEMICOLON
    (14) statement -> . VAR EQUALS statement
    (15) statement -> . INT VAR SEMICOLON
    (16) statement -> . INT VAR EQUALS NUM SEMICOLON
    (17) statement -> . INT VAR EQUALS VAR SEMICOLON
    (18) statement -> . INT VAR EQUALS expr SEMICOLON
    (19) statement -> . VAR EQUALS NUM SEMICOLON
    (20) statement -> . VAR EQUALS expr SEMICOLON
    (21) statement -> . VAR PLUS PLUS SEMICOLON
    (22) statement -> . IF LPAREN condition RPAREN
    (23) statement -> . ELSE
    (24) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (25) statement -> . WHILE LPAREN condition RPAREN
    (31) statement -> . RETURN expr SEMICOLON
    (33) statement -> . LB
    (34) statement -> . RB
    (50) statement -> . COUT p_content SEMICOLON
    (35) expr -> . expr PLUS term
    (36) expr -> . expr PLUS VAR
    (37) expr -> . expr MINUS term
    (38) expr -> . expr MINUS VAR
    (39) expr -> . term
    (40) term -> . term MULT factor
    (41) term -> . term DIV factor
    (42) term -> . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    NUM             shift and go to state 37
    INT             shift and go to state 3
    VAR             shift and go to state 35
    IF              shift and go to state 5
    ELSE            shift and go to state 6
    FOR             shift and go to state 7
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    LB              shift and go to state 10
    RB              shift and go to state 11
    COUT            shift and go to state 12
    LPAREN          shift and go to state 25

    statement                      shift and go to state 36
    expr                           shift and go to state 38
    term                           shift and go to state 22
    factor                         shift and go to state 24

state 17

    (21) statement -> VAR PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 39


state 18

    (22) statement -> IF LPAREN . condition RPAREN
    (26) condition -> . VAR GREATER NUM
    (27) condition -> . VAR LESS NUM
    (28) condition -> . VAR GREATER VAR
    (29) condition -> . VAR LESS VAR
    (30) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 41

    condition                      shift and go to state 40

state 19

    (24) statement -> FOR LPAREN . INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    INT             shift and go to state 42


state 20

    (25) statement -> WHILE LPAREN . condition RPAREN
    (26) condition -> . VAR GREATER NUM
    (27) condition -> . VAR LESS NUM
    (28) condition -> . VAR GREATER VAR
    (29) condition -> . VAR LESS VAR
    (30) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 41

    condition                      shift and go to state 43

state 21

    (31) statement -> RETURN expr . SEMICOLON
    (35) expr -> expr . PLUS term
    (36) expr -> expr . PLUS VAR
    (37) expr -> expr . MINUS term
    (38) expr -> expr . MINUS VAR

    SEMICOLON       shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46


state 22

    (39) expr -> term .
    (40) term -> term . MULT factor
    (41) term -> term . DIV factor

    SEMICOLON       reduce using rule 39 (expr -> term .)
    PLUS            reduce using rule 39 (expr -> term .)
    MINUS           reduce using rule 39 (expr -> term .)
    RPAREN          reduce using rule 39 (expr -> term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 23

    (45) factor -> VAR .

    MULT            reduce using rule 45 (factor -> VAR .)
    DIV             reduce using rule 45 (factor -> VAR .)
    SEMICOLON       reduce using rule 45 (factor -> VAR .)
    PLUS            reduce using rule 45 (factor -> VAR .)
    MINUS           reduce using rule 45 (factor -> VAR .)
    RPAREN          reduce using rule 45 (factor -> VAR .)


state 24

    (42) term -> factor .

    MULT            reduce using rule 42 (term -> factor .)
    DIV             reduce using rule 42 (term -> factor .)
    SEMICOLON       reduce using rule 42 (term -> factor .)
    PLUS            reduce using rule 42 (term -> factor .)
    MINUS           reduce using rule 42 (term -> factor .)
    RPAREN          reduce using rule 42 (term -> factor .)


state 25

    (43) factor -> LPAREN . expr RPAREN
    (35) expr -> . expr PLUS term
    (36) expr -> . expr PLUS VAR
    (37) expr -> . expr MINUS term
    (38) expr -> . expr MINUS VAR
    (39) expr -> . term
    (40) term -> . term MULT factor
    (41) term -> . term DIV factor
    (42) term -> . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    LPAREN          shift and go to state 25
    NUM             shift and go to state 26
    VAR             shift and go to state 23

    expr                           shift and go to state 49
    term                           shift and go to state 22
    factor                         shift and go to state 24

state 26

    (44) factor -> NUM .

    MULT            reduce using rule 44 (factor -> NUM .)
    DIV             reduce using rule 44 (factor -> NUM .)
    SEMICOLON       reduce using rule 44 (factor -> NUM .)
    PLUS            reduce using rule 44 (factor -> NUM .)
    MINUS           reduce using rule 44 (factor -> NUM .)
    RPAREN          reduce using rule 44 (factor -> NUM .)


state 27

    (50) statement -> COUT p_content . SEMICOLON

    SEMICOLON       shift and go to state 50


state 28

    (46) p_content -> LESS . LESS VAR p_content
    (47) p_content -> LESS . LESS SENTENCE p_content
    (48) p_content -> LESS . LESS ENDL

    LESS            shift and go to state 51


state 29

    (3) statement -> INT VAR LPAREN . params RPAREN SEMICOLON
    (4) statement -> INT VAR LPAREN . params RPAREN
    (5) params -> . INT VAR
    (6) params -> . INT VAR COMMA params
    (7) params -> .

    INT             shift and go to state 52
    RPAREN          reduce using rule 7 (params -> .)

    params                         shift and go to state 53

state 30

    (15) statement -> INT VAR SEMICOLON .

    INT             reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    VAR             reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    IF              reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    ELSE            reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    FOR             reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    WHILE           reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    LB              reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    RB              reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    COUT            reduce using rule 15 (statement -> INT VAR SEMICOLON .)
    $end            reduce using rule 15 (statement -> INT VAR SEMICOLON .)


state 31

    (16) statement -> INT VAR EQUALS . NUM SEMICOLON
    (17) statement -> INT VAR EQUALS . VAR SEMICOLON
    (18) statement -> INT VAR EQUALS . expr SEMICOLON
    (35) expr -> . expr PLUS term
    (36) expr -> . expr PLUS VAR
    (37) expr -> . expr MINUS term
    (38) expr -> . expr MINUS VAR
    (39) expr -> . term
    (40) term -> . term MULT factor
    (41) term -> . term DIV factor
    (42) term -> . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    NUM             shift and go to state 55
    VAR             shift and go to state 54
    LPAREN          shift and go to state 25

    expr                           shift and go to state 56
    term                           shift and go to state 22
    factor                         shift and go to state 24

state 32

    (8) args -> VAR .
    (9) args -> VAR . COMMA args

    RPAREN          reduce using rule 8 (args -> VAR .)
    COMMA           shift and go to state 57


state 33

    (13) statement -> VAR LPAREN args . RPAREN SEMICOLON

    RPAREN          shift and go to state 58


state 34

    (10) args -> NUM .
    (11) args -> NUM . COMMA args

    RPAREN          reduce using rule 10 (args -> NUM .)
    COMMA           shift and go to state 59


state 35

    (13) statement -> VAR . LPAREN args RPAREN SEMICOLON
    (14) statement -> VAR . EQUALS statement
    (19) statement -> VAR . EQUALS NUM SEMICOLON
    (20) statement -> VAR . EQUALS expr SEMICOLON
    (21) statement -> VAR . PLUS PLUS SEMICOLON
    (45) factor -> VAR .

  ! shift/reduce conflict for PLUS resolved as shift
    LPAREN          shift and go to state 15
    EQUALS          shift and go to state 16
    PLUS            shift and go to state 17
    MULT            reduce using rule 45 (factor -> VAR .)
    DIV             reduce using rule 45 (factor -> VAR .)
    SEMICOLON       reduce using rule 45 (factor -> VAR .)
    MINUS           reduce using rule 45 (factor -> VAR .)

  ! PLUS            [ reduce using rule 45 (factor -> VAR .) ]


state 36

    (14) statement -> VAR EQUALS statement .

    INT             reduce using rule 14 (statement -> VAR EQUALS statement .)
    VAR             reduce using rule 14 (statement -> VAR EQUALS statement .)
    IF              reduce using rule 14 (statement -> VAR EQUALS statement .)
    ELSE            reduce using rule 14 (statement -> VAR EQUALS statement .)
    FOR             reduce using rule 14 (statement -> VAR EQUALS statement .)
    WHILE           reduce using rule 14 (statement -> VAR EQUALS statement .)
    RETURN          reduce using rule 14 (statement -> VAR EQUALS statement .)
    LB              reduce using rule 14 (statement -> VAR EQUALS statement .)
    RB              reduce using rule 14 (statement -> VAR EQUALS statement .)
    COUT            reduce using rule 14 (statement -> VAR EQUALS statement .)
    $end            reduce using rule 14 (statement -> VAR EQUALS statement .)


state 37

    (19) statement -> VAR EQUALS NUM . SEMICOLON
    (44) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 60
    MULT            reduce using rule 44 (factor -> NUM .)
    DIV             reduce using rule 44 (factor -> NUM .)
    PLUS            reduce using rule 44 (factor -> NUM .)
    MINUS           reduce using rule 44 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 44 (factor -> NUM .) ]


state 38

    (20) statement -> VAR EQUALS expr . SEMICOLON
    (35) expr -> expr . PLUS term
    (36) expr -> expr . PLUS VAR
    (37) expr -> expr . MINUS term
    (38) expr -> expr . MINUS VAR

    SEMICOLON       shift and go to state 61
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46


state 39

    (21) statement -> VAR PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 62


state 40

    (22) statement -> IF LPAREN condition . RPAREN

    RPAREN          shift and go to state 63


state 41

    (26) condition -> VAR . GREATER NUM
    (27) condition -> VAR . LESS NUM
    (28) condition -> VAR . GREATER VAR
    (29) condition -> VAR . LESS VAR
    (30) condition -> VAR . EQUALS EQUALS NUM

    GREATER         shift and go to state 64
    LESS            shift and go to state 65
    EQUALS          shift and go to state 66


state 42

    (24) statement -> FOR LPAREN INT . VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    VAR             shift and go to state 67


state 43

    (25) statement -> WHILE LPAREN condition . RPAREN

    RPAREN          shift and go to state 68


state 44

    (31) statement -> RETURN expr SEMICOLON .

    INT             reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    VAR             reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    IF              reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    LB              reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    RB              reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    COUT            reduce using rule 31 (statement -> RETURN expr SEMICOLON .)
    $end            reduce using rule 31 (statement -> RETURN expr SEMICOLON .)


state 45

    (35) expr -> expr PLUS . term
    (36) expr -> expr PLUS . VAR
    (40) term -> . term MULT factor
    (41) term -> . term DIV factor
    (42) term -> . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    VAR             shift and go to state 70
    LPAREN          shift and go to state 25
    NUM             shift and go to state 26

    term                           shift and go to state 69
    factor                         shift and go to state 24

state 46

    (37) expr -> expr MINUS . term
    (38) expr -> expr MINUS . VAR
    (40) term -> . term MULT factor
    (41) term -> . term DIV factor
    (42) term -> . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    VAR             shift and go to state 72
    LPAREN          shift and go to state 25
    NUM             shift and go to state 26

    term                           shift and go to state 71
    factor                         shift and go to state 24

state 47

    (40) term -> term MULT . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    LPAREN          shift and go to state 25
    NUM             shift and go to state 26
    VAR             shift and go to state 23

    factor                         shift and go to state 73

state 48

    (41) term -> term DIV . factor
    (43) factor -> . LPAREN expr RPAREN
    (44) factor -> . NUM
    (45) factor -> . VAR

    LPAREN          shift and go to state 25
    NUM             shift and go to state 26
    VAR             shift and go to state 23

    factor                         shift and go to state 74

state 49

    (43) factor -> LPAREN expr . RPAREN
    (35) expr -> expr . PLUS term
    (36) expr -> expr . PLUS VAR
    (37) expr -> expr . MINUS term
    (38) expr -> expr . MINUS VAR

    RPAREN          shift and go to state 75
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46


state 50

    (50) statement -> COUT p_content SEMICOLON .

    INT             reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    VAR             reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    IF              reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    ELSE            reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    FOR             reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    WHILE           reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    RETURN          reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    LB              reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    RB              reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    COUT            reduce using rule 50 (statement -> COUT p_content SEMICOLON .)
    $end            reduce using rule 50 (statement -> COUT p_content SEMICOLON .)


state 51

    (46) p_content -> LESS LESS . VAR p_content
    (47) p_content -> LESS LESS . SENTENCE p_content
    (48) p_content -> LESS LESS . ENDL

    VAR             shift and go to state 76
    SENTENCE        shift and go to state 77
    ENDL            shift and go to state 78


state 52

    (5) params -> INT . VAR
    (6) params -> INT . VAR COMMA params

    VAR             shift and go to state 79


state 53

    (3) statement -> INT VAR LPAREN params . RPAREN SEMICOLON
    (4) statement -> INT VAR LPAREN params . RPAREN

    RPAREN          shift and go to state 80


state 54

    (17) statement -> INT VAR EQUALS VAR . SEMICOLON
    (45) factor -> VAR .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 81
    MULT            reduce using rule 45 (factor -> VAR .)
    DIV             reduce using rule 45 (factor -> VAR .)
    PLUS            reduce using rule 45 (factor -> VAR .)
    MINUS           reduce using rule 45 (factor -> VAR .)

  ! SEMICOLON       [ reduce using rule 45 (factor -> VAR .) ]


state 55

    (16) statement -> INT VAR EQUALS NUM . SEMICOLON
    (44) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 82
    MULT            reduce using rule 44 (factor -> NUM .)
    DIV             reduce using rule 44 (factor -> NUM .)
    PLUS            reduce using rule 44 (factor -> NUM .)
    MINUS           reduce using rule 44 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 44 (factor -> NUM .) ]


state 56

    (18) statement -> INT VAR EQUALS expr . SEMICOLON
    (35) expr -> expr . PLUS term
    (36) expr -> expr . PLUS VAR
    (37) expr -> expr . MINUS term
    (38) expr -> expr . MINUS VAR

    SEMICOLON       shift and go to state 83
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46


state 57

    (9) args -> VAR COMMA . args
    (8) args -> . VAR
    (9) args -> . VAR COMMA args
    (10) args -> . NUM
    (11) args -> . NUM COMMA args
    (12) args -> .

    VAR             shift and go to state 32
    NUM             shift and go to state 34
    RPAREN          reduce using rule 12 (args -> .)

    args                           shift and go to state 84

state 58

    (13) statement -> VAR LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 85


state 59

    (11) args -> NUM COMMA . args
    (8) args -> . VAR
    (9) args -> . VAR COMMA args
    (10) args -> . NUM
    (11) args -> . NUM COMMA args
    (12) args -> .

    VAR             shift and go to state 32
    NUM             shift and go to state 34
    RPAREN          reduce using rule 12 (args -> .)

    args                           shift and go to state 86

state 60

    (19) statement -> VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 19 (statement -> VAR EQUALS NUM SEMICOLON .)


state 61

    (20) statement -> VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 20 (statement -> VAR EQUALS expr SEMICOLON .)


state 62

    (21) statement -> VAR PLUS PLUS SEMICOLON .

    INT             reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    IF              reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    LB              reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    RB              reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    COUT            reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)
    $end            reduce using rule 21 (statement -> VAR PLUS PLUS SEMICOLON .)


state 63

    (22) statement -> IF LPAREN condition RPAREN .

    INT             reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    VAR             reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    IF              reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    ELSE            reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    FOR             reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    WHILE           reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    RETURN          reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    LB              reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    RB              reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    COUT            reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)
    $end            reduce using rule 22 (statement -> IF LPAREN condition RPAREN .)


state 64

    (26) condition -> VAR GREATER . NUM
    (28) condition -> VAR GREATER . VAR

    NUM             shift and go to state 88
    VAR             shift and go to state 87


state 65

    (27) condition -> VAR LESS . NUM
    (29) condition -> VAR LESS . VAR

    NUM             shift and go to state 90
    VAR             shift and go to state 89


state 66

    (30) condition -> VAR EQUALS . EQUALS NUM

    EQUALS          shift and go to state 91


state 67

    (24) statement -> FOR LPAREN INT VAR . EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    EQUALS          shift and go to state 92


state 68

    (25) statement -> WHILE LPAREN condition RPAREN .

    INT             reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    VAR             reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    IF              reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    ELSE            reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    FOR             reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    WHILE           reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    RETURN          reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    LB              reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    RB              reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    COUT            reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)
    $end            reduce using rule 25 (statement -> WHILE LPAREN condition RPAREN .)


state 69

    (35) expr -> expr PLUS term .
    (40) term -> term . MULT factor
    (41) term -> term . DIV factor

    SEMICOLON       reduce using rule 35 (expr -> expr PLUS term .)
    PLUS            reduce using rule 35 (expr -> expr PLUS term .)
    MINUS           reduce using rule 35 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 35 (expr -> expr PLUS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 70

    (36) expr -> expr PLUS VAR .
    (45) factor -> VAR .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 36 (expr -> expr PLUS VAR .)
  ! reduce/reduce conflict for PLUS resolved using rule 36 (expr -> expr PLUS VAR .)
  ! reduce/reduce conflict for MINUS resolved using rule 36 (expr -> expr PLUS VAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 36 (expr -> expr PLUS VAR .)
    SEMICOLON       reduce using rule 36 (expr -> expr PLUS VAR .)
    PLUS            reduce using rule 36 (expr -> expr PLUS VAR .)
    MINUS           reduce using rule 36 (expr -> expr PLUS VAR .)
    RPAREN          reduce using rule 36 (expr -> expr PLUS VAR .)
    MULT            reduce using rule 45 (factor -> VAR .)
    DIV             reduce using rule 45 (factor -> VAR .)

  ! SEMICOLON       [ reduce using rule 45 (factor -> VAR .) ]
  ! PLUS            [ reduce using rule 45 (factor -> VAR .) ]
  ! MINUS           [ reduce using rule 45 (factor -> VAR .) ]
  ! RPAREN          [ reduce using rule 45 (factor -> VAR .) ]


state 71

    (37) expr -> expr MINUS term .
    (40) term -> term . MULT factor
    (41) term -> term . DIV factor

    SEMICOLON       reduce using rule 37 (expr -> expr MINUS term .)
    PLUS            reduce using rule 37 (expr -> expr MINUS term .)
    MINUS           reduce using rule 37 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 37 (expr -> expr MINUS term .)
    MULT            shift and go to state 47
    DIV             shift and go to state 48


state 72

    (38) expr -> expr MINUS VAR .
    (45) factor -> VAR .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 38 (expr -> expr MINUS VAR .)
  ! reduce/reduce conflict for PLUS resolved using rule 38 (expr -> expr MINUS VAR .)
  ! reduce/reduce conflict for MINUS resolved using rule 38 (expr -> expr MINUS VAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 38 (expr -> expr MINUS VAR .)
    SEMICOLON       reduce using rule 38 (expr -> expr MINUS VAR .)
    PLUS            reduce using rule 38 (expr -> expr MINUS VAR .)
    MINUS           reduce using rule 38 (expr -> expr MINUS VAR .)
    RPAREN          reduce using rule 38 (expr -> expr MINUS VAR .)
    MULT            reduce using rule 45 (factor -> VAR .)
    DIV             reduce using rule 45 (factor -> VAR .)

  ! SEMICOLON       [ reduce using rule 45 (factor -> VAR .) ]
  ! PLUS            [ reduce using rule 45 (factor -> VAR .) ]
  ! MINUS           [ reduce using rule 45 (factor -> VAR .) ]
  ! RPAREN          [ reduce using rule 45 (factor -> VAR .) ]


state 73

    (40) term -> term MULT factor .

    MULT            reduce using rule 40 (term -> term MULT factor .)
    DIV             reduce using rule 40 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 40 (term -> term MULT factor .)
    PLUS            reduce using rule 40 (term -> term MULT factor .)
    MINUS           reduce using rule 40 (term -> term MULT factor .)
    RPAREN          reduce using rule 40 (term -> term MULT factor .)


state 74

    (41) term -> term DIV factor .

    MULT            reduce using rule 41 (term -> term DIV factor .)
    DIV             reduce using rule 41 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 41 (term -> term DIV factor .)
    PLUS            reduce using rule 41 (term -> term DIV factor .)
    MINUS           reduce using rule 41 (term -> term DIV factor .)
    RPAREN          reduce using rule 41 (term -> term DIV factor .)


state 75

    (43) factor -> LPAREN expr RPAREN .

    MULT            reduce using rule 43 (factor -> LPAREN expr RPAREN .)
    DIV             reduce using rule 43 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 43 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 43 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 43 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 43 (factor -> LPAREN expr RPAREN .)


state 76

    (46) p_content -> LESS LESS VAR . p_content
    (46) p_content -> . LESS LESS VAR p_content
    (47) p_content -> . LESS LESS SENTENCE p_content
    (48) p_content -> . LESS LESS ENDL
    (49) p_content -> .

    LESS            shift and go to state 28
    SEMICOLON       reduce using rule 49 (p_content -> .)

    p_content                      shift and go to state 93

state 77

    (47) p_content -> LESS LESS SENTENCE . p_content
    (46) p_content -> . LESS LESS VAR p_content
    (47) p_content -> . LESS LESS SENTENCE p_content
    (48) p_content -> . LESS LESS ENDL
    (49) p_content -> .

    LESS            shift and go to state 28
    SEMICOLON       reduce using rule 49 (p_content -> .)

    p_content                      shift and go to state 94

state 78

    (48) p_content -> LESS LESS ENDL .

    SEMICOLON       reduce using rule 48 (p_content -> LESS LESS ENDL .)


state 79

    (5) params -> INT VAR .
    (6) params -> INT VAR . COMMA params

    RPAREN          reduce using rule 5 (params -> INT VAR .)
    COMMA           shift and go to state 95


state 80

    (3) statement -> INT VAR LPAREN params RPAREN . SEMICOLON
    (4) statement -> INT VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 96
    INT             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    VAR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    IF              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    FOR             reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    LB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    RB              reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    COUT            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)
    $end            reduce using rule 4 (statement -> INT VAR LPAREN params RPAREN .)


state 81

    (17) statement -> INT VAR EQUALS VAR SEMICOLON .

    INT             reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    VAR             reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    IF              reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    ELSE            reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    FOR             reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RETURN          reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    LB              reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RB              reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    COUT            reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    $end            reduce using rule 17 (statement -> INT VAR EQUALS VAR SEMICOLON .)


state 82

    (16) statement -> INT VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 16 (statement -> INT VAR EQUALS NUM SEMICOLON .)


state 83

    (18) statement -> INT VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 18 (statement -> INT VAR EQUALS expr SEMICOLON .)


state 84

    (9) args -> VAR COMMA args .

    RPAREN          reduce using rule 9 (args -> VAR COMMA args .)


state 85

    (13) statement -> VAR LPAREN args RPAREN SEMICOLON .

    INT             reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VAR             reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    ELSE            reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    LB              reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RB              reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    COUT            reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 13 (statement -> VAR LPAREN args RPAREN SEMICOLON .)


state 86

    (11) args -> NUM COMMA args .

    RPAREN          reduce using rule 11 (args -> NUM COMMA args .)


state 87

    (28) condition -> VAR GREATER VAR .

    RPAREN          reduce using rule 28 (condition -> VAR GREATER VAR .)
    SEMICOLON       reduce using rule 28 (condition -> VAR GREATER VAR .)


state 88

    (26) condition -> VAR GREATER NUM .

    RPAREN          reduce using rule 26 (condition -> VAR GREATER NUM .)
    SEMICOLON       reduce using rule 26 (condition -> VAR GREATER NUM .)


state 89

    (29) condition -> VAR LESS VAR .

    RPAREN          reduce using rule 29 (condition -> VAR LESS VAR .)
    SEMICOLON       reduce using rule 29 (condition -> VAR LESS VAR .)


state 90

    (27) condition -> VAR LESS NUM .

    RPAREN          reduce using rule 27 (condition -> VAR LESS NUM .)
    SEMICOLON       reduce using rule 27 (condition -> VAR LESS NUM .)


state 91

    (30) condition -> VAR EQUALS EQUALS . NUM

    NUM             shift and go to state 97


state 92

    (24) statement -> FOR LPAREN INT VAR EQUALS . NUM SEMICOLON condition SEMICOLON for_update RPAREN

    NUM             shift and go to state 98


state 93

    (46) p_content -> LESS LESS VAR p_content .

    SEMICOLON       reduce using rule 46 (p_content -> LESS LESS VAR p_content .)


state 94

    (47) p_content -> LESS LESS SENTENCE p_content .

    SEMICOLON       reduce using rule 47 (p_content -> LESS LESS SENTENCE p_content .)


state 95

    (6) params -> INT VAR COMMA . params
    (5) params -> . INT VAR
    (6) params -> . INT VAR COMMA params
    (7) params -> .

    INT             shift and go to state 52
    RPAREN          reduce using rule 7 (params -> .)

    params                         shift and go to state 99

state 96

    (3) statement -> INT VAR LPAREN params RPAREN SEMICOLON .

    INT             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)


state 97

    (30) condition -> VAR EQUALS EQUALS NUM .

    RPAREN          reduce using rule 30 (condition -> VAR EQUALS EQUALS NUM .)
    SEMICOLON       reduce using rule 30 (condition -> VAR EQUALS EQUALS NUM .)


state 98

    (24) statement -> FOR LPAREN INT VAR EQUALS NUM . SEMICOLON condition SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 100


state 99

    (6) params -> INT VAR COMMA params .

    RPAREN          reduce using rule 6 (params -> INT VAR COMMA params .)


state 100

    (24) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON . condition SEMICOLON for_update RPAREN
    (26) condition -> . VAR GREATER NUM
    (27) condition -> . VAR LESS NUM
    (28) condition -> . VAR GREATER VAR
    (29) condition -> . VAR LESS VAR
    (30) condition -> . VAR EQUALS EQUALS NUM

    VAR             shift and go to state 41

    condition                      shift and go to state 101

state 101

    (24) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition . SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 102


state 102

    (24) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON . for_update RPAREN
    (32) for_update -> . VAR PLUS PLUS

    VAR             shift and go to state 103

    for_update                     shift and go to state 104

state 103

    (32) for_update -> VAR . PLUS PLUS

    PLUS            shift and go to state 105


state 104

    (24) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update . RPAREN

    RPAREN          shift and go to state 106


state 105

    (32) for_update -> VAR PLUS . PLUS

    PLUS            shift and go to state 107


state 106

    (24) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .

    INT             reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    VAR             reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    IF              reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    ELSE            reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    FOR             reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    WHILE           reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RETURN          reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    LB              reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RB              reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    COUT            reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    $end            reduce using rule 24 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)


state 107

    (32) for_update -> VAR PLUS PLUS .

    RPAREN          reduce using rule 32 (for_update -> VAR PLUS PLUS .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 37 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 54 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 55 resolved as shift
WARNING: reduce/reduce conflict in state 70 resolved using rule (expr -> expr PLUS VAR)
WARNING: rejected rule (factor -> VAR) in state 70
WARNING: reduce/reduce conflict in state 72 resolved using rule (expr -> expr MINUS VAR)
WARNING: rejected rule (factor -> VAR) in state 72
