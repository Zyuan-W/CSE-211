Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    IGNORE_CONTENT
    PRINT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> INT VAR LPAREN params RPAREN SEMICOLON
Rule 4     statement -> VOID VAR LPAREN params RPAREN SEMICOLON
Rule 5     statement -> INT VAR LPAREN params RPAREN
Rule 6     statement -> VOID VAR LPAREN params RPAREN
Rule 7     params -> INT VAR
Rule 8     params -> params COMMA INT VAR
Rule 9     params -> INT STAR VAR
Rule 10    params -> params COMMA INT STAR VAR
Rule 11    params -> <empty>
Rule 12    args -> VAR
Rule 13    args -> args COMMA VAR
Rule 14    args -> NUM
Rule 15    args -> args COMMA NUM
Rule 16    args -> <empty>
Rule 17    statement -> f_statement
Rule 18    f_statement -> VAR LPAREN args RPAREN SEMICOLON
Rule 19    f_statement -> VAR EQUALS f_statement
Rule 20    statement -> INT VAR SEMICOLON
Rule 21    statement -> INT VAR EQUALS NUM SEMICOLON
Rule 22    statement -> INT VAR EQUALS VAR SEMICOLON
Rule 23    statement -> INT VAR EQUALS expr SEMICOLON
Rule 24    statement -> VAR EQUALS NUM SEMICOLON
Rule 25    statement -> array EQUALS NUM SEMICOLON
Rule 26    statement -> VAR EQUALS expr SEMICOLON
Rule 27    statement -> array EQUALS expr SEMICOLON
Rule 28    statement -> IF LPAREN condition RPAREN
Rule 29    statement -> ELSE
Rule 30    statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
Rule 31    statement -> WHILE LPAREN condition RPAREN
Rule 32    condition -> factor GREATER factor
Rule 33    condition -> factor LESS factor
Rule 34    condition -> factor EQUALS EQUALS factor
Rule 35    condition -> factor GREATER EQUALS factor
Rule 36    condition -> factor LESS EQUALS factor
Rule 37    statement -> RETURN expr SEMICOLON
Rule 38    statement -> factor PLUS EQUALS factor SEMICOLON
Rule 39    statement -> factor MINUS EQUALS factor SEMICOLON
Rule 40    statement -> factor PLUS PLUS SEMICOLON
Rule 41    statement -> factor MINUS MINUS SEMICOLON
Rule 42    for_update -> VAR PLUS PLUS
Rule 43    for_update -> VAR MINUS MINUS
Rule 44    statement -> LB
Rule 45    statement -> RB
Rule 46    expr -> expr PLUS term
Rule 47    expr -> expr MINUS term
Rule 48    expr -> term
Rule 49    term -> term STAR factor
Rule 50    term -> term DIV factor
Rule 51    term -> factor
Rule 52    factor -> LPAREN expr RPAREN
Rule 53    factor -> NUM
Rule 54    factor -> VAR
Rule 55    factor -> array
Rule 56    array -> VAR LBRACKET NUM RBRACKET
Rule 57    array -> VAR LBRACKET VAR RBRACKET
Rule 58    statement -> INT STAR VAR SEMICOLON
Rule 59    statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
Rule 60    p_content -> LESS LESS VAR p_content
Rule 61    p_content -> LESS LESS SENTENCE p_content
Rule 62    p_content -> LESS LESS ENDL
Rule 63    p_content -> <empty>
Rule 64    statement -> COUT p_content SEMICOLON

Terminals, with rules where they appear

COMMA                : 8 10 13 15
COUT                 : 64
DIV                  : 50
ELSE                 : 29
ENDL                 : 62
EQUALS               : 19 21 22 23 24 25 26 27 30 34 34 35 36 38 39 59
FOR                  : 30
GREATER              : 32 35
IF                   : 28
IGNORE_CONTENT       : 
INT                  : 3 5 7 8 9 10 20 21 22 23 30 58 59 59
LB                   : 44
LBRACKET             : 56 57
LESS                 : 33 36 60 60 61 61 62 62
LPAREN               : 3 4 5 6 18 28 30 31 52 59 59 59
MALLOC               : 59
MINUS                : 39 41 41 43 43 47
NUM                  : 14 15 21 24 25 30 53 56
PLUS                 : 38 40 40 42 42 46
PRINT                : 
RB                   : 45
RBRACKET             : 56 57
RETURN               : 37
RPAREN               : 3 4 5 6 18 28 30 31 52 59 59 59
SEMICOLON            : 3 4 18 20 21 22 23 24 25 26 27 30 30 37 38 39 40 41 58 59 64
SENTENCE             : 61
SIZEOF               : 59
STAR                 : 9 10 49 58 59 59
VAR                  : 3 4 5 6 7 8 9 10 12 13 18 19 20 21 22 22 23 24 26 30 42 43 54 56 57 57 58 59 60
VOID                 : 4 6
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

args                 : 13 15 18
array                : 25 27 55
condition            : 28 30 31
expr                 : 23 26 27 37 46 47 52
f_statement          : 17 19
factor               : 32 32 33 33 34 34 35 35 36 36 38 38 39 39 40 41 49 50 51 59
for_update           : 30
p_content            : 60 61 64
params               : 3 4 5 6 8 10
program              : 2 0
statement            : 1 2
term                 : 46 47 48 49 50

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . VOID VAR LPAREN params RPAREN SEMICOLON
    (5) statement -> . INT VAR LPAREN params RPAREN
    (6) statement -> . VOID VAR LPAREN params RPAREN
    (17) statement -> . f_statement
    (20) statement -> . INT VAR SEMICOLON
    (21) statement -> . INT VAR EQUALS NUM SEMICOLON
    (22) statement -> . INT VAR EQUALS VAR SEMICOLON
    (23) statement -> . INT VAR EQUALS expr SEMICOLON
    (24) statement -> . VAR EQUALS NUM SEMICOLON
    (25) statement -> . array EQUALS NUM SEMICOLON
    (26) statement -> . VAR EQUALS expr SEMICOLON
    (27) statement -> . array EQUALS expr SEMICOLON
    (28) statement -> . IF LPAREN condition RPAREN
    (29) statement -> . ELSE
    (30) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (31) statement -> . WHILE LPAREN condition RPAREN
    (37) statement -> . RETURN expr SEMICOLON
    (38) statement -> . factor PLUS EQUALS factor SEMICOLON
    (39) statement -> . factor MINUS EQUALS factor SEMICOLON
    (40) statement -> . factor PLUS PLUS SEMICOLON
    (41) statement -> . factor MINUS MINUS SEMICOLON
    (44) statement -> . LB
    (45) statement -> . RB
    (58) statement -> . INT STAR VAR SEMICOLON
    (59) statement -> . VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (64) statement -> . COUT p_content SEMICOLON
    (18) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (19) f_statement -> . VAR EQUALS f_statement
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array

    INT             shift and go to state 3
    VOID            shift and go to state 6
    VAR             shift and go to state 4
    IF              shift and go to state 10
    ELSE            shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    LB              shift and go to state 16
    RB              shift and go to state 17
    COUT            shift and go to state 18
    LPAREN          shift and go to state 5
    NUM             shift and go to state 8

    program                        shift and go to state 1
    statement                      shift and go to state 2
    f_statement                    shift and go to state 7
    array                          shift and go to state 9
    factor                         shift and go to state 15

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . INT VAR LPAREN params RPAREN SEMICOLON
    (4) statement -> . VOID VAR LPAREN params RPAREN SEMICOLON
    (5) statement -> . INT VAR LPAREN params RPAREN
    (6) statement -> . VOID VAR LPAREN params RPAREN
    (17) statement -> . f_statement
    (20) statement -> . INT VAR SEMICOLON
    (21) statement -> . INT VAR EQUALS NUM SEMICOLON
    (22) statement -> . INT VAR EQUALS VAR SEMICOLON
    (23) statement -> . INT VAR EQUALS expr SEMICOLON
    (24) statement -> . VAR EQUALS NUM SEMICOLON
    (25) statement -> . array EQUALS NUM SEMICOLON
    (26) statement -> . VAR EQUALS expr SEMICOLON
    (27) statement -> . array EQUALS expr SEMICOLON
    (28) statement -> . IF LPAREN condition RPAREN
    (29) statement -> . ELSE
    (30) statement -> . FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN
    (31) statement -> . WHILE LPAREN condition RPAREN
    (37) statement -> . RETURN expr SEMICOLON
    (38) statement -> . factor PLUS EQUALS factor SEMICOLON
    (39) statement -> . factor MINUS EQUALS factor SEMICOLON
    (40) statement -> . factor PLUS PLUS SEMICOLON
    (41) statement -> . factor MINUS MINUS SEMICOLON
    (44) statement -> . LB
    (45) statement -> . RB
    (58) statement -> . INT STAR VAR SEMICOLON
    (59) statement -> . VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (64) statement -> . COUT p_content SEMICOLON
    (18) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (19) f_statement -> . VAR EQUALS f_statement
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array

    INT             shift and go to state 3
    VOID            shift and go to state 6
    VAR             shift and go to state 4
    IF              shift and go to state 10
    ELSE            shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    LB              shift and go to state 16
    RB              shift and go to state 17
    COUT            shift and go to state 18
    LPAREN          shift and go to state 5
    NUM             shift and go to state 8

    statement                      shift and go to state 19
    f_statement                    shift and go to state 7
    array                          shift and go to state 9
    factor                         shift and go to state 15

state 2

    (1) program -> statement .

    INT             reduce using rule 1 (program -> statement .)
    VOID            reduce using rule 1 (program -> statement .)
    VAR             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    ELSE            reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    WHILE           reduce using rule 1 (program -> statement .)
    RETURN          reduce using rule 1 (program -> statement .)
    LB              reduce using rule 1 (program -> statement .)
    RB              reduce using rule 1 (program -> statement .)
    COUT            reduce using rule 1 (program -> statement .)
    LPAREN          reduce using rule 1 (program -> statement .)
    NUM             reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> INT . VAR LPAREN params RPAREN SEMICOLON
    (5) statement -> INT . VAR LPAREN params RPAREN
    (20) statement -> INT . VAR SEMICOLON
    (21) statement -> INT . VAR EQUALS NUM SEMICOLON
    (22) statement -> INT . VAR EQUALS VAR SEMICOLON
    (23) statement -> INT . VAR EQUALS expr SEMICOLON
    (58) statement -> INT . STAR VAR SEMICOLON

    VAR             shift and go to state 20
    STAR            shift and go to state 21


state 4

    (24) statement -> VAR . EQUALS NUM SEMICOLON
    (26) statement -> VAR . EQUALS expr SEMICOLON
    (59) statement -> VAR . EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (18) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (19) f_statement -> VAR . EQUALS f_statement
    (56) array -> VAR . LBRACKET NUM RBRACKET
    (57) array -> VAR . LBRACKET VAR RBRACKET
    (54) factor -> VAR .

    EQUALS          shift and go to state 22
    LPAREN          shift and go to state 23
    LBRACKET        shift and go to state 24
    PLUS            reduce using rule 54 (factor -> VAR .)
    MINUS           reduce using rule 54 (factor -> VAR .)


state 5

    (52) factor -> LPAREN . expr RPAREN
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    expr                           shift and go to state 25
    term                           shift and go to state 26
    factor                         shift and go to state 27
    array                          shift and go to state 29

state 6

    (4) statement -> VOID . VAR LPAREN params RPAREN SEMICOLON
    (6) statement -> VOID . VAR LPAREN params RPAREN

    VAR             shift and go to state 30


state 7

    (17) statement -> f_statement .

    INT             reduce using rule 17 (statement -> f_statement .)
    VOID            reduce using rule 17 (statement -> f_statement .)
    VAR             reduce using rule 17 (statement -> f_statement .)
    IF              reduce using rule 17 (statement -> f_statement .)
    ELSE            reduce using rule 17 (statement -> f_statement .)
    FOR             reduce using rule 17 (statement -> f_statement .)
    WHILE           reduce using rule 17 (statement -> f_statement .)
    RETURN          reduce using rule 17 (statement -> f_statement .)
    LB              reduce using rule 17 (statement -> f_statement .)
    RB              reduce using rule 17 (statement -> f_statement .)
    COUT            reduce using rule 17 (statement -> f_statement .)
    LPAREN          reduce using rule 17 (statement -> f_statement .)
    NUM             reduce using rule 17 (statement -> f_statement .)
    $end            reduce using rule 17 (statement -> f_statement .)


state 8

    (53) factor -> NUM .

    PLUS            reduce using rule 53 (factor -> NUM .)
    MINUS           reduce using rule 53 (factor -> NUM .)
    STAR            reduce using rule 53 (factor -> NUM .)
    DIV             reduce using rule 53 (factor -> NUM .)
    RPAREN          reduce using rule 53 (factor -> NUM .)
    SEMICOLON       reduce using rule 53 (factor -> NUM .)
    GREATER         reduce using rule 53 (factor -> NUM .)
    LESS            reduce using rule 53 (factor -> NUM .)
    EQUALS          reduce using rule 53 (factor -> NUM .)


state 9

    (25) statement -> array . EQUALS NUM SEMICOLON
    (27) statement -> array . EQUALS expr SEMICOLON
    (55) factor -> array .

    EQUALS          shift and go to state 31
    PLUS            reduce using rule 55 (factor -> array .)
    MINUS           reduce using rule 55 (factor -> array .)


state 10

    (28) statement -> IF . LPAREN condition RPAREN

    LPAREN          shift and go to state 32


state 11

    (29) statement -> ELSE .

    INT             reduce using rule 29 (statement -> ELSE .)
    VOID            reduce using rule 29 (statement -> ELSE .)
    VAR             reduce using rule 29 (statement -> ELSE .)
    IF              reduce using rule 29 (statement -> ELSE .)
    ELSE            reduce using rule 29 (statement -> ELSE .)
    FOR             reduce using rule 29 (statement -> ELSE .)
    WHILE           reduce using rule 29 (statement -> ELSE .)
    RETURN          reduce using rule 29 (statement -> ELSE .)
    LB              reduce using rule 29 (statement -> ELSE .)
    RB              reduce using rule 29 (statement -> ELSE .)
    COUT            reduce using rule 29 (statement -> ELSE .)
    LPAREN          reduce using rule 29 (statement -> ELSE .)
    NUM             reduce using rule 29 (statement -> ELSE .)
    $end            reduce using rule 29 (statement -> ELSE .)


state 12

    (30) statement -> FOR . LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    LPAREN          shift and go to state 33


state 13

    (31) statement -> WHILE . LPAREN condition RPAREN

    LPAREN          shift and go to state 34


state 14

    (37) statement -> RETURN . expr SEMICOLON
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    expr                           shift and go to state 35
    term                           shift and go to state 26
    factor                         shift and go to state 27
    array                          shift and go to state 29

state 15

    (38) statement -> factor . PLUS EQUALS factor SEMICOLON
    (39) statement -> factor . MINUS EQUALS factor SEMICOLON
    (40) statement -> factor . PLUS PLUS SEMICOLON
    (41) statement -> factor . MINUS MINUS SEMICOLON

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 16

    (44) statement -> LB .

    INT             reduce using rule 44 (statement -> LB .)
    VOID            reduce using rule 44 (statement -> LB .)
    VAR             reduce using rule 44 (statement -> LB .)
    IF              reduce using rule 44 (statement -> LB .)
    ELSE            reduce using rule 44 (statement -> LB .)
    FOR             reduce using rule 44 (statement -> LB .)
    WHILE           reduce using rule 44 (statement -> LB .)
    RETURN          reduce using rule 44 (statement -> LB .)
    LB              reduce using rule 44 (statement -> LB .)
    RB              reduce using rule 44 (statement -> LB .)
    COUT            reduce using rule 44 (statement -> LB .)
    LPAREN          reduce using rule 44 (statement -> LB .)
    NUM             reduce using rule 44 (statement -> LB .)
    $end            reduce using rule 44 (statement -> LB .)


state 17

    (45) statement -> RB .

    INT             reduce using rule 45 (statement -> RB .)
    VOID            reduce using rule 45 (statement -> RB .)
    VAR             reduce using rule 45 (statement -> RB .)
    IF              reduce using rule 45 (statement -> RB .)
    ELSE            reduce using rule 45 (statement -> RB .)
    FOR             reduce using rule 45 (statement -> RB .)
    WHILE           reduce using rule 45 (statement -> RB .)
    RETURN          reduce using rule 45 (statement -> RB .)
    LB              reduce using rule 45 (statement -> RB .)
    RB              reduce using rule 45 (statement -> RB .)
    COUT            reduce using rule 45 (statement -> RB .)
    LPAREN          reduce using rule 45 (statement -> RB .)
    NUM             reduce using rule 45 (statement -> RB .)
    $end            reduce using rule 45 (statement -> RB .)


state 18

    (64) statement -> COUT . p_content SEMICOLON
    (60) p_content -> . LESS LESS VAR p_content
    (61) p_content -> . LESS LESS SENTENCE p_content
    (62) p_content -> . LESS LESS ENDL
    (63) p_content -> .

    LESS            shift and go to state 39
    SEMICOLON       reduce using rule 63 (p_content -> .)

    p_content                      shift and go to state 38

state 19

    (2) program -> program statement .

    INT             reduce using rule 2 (program -> program statement .)
    VOID            reduce using rule 2 (program -> program statement .)
    VAR             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    ELSE            reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    WHILE           reduce using rule 2 (program -> program statement .)
    RETURN          reduce using rule 2 (program -> program statement .)
    LB              reduce using rule 2 (program -> program statement .)
    RB              reduce using rule 2 (program -> program statement .)
    COUT            reduce using rule 2 (program -> program statement .)
    LPAREN          reduce using rule 2 (program -> program statement .)
    NUM             reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 20

    (3) statement -> INT VAR . LPAREN params RPAREN SEMICOLON
    (5) statement -> INT VAR . LPAREN params RPAREN
    (20) statement -> INT VAR . SEMICOLON
    (21) statement -> INT VAR . EQUALS NUM SEMICOLON
    (22) statement -> INT VAR . EQUALS VAR SEMICOLON
    (23) statement -> INT VAR . EQUALS expr SEMICOLON

    LPAREN          shift and go to state 40
    SEMICOLON       shift and go to state 41
    EQUALS          shift and go to state 42


state 21

    (58) statement -> INT STAR . VAR SEMICOLON

    VAR             shift and go to state 43


state 22

    (24) statement -> VAR EQUALS . NUM SEMICOLON
    (26) statement -> VAR EQUALS . expr SEMICOLON
    (59) statement -> VAR EQUALS . LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (19) f_statement -> VAR EQUALS . f_statement
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (18) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (19) f_statement -> . VAR EQUALS f_statement
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    NUM             shift and go to state 45
    LPAREN          shift and go to state 47
    VAR             shift and go to state 44

    expr                           shift and go to state 46
    factor                         shift and go to state 27
    f_statement                    shift and go to state 48
    term                           shift and go to state 26
    array                          shift and go to state 29

state 23

    (18) f_statement -> VAR LPAREN . args RPAREN SEMICOLON
    (12) args -> . VAR
    (13) args -> . args COMMA VAR
    (14) args -> . NUM
    (15) args -> . args COMMA NUM
    (16) args -> .

    VAR             shift and go to state 49
    NUM             shift and go to state 51
    RPAREN          reduce using rule 16 (args -> .)
    COMMA           reduce using rule 16 (args -> .)

    args                           shift and go to state 50

state 24

    (56) array -> VAR LBRACKET . NUM RBRACKET
    (57) array -> VAR LBRACKET . VAR RBRACKET

    NUM             shift and go to state 53
    VAR             shift and go to state 52


state 25

    (52) factor -> LPAREN expr . RPAREN
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56


state 26

    (48) expr -> term .
    (49) term -> term . STAR factor
    (50) term -> term . DIV factor

    RPAREN          reduce using rule 48 (expr -> term .)
    PLUS            reduce using rule 48 (expr -> term .)
    MINUS           reduce using rule 48 (expr -> term .)
    SEMICOLON       reduce using rule 48 (expr -> term .)
    STAR            shift and go to state 57
    DIV             shift and go to state 58


state 27

    (51) term -> factor .

    STAR            reduce using rule 51 (term -> factor .)
    DIV             reduce using rule 51 (term -> factor .)
    RPAREN          reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)
    SEMICOLON       reduce using rule 51 (term -> factor .)


state 28

    (54) factor -> VAR .
    (56) array -> VAR . LBRACKET NUM RBRACKET
    (57) array -> VAR . LBRACKET VAR RBRACKET

    STAR            reduce using rule 54 (factor -> VAR .)
    DIV             reduce using rule 54 (factor -> VAR .)
    RPAREN          reduce using rule 54 (factor -> VAR .)
    PLUS            reduce using rule 54 (factor -> VAR .)
    MINUS           reduce using rule 54 (factor -> VAR .)
    SEMICOLON       reduce using rule 54 (factor -> VAR .)
    GREATER         reduce using rule 54 (factor -> VAR .)
    LESS            reduce using rule 54 (factor -> VAR .)
    EQUALS          reduce using rule 54 (factor -> VAR .)
    LBRACKET        shift and go to state 24


state 29

    (55) factor -> array .

    STAR            reduce using rule 55 (factor -> array .)
    DIV             reduce using rule 55 (factor -> array .)
    RPAREN          reduce using rule 55 (factor -> array .)
    PLUS            reduce using rule 55 (factor -> array .)
    MINUS           reduce using rule 55 (factor -> array .)
    SEMICOLON       reduce using rule 55 (factor -> array .)
    GREATER         reduce using rule 55 (factor -> array .)
    LESS            reduce using rule 55 (factor -> array .)
    EQUALS          reduce using rule 55 (factor -> array .)


state 30

    (4) statement -> VOID VAR . LPAREN params RPAREN SEMICOLON
    (6) statement -> VOID VAR . LPAREN params RPAREN

    LPAREN          shift and go to state 59


state 31

    (25) statement -> array EQUALS . NUM SEMICOLON
    (27) statement -> array EQUALS . expr SEMICOLON
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    NUM             shift and go to state 60
    LPAREN          shift and go to state 5
    VAR             shift and go to state 28

    array                          shift and go to state 29
    expr                           shift and go to state 61
    term                           shift and go to state 26
    factor                         shift and go to state 27

state 32

    (28) statement -> IF LPAREN . condition RPAREN
    (32) condition -> . factor GREATER factor
    (33) condition -> . factor LESS factor
    (34) condition -> . factor EQUALS EQUALS factor
    (35) condition -> . factor GREATER EQUALS factor
    (36) condition -> . factor LESS EQUALS factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    condition                      shift and go to state 62
    factor                         shift and go to state 63
    array                          shift and go to state 29

state 33

    (30) statement -> FOR LPAREN . INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    INT             shift and go to state 64


state 34

    (31) statement -> WHILE LPAREN . condition RPAREN
    (32) condition -> . factor GREATER factor
    (33) condition -> . factor LESS factor
    (34) condition -> . factor EQUALS EQUALS factor
    (35) condition -> . factor GREATER EQUALS factor
    (36) condition -> . factor LESS EQUALS factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    condition                      shift and go to state 65
    factor                         shift and go to state 63
    array                          shift and go to state 29

state 35

    (37) statement -> RETURN expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 66
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56


state 36

    (38) statement -> factor PLUS . EQUALS factor SEMICOLON
    (40) statement -> factor PLUS . PLUS SEMICOLON

    EQUALS          shift and go to state 68
    PLUS            shift and go to state 67


state 37

    (39) statement -> factor MINUS . EQUALS factor SEMICOLON
    (41) statement -> factor MINUS . MINUS SEMICOLON

    EQUALS          shift and go to state 70
    MINUS           shift and go to state 69


state 38

    (64) statement -> COUT p_content . SEMICOLON

    SEMICOLON       shift and go to state 71


state 39

    (60) p_content -> LESS . LESS VAR p_content
    (61) p_content -> LESS . LESS SENTENCE p_content
    (62) p_content -> LESS . LESS ENDL

    LESS            shift and go to state 72


state 40

    (3) statement -> INT VAR LPAREN . params RPAREN SEMICOLON
    (5) statement -> INT VAR LPAREN . params RPAREN
    (7) params -> . INT VAR
    (8) params -> . params COMMA INT VAR
    (9) params -> . INT STAR VAR
    (10) params -> . params COMMA INT STAR VAR
    (11) params -> .

    INT             shift and go to state 73
    RPAREN          reduce using rule 11 (params -> .)
    COMMA           reduce using rule 11 (params -> .)

    params                         shift and go to state 74

state 41

    (20) statement -> INT VAR SEMICOLON .

    INT             reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    VOID            reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    VAR             reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    IF              reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    ELSE            reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    FOR             reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    RETURN          reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    LB              reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    RB              reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    COUT            reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    LPAREN          reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    NUM             reduce using rule 20 (statement -> INT VAR SEMICOLON .)
    $end            reduce using rule 20 (statement -> INT VAR SEMICOLON .)


state 42

    (21) statement -> INT VAR EQUALS . NUM SEMICOLON
    (22) statement -> INT VAR EQUALS . VAR SEMICOLON
    (23) statement -> INT VAR EQUALS . expr SEMICOLON
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    NUM             shift and go to state 76
    VAR             shift and go to state 75
    LPAREN          shift and go to state 5

    expr                           shift and go to state 77
    term                           shift and go to state 26
    factor                         shift and go to state 27
    array                          shift and go to state 29

state 43

    (58) statement -> INT STAR VAR . SEMICOLON

    SEMICOLON       shift and go to state 78


state 44

    (18) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (19) f_statement -> VAR . EQUALS f_statement
    (54) factor -> VAR .
    (56) array -> VAR . LBRACKET NUM RBRACKET
    (57) array -> VAR . LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 23
    EQUALS          shift and go to state 79
    STAR            reduce using rule 54 (factor -> VAR .)
    DIV             reduce using rule 54 (factor -> VAR .)
    SEMICOLON       reduce using rule 54 (factor -> VAR .)
    PLUS            reduce using rule 54 (factor -> VAR .)
    MINUS           reduce using rule 54 (factor -> VAR .)
    LBRACKET        shift and go to state 24


state 45

    (24) statement -> VAR EQUALS NUM . SEMICOLON
    (53) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 80
    STAR            reduce using rule 53 (factor -> NUM .)
    DIV             reduce using rule 53 (factor -> NUM .)
    PLUS            reduce using rule 53 (factor -> NUM .)
    MINUS           reduce using rule 53 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 53 (factor -> NUM .) ]


state 46

    (26) statement -> VAR EQUALS expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 81
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56


state 47

    (59) statement -> VAR EQUALS LPAREN . INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON
    (52) factor -> LPAREN . expr RPAREN
    (46) expr -> . expr PLUS term
    (47) expr -> . expr MINUS term
    (48) expr -> . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    INT             shift and go to state 82
    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 27
    expr                           shift and go to state 25
    term                           shift and go to state 26
    array                          shift and go to state 29

state 48

    (19) f_statement -> VAR EQUALS f_statement .

    INT             reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    VOID            reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    VAR             reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    IF              reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    ELSE            reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    FOR             reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    WHILE           reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    RETURN          reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    LB              reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    RB              reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    COUT            reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    LPAREN          reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    NUM             reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)
    $end            reduce using rule 19 (f_statement -> VAR EQUALS f_statement .)


state 49

    (12) args -> VAR .

    RPAREN          reduce using rule 12 (args -> VAR .)
    COMMA           reduce using rule 12 (args -> VAR .)


state 50

    (18) f_statement -> VAR LPAREN args . RPAREN SEMICOLON
    (13) args -> args . COMMA VAR
    (15) args -> args . COMMA NUM

    RPAREN          shift and go to state 83
    COMMA           shift and go to state 84


state 51

    (14) args -> NUM .

    RPAREN          reduce using rule 14 (args -> NUM .)
    COMMA           reduce using rule 14 (args -> NUM .)


state 52

    (57) array -> VAR LBRACKET VAR . RBRACKET

    RBRACKET        shift and go to state 85


state 53

    (56) array -> VAR LBRACKET NUM . RBRACKET

    RBRACKET        shift and go to state 86


state 54

    (52) factor -> LPAREN expr RPAREN .

    PLUS            reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    STAR            reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    DIV             reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    GREATER         reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    LESS            reduce using rule 52 (factor -> LPAREN expr RPAREN .)
    EQUALS          reduce using rule 52 (factor -> LPAREN expr RPAREN .)


state 55

    (46) expr -> expr PLUS . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    term                           shift and go to state 87
    factor                         shift and go to state 27
    array                          shift and go to state 29

state 56

    (47) expr -> expr MINUS . term
    (49) term -> . term STAR factor
    (50) term -> . term DIV factor
    (51) term -> . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    term                           shift and go to state 88
    factor                         shift and go to state 27
    array                          shift and go to state 29

state 57

    (49) term -> term STAR . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 89
    array                          shift and go to state 29

state 58

    (50) term -> term DIV . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 90
    array                          shift and go to state 29

state 59

    (4) statement -> VOID VAR LPAREN . params RPAREN SEMICOLON
    (6) statement -> VOID VAR LPAREN . params RPAREN
    (7) params -> . INT VAR
    (8) params -> . params COMMA INT VAR
    (9) params -> . INT STAR VAR
    (10) params -> . params COMMA INT STAR VAR
    (11) params -> .

    INT             shift and go to state 73
    RPAREN          reduce using rule 11 (params -> .)
    COMMA           reduce using rule 11 (params -> .)

    params                         shift and go to state 91

state 60

    (25) statement -> array EQUALS NUM . SEMICOLON
    (53) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 92
    STAR            reduce using rule 53 (factor -> NUM .)
    DIV             reduce using rule 53 (factor -> NUM .)
    PLUS            reduce using rule 53 (factor -> NUM .)
    MINUS           reduce using rule 53 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 53 (factor -> NUM .) ]


state 61

    (27) statement -> array EQUALS expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 93
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56


state 62

    (28) statement -> IF LPAREN condition . RPAREN

    RPAREN          shift and go to state 94


state 63

    (32) condition -> factor . GREATER factor
    (33) condition -> factor . LESS factor
    (34) condition -> factor . EQUALS EQUALS factor
    (35) condition -> factor . GREATER EQUALS factor
    (36) condition -> factor . LESS EQUALS factor

    GREATER         shift and go to state 95
    LESS            shift and go to state 96
    EQUALS          shift and go to state 97


state 64

    (30) statement -> FOR LPAREN INT . VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    VAR             shift and go to state 98


state 65

    (31) statement -> WHILE LPAREN condition . RPAREN

    RPAREN          shift and go to state 99


state 66

    (37) statement -> RETURN expr SEMICOLON .

    INT             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    VOID            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    VAR             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    IF              reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    LB              reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    RB              reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    COUT            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    NUM             reduce using rule 37 (statement -> RETURN expr SEMICOLON .)
    $end            reduce using rule 37 (statement -> RETURN expr SEMICOLON .)


state 67

    (40) statement -> factor PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 100


state 68

    (38) statement -> factor PLUS EQUALS . factor SEMICOLON
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 101
    array                          shift and go to state 29

state 69

    (41) statement -> factor MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 102


state 70

    (39) statement -> factor MINUS EQUALS . factor SEMICOLON
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 103
    array                          shift and go to state 29

state 71

    (64) statement -> COUT p_content SEMICOLON .

    INT             reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    VOID            reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    VAR             reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    IF              reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    ELSE            reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    FOR             reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    WHILE           reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    RETURN          reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    LB              reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    RB              reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    COUT            reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    LPAREN          reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    NUM             reduce using rule 64 (statement -> COUT p_content SEMICOLON .)
    $end            reduce using rule 64 (statement -> COUT p_content SEMICOLON .)


state 72

    (60) p_content -> LESS LESS . VAR p_content
    (61) p_content -> LESS LESS . SENTENCE p_content
    (62) p_content -> LESS LESS . ENDL

    VAR             shift and go to state 104
    SENTENCE        shift and go to state 105
    ENDL            shift and go to state 106


state 73

    (7) params -> INT . VAR
    (9) params -> INT . STAR VAR

    VAR             shift and go to state 107
    STAR            shift and go to state 108


state 74

    (3) statement -> INT VAR LPAREN params . RPAREN SEMICOLON
    (5) statement -> INT VAR LPAREN params . RPAREN
    (8) params -> params . COMMA INT VAR
    (10) params -> params . COMMA INT STAR VAR

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 110


state 75

    (22) statement -> INT VAR EQUALS VAR . SEMICOLON
    (54) factor -> VAR .
    (56) array -> VAR . LBRACKET NUM RBRACKET
    (57) array -> VAR . LBRACKET VAR RBRACKET

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 111
    STAR            reduce using rule 54 (factor -> VAR .)
    DIV             reduce using rule 54 (factor -> VAR .)
    PLUS            reduce using rule 54 (factor -> VAR .)
    MINUS           reduce using rule 54 (factor -> VAR .)
    LBRACKET        shift and go to state 24

  ! SEMICOLON       [ reduce using rule 54 (factor -> VAR .) ]


state 76

    (21) statement -> INT VAR EQUALS NUM . SEMICOLON
    (53) factor -> NUM .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 112
    STAR            reduce using rule 53 (factor -> NUM .)
    DIV             reduce using rule 53 (factor -> NUM .)
    PLUS            reduce using rule 53 (factor -> NUM .)
    MINUS           reduce using rule 53 (factor -> NUM .)

  ! SEMICOLON       [ reduce using rule 53 (factor -> NUM .) ]


state 77

    (23) statement -> INT VAR EQUALS expr . SEMICOLON
    (46) expr -> expr . PLUS term
    (47) expr -> expr . MINUS term

    SEMICOLON       shift and go to state 113
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56


state 78

    (58) statement -> INT STAR VAR SEMICOLON .

    INT             reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    VOID            reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    VAR             reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    IF              reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    ELSE            reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    FOR             reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    WHILE           reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    RETURN          reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    LB              reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    RB              reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    COUT            reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    LPAREN          reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    NUM             reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)
    $end            reduce using rule 58 (statement -> INT STAR VAR SEMICOLON .)


state 79

    (19) f_statement -> VAR EQUALS . f_statement
    (18) f_statement -> . VAR LPAREN args RPAREN SEMICOLON
    (19) f_statement -> . VAR EQUALS f_statement

    VAR             shift and go to state 114

    f_statement                    shift and go to state 48

state 80

    (24) statement -> VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    VOID            reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    LPAREN          reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    NUM             reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 24 (statement -> VAR EQUALS NUM SEMICOLON .)


state 81

    (26) statement -> VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    VOID            reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    LPAREN          reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    NUM             reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 26 (statement -> VAR EQUALS expr SEMICOLON .)


state 82

    (59) statement -> VAR EQUALS LPAREN INT . STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    STAR            shift and go to state 115


state 83

    (18) f_statement -> VAR LPAREN args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 84

    (13) args -> args COMMA . VAR
    (15) args -> args COMMA . NUM

    VAR             shift and go to state 117
    NUM             shift and go to state 118


state 85

    (57) array -> VAR LBRACKET VAR RBRACKET .

    EQUALS          reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    PLUS            reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    MINUS           reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    STAR            reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    DIV             reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    RPAREN          reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    SEMICOLON       reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    GREATER         reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)
    LESS            reduce using rule 57 (array -> VAR LBRACKET VAR RBRACKET .)


state 86

    (56) array -> VAR LBRACKET NUM RBRACKET .

    EQUALS          reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    PLUS            reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    MINUS           reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    STAR            reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    DIV             reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    RPAREN          reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    SEMICOLON       reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    GREATER         reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)
    LESS            reduce using rule 56 (array -> VAR LBRACKET NUM RBRACKET .)


state 87

    (46) expr -> expr PLUS term .
    (49) term -> term . STAR factor
    (50) term -> term . DIV factor

    RPAREN          reduce using rule 46 (expr -> expr PLUS term .)
    PLUS            reduce using rule 46 (expr -> expr PLUS term .)
    MINUS           reduce using rule 46 (expr -> expr PLUS term .)
    SEMICOLON       reduce using rule 46 (expr -> expr PLUS term .)
    STAR            shift and go to state 57
    DIV             shift and go to state 58


state 88

    (47) expr -> expr MINUS term .
    (49) term -> term . STAR factor
    (50) term -> term . DIV factor

    RPAREN          reduce using rule 47 (expr -> expr MINUS term .)
    PLUS            reduce using rule 47 (expr -> expr MINUS term .)
    MINUS           reduce using rule 47 (expr -> expr MINUS term .)
    SEMICOLON       reduce using rule 47 (expr -> expr MINUS term .)
    STAR            shift and go to state 57
    DIV             shift and go to state 58


state 89

    (49) term -> term STAR factor .

    STAR            reduce using rule 49 (term -> term STAR factor .)
    DIV             reduce using rule 49 (term -> term STAR factor .)
    RPAREN          reduce using rule 49 (term -> term STAR factor .)
    PLUS            reduce using rule 49 (term -> term STAR factor .)
    MINUS           reduce using rule 49 (term -> term STAR factor .)
    SEMICOLON       reduce using rule 49 (term -> term STAR factor .)


state 90

    (50) term -> term DIV factor .

    STAR            reduce using rule 50 (term -> term DIV factor .)
    DIV             reduce using rule 50 (term -> term DIV factor .)
    RPAREN          reduce using rule 50 (term -> term DIV factor .)
    PLUS            reduce using rule 50 (term -> term DIV factor .)
    MINUS           reduce using rule 50 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 50 (term -> term DIV factor .)


state 91

    (4) statement -> VOID VAR LPAREN params . RPAREN SEMICOLON
    (6) statement -> VOID VAR LPAREN params . RPAREN
    (8) params -> params . COMMA INT VAR
    (10) params -> params . COMMA INT STAR VAR

    RPAREN          shift and go to state 119
    COMMA           shift and go to state 110


state 92

    (25) statement -> array EQUALS NUM SEMICOLON .

    INT             reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    VOID            reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    IF              reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    LB              reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    RB              reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    LPAREN          reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    NUM             reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)
    $end            reduce using rule 25 (statement -> array EQUALS NUM SEMICOLON .)


state 93

    (27) statement -> array EQUALS expr SEMICOLON .

    INT             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    VOID            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    VAR             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    IF              reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    FOR             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    LB              reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    RB              reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    COUT            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    LPAREN          reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    NUM             reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)
    $end            reduce using rule 27 (statement -> array EQUALS expr SEMICOLON .)


state 94

    (28) statement -> IF LPAREN condition RPAREN .

    INT             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    VOID            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    VAR             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    IF              reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    ELSE            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    FOR             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    WHILE           reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    RETURN          reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    LB              reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    RB              reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    COUT            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    LPAREN          reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    NUM             reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)
    $end            reduce using rule 28 (statement -> IF LPAREN condition RPAREN .)


state 95

    (32) condition -> factor GREATER . factor
    (35) condition -> factor GREATER . EQUALS factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    EQUALS          shift and go to state 121
    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 120
    array                          shift and go to state 29

state 96

    (33) condition -> factor LESS . factor
    (36) condition -> factor LESS . EQUALS factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    EQUALS          shift and go to state 123
    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 122
    array                          shift and go to state 29

state 97

    (34) condition -> factor EQUALS . EQUALS factor

    EQUALS          shift and go to state 124


state 98

    (30) statement -> FOR LPAREN INT VAR . EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN

    EQUALS          shift and go to state 125


state 99

    (31) statement -> WHILE LPAREN condition RPAREN .

    INT             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    VOID            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    VAR             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    IF              reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    ELSE            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    FOR             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    WHILE           reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    RETURN          reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    LB              reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    RB              reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    COUT            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    LPAREN          reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    NUM             reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)
    $end            reduce using rule 31 (statement -> WHILE LPAREN condition RPAREN .)


state 100

    (40) statement -> factor PLUS PLUS SEMICOLON .

    INT             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    VOID            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    VAR             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    IF              reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    RETURN          reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    LB              reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    RB              reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    COUT            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    LPAREN          reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    NUM             reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)
    $end            reduce using rule 40 (statement -> factor PLUS PLUS SEMICOLON .)


state 101

    (38) statement -> factor PLUS EQUALS factor . SEMICOLON

    SEMICOLON       shift and go to state 126


state 102

    (41) statement -> factor MINUS MINUS SEMICOLON .

    INT             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    VOID            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    VAR             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    IF              reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    RETURN          reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    LB              reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    RB              reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    COUT            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    LPAREN          reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    NUM             reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)
    $end            reduce using rule 41 (statement -> factor MINUS MINUS SEMICOLON .)


state 103

    (39) statement -> factor MINUS EQUALS factor . SEMICOLON

    SEMICOLON       shift and go to state 127


state 104

    (60) p_content -> LESS LESS VAR . p_content
    (60) p_content -> . LESS LESS VAR p_content
    (61) p_content -> . LESS LESS SENTENCE p_content
    (62) p_content -> . LESS LESS ENDL
    (63) p_content -> .

    LESS            shift and go to state 39
    SEMICOLON       reduce using rule 63 (p_content -> .)

    p_content                      shift and go to state 128

state 105

    (61) p_content -> LESS LESS SENTENCE . p_content
    (60) p_content -> . LESS LESS VAR p_content
    (61) p_content -> . LESS LESS SENTENCE p_content
    (62) p_content -> . LESS LESS ENDL
    (63) p_content -> .

    LESS            shift and go to state 39
    SEMICOLON       reduce using rule 63 (p_content -> .)

    p_content                      shift and go to state 129

state 106

    (62) p_content -> LESS LESS ENDL .

    SEMICOLON       reduce using rule 62 (p_content -> LESS LESS ENDL .)


state 107

    (7) params -> INT VAR .

    RPAREN          reduce using rule 7 (params -> INT VAR .)
    COMMA           reduce using rule 7 (params -> INT VAR .)


state 108

    (9) params -> INT STAR . VAR

    VAR             shift and go to state 130


state 109

    (3) statement -> INT VAR LPAREN params RPAREN . SEMICOLON
    (5) statement -> INT VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 131
    INT             reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    VOID            reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    VAR             reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    IF              reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    FOR             reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    LB              reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    RB              reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    COUT            reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    LPAREN          reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    NUM             reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)
    $end            reduce using rule 5 (statement -> INT VAR LPAREN params RPAREN .)


state 110

    (8) params -> params COMMA . INT VAR
    (10) params -> params COMMA . INT STAR VAR

    INT             shift and go to state 132


state 111

    (22) statement -> INT VAR EQUALS VAR SEMICOLON .

    INT             reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    VOID            reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    VAR             reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    IF              reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    ELSE            reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    FOR             reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    LB              reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    RB              reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    COUT            reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    LPAREN          reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    NUM             reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)
    $end            reduce using rule 22 (statement -> INT VAR EQUALS VAR SEMICOLON .)


state 112

    (21) statement -> INT VAR EQUALS NUM SEMICOLON .

    INT             reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    VOID            reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    VAR             reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    IF              reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    ELSE            reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    FOR             reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RETURN          reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    LB              reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    RB              reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    COUT            reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    LPAREN          reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    NUM             reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)
    $end            reduce using rule 21 (statement -> INT VAR EQUALS NUM SEMICOLON .)


state 113

    (23) statement -> INT VAR EQUALS expr SEMICOLON .

    INT             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VOID            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    VAR             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    IF              reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    ELSE            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    FOR             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LB              reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    RB              reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    COUT            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    LPAREN          reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    NUM             reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)
    $end            reduce using rule 23 (statement -> INT VAR EQUALS expr SEMICOLON .)


state 114

    (18) f_statement -> VAR . LPAREN args RPAREN SEMICOLON
    (19) f_statement -> VAR . EQUALS f_statement

    LPAREN          shift and go to state 23
    EQUALS          shift and go to state 79


state 115

    (59) statement -> VAR EQUALS LPAREN INT STAR . RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    RPAREN          shift and go to state 133


state 116

    (18) f_statement -> VAR LPAREN args RPAREN SEMICOLON .

    INT             reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VOID            reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    VAR             reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    IF              reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    ELSE            reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    FOR             reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    WHILE           reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RETURN          reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    LB              reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    RB              reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    COUT            reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    LPAREN          reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    NUM             reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)
    $end            reduce using rule 18 (f_statement -> VAR LPAREN args RPAREN SEMICOLON .)


state 117

    (13) args -> args COMMA VAR .

    RPAREN          reduce using rule 13 (args -> args COMMA VAR .)
    COMMA           reduce using rule 13 (args -> args COMMA VAR .)


state 118

    (15) args -> args COMMA NUM .

    RPAREN          reduce using rule 15 (args -> args COMMA NUM .)
    COMMA           reduce using rule 15 (args -> args COMMA NUM .)


state 119

    (4) statement -> VOID VAR LPAREN params RPAREN . SEMICOLON
    (6) statement -> VOID VAR LPAREN params RPAREN .

    SEMICOLON       shift and go to state 134
    INT             reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    VOID            reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    VAR             reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    IF              reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    ELSE            reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    FOR             reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    WHILE           reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    RETURN          reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    LB              reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    RB              reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    COUT            reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    LPAREN          reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    NUM             reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)
    $end            reduce using rule 6 (statement -> VOID VAR LPAREN params RPAREN .)


state 120

    (32) condition -> factor GREATER factor .

    RPAREN          reduce using rule 32 (condition -> factor GREATER factor .)
    SEMICOLON       reduce using rule 32 (condition -> factor GREATER factor .)


state 121

    (35) condition -> factor GREATER EQUALS . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 135
    array                          shift and go to state 29

state 122

    (33) condition -> factor LESS factor .

    RPAREN          reduce using rule 33 (condition -> factor LESS factor .)
    SEMICOLON       reduce using rule 33 (condition -> factor LESS factor .)


state 123

    (36) condition -> factor LESS EQUALS . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 136
    array                          shift and go to state 29

state 124

    (34) condition -> factor EQUALS EQUALS . factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 137
    array                          shift and go to state 29

state 125

    (30) statement -> FOR LPAREN INT VAR EQUALS . NUM SEMICOLON condition SEMICOLON for_update RPAREN

    NUM             shift and go to state 138


state 126

    (38) statement -> factor PLUS EQUALS factor SEMICOLON .

    INT             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    VOID            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    VAR             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    IF              reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    FOR             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    LB              reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    RB              reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    COUT            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    LPAREN          reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    NUM             reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)
    $end            reduce using rule 38 (statement -> factor PLUS EQUALS factor SEMICOLON .)


state 127

    (39) statement -> factor MINUS EQUALS factor SEMICOLON .

    INT             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    VOID            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    VAR             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    IF              reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    ELSE            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    FOR             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    LB              reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    RB              reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    COUT            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    LPAREN          reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    NUM             reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)
    $end            reduce using rule 39 (statement -> factor MINUS EQUALS factor SEMICOLON .)


state 128

    (60) p_content -> LESS LESS VAR p_content .

    SEMICOLON       reduce using rule 60 (p_content -> LESS LESS VAR p_content .)


state 129

    (61) p_content -> LESS LESS SENTENCE p_content .

    SEMICOLON       reduce using rule 61 (p_content -> LESS LESS SENTENCE p_content .)


state 130

    (9) params -> INT STAR VAR .

    RPAREN          reduce using rule 9 (params -> INT STAR VAR .)
    COMMA           reduce using rule 9 (params -> INT STAR VAR .)


state 131

    (3) statement -> INT VAR LPAREN params RPAREN SEMICOLON .

    INT             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VOID            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    LPAREN          reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    NUM             reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 3 (statement -> INT VAR LPAREN params RPAREN SEMICOLON .)


state 132

    (8) params -> params COMMA INT . VAR
    (10) params -> params COMMA INT . STAR VAR

    VAR             shift and go to state 139
    STAR            shift and go to state 140


state 133

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN . MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    MALLOC          shift and go to state 141


state 134

    (4) statement -> VOID VAR LPAREN params RPAREN SEMICOLON .

    INT             reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    VOID            reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    VAR             reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    RETURN          reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    LB              reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    RB              reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    COUT            reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    NUM             reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 4 (statement -> VOID VAR LPAREN params RPAREN SEMICOLON .)


state 135

    (35) condition -> factor GREATER EQUALS factor .

    RPAREN          reduce using rule 35 (condition -> factor GREATER EQUALS factor .)
    SEMICOLON       reduce using rule 35 (condition -> factor GREATER EQUALS factor .)


state 136

    (36) condition -> factor LESS EQUALS factor .

    RPAREN          reduce using rule 36 (condition -> factor LESS EQUALS factor .)
    SEMICOLON       reduce using rule 36 (condition -> factor LESS EQUALS factor .)


state 137

    (34) condition -> factor EQUALS EQUALS factor .

    RPAREN          reduce using rule 34 (condition -> factor EQUALS EQUALS factor .)
    SEMICOLON       reduce using rule 34 (condition -> factor EQUALS EQUALS factor .)


state 138

    (30) statement -> FOR LPAREN INT VAR EQUALS NUM . SEMICOLON condition SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 142


state 139

    (8) params -> params COMMA INT VAR .

    RPAREN          reduce using rule 8 (params -> params COMMA INT VAR .)
    COMMA           reduce using rule 8 (params -> params COMMA INT VAR .)


state 140

    (10) params -> params COMMA INT STAR . VAR

    VAR             shift and go to state 143


state 141

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC . LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 142

    (30) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON . condition SEMICOLON for_update RPAREN
    (32) condition -> . factor GREATER factor
    (33) condition -> . factor LESS factor
    (34) condition -> . factor EQUALS EQUALS factor
    (35) condition -> . factor GREATER EQUALS factor
    (36) condition -> . factor LESS EQUALS factor
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    condition                      shift and go to state 145
    factor                         shift and go to state 63
    array                          shift and go to state 29

state 143

    (10) params -> params COMMA INT STAR VAR .

    RPAREN          reduce using rule 10 (params -> params COMMA INT STAR VAR .)
    COMMA           reduce using rule 10 (params -> params COMMA INT STAR VAR .)


state 144

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN . SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    SIZEOF          shift and go to state 146


state 145

    (30) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition . SEMICOLON for_update RPAREN

    SEMICOLON       shift and go to state 147


state 146

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF . LPAREN INT RPAREN STAR factor RPAREN SEMICOLON

    LPAREN          shift and go to state 148


state 147

    (30) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON . for_update RPAREN
    (42) for_update -> . VAR PLUS PLUS
    (43) for_update -> . VAR MINUS MINUS

    VAR             shift and go to state 149

    for_update                     shift and go to state 150

state 148

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN . INT RPAREN STAR factor RPAREN SEMICOLON

    INT             shift and go to state 151


state 149

    (42) for_update -> VAR . PLUS PLUS
    (43) for_update -> VAR . MINUS MINUS

    PLUS            shift and go to state 152
    MINUS           shift and go to state 153


state 150

    (30) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update . RPAREN

    RPAREN          shift and go to state 154


state 151

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT . RPAREN STAR factor RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 152

    (42) for_update -> VAR PLUS . PLUS

    PLUS            shift and go to state 156


state 153

    (43) for_update -> VAR MINUS . MINUS

    MINUS           shift and go to state 157


state 154

    (30) statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .

    INT             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    VOID            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    VAR             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    IF              reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    ELSE            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    FOR             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    WHILE           reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RETURN          reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    LB              reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    RB              reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    COUT            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    LPAREN          reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    NUM             reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)
    $end            reduce using rule 30 (statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN .)


state 155

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN . STAR factor RPAREN SEMICOLON

    STAR            shift and go to state 158


state 156

    (42) for_update -> VAR PLUS PLUS .

    RPAREN          reduce using rule 42 (for_update -> VAR PLUS PLUS .)


state 157

    (43) for_update -> VAR MINUS MINUS .

    RPAREN          reduce using rule 43 (for_update -> VAR MINUS MINUS .)


state 158

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR . factor RPAREN SEMICOLON
    (52) factor -> . LPAREN expr RPAREN
    (53) factor -> . NUM
    (54) factor -> . VAR
    (55) factor -> . array
    (56) array -> . VAR LBRACKET NUM RBRACKET
    (57) array -> . VAR LBRACKET VAR RBRACKET

    LPAREN          shift and go to state 5
    NUM             shift and go to state 8
    VAR             shift and go to state 28

    factor                         shift and go to state 159
    array                          shift and go to state 29

state 159

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor . RPAREN SEMICOLON

    RPAREN          shift and go to state 160


state 160

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 161


state 161

    (59) statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .

    INT             reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    VOID            reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    VAR             reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    IF              reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    ELSE            reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    FOR             reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    WHILE           reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    RETURN          reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    LB              reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    RB              reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    COUT            reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    LPAREN          reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    NUM             reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)
    $end            reduce using rule 59 (statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 45 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 60 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 75 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 76 resolved as shift
