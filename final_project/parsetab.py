
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COUT DIV ELSE ENDL EQUALS FOR GREATER IF IGNORE_CONTENT INT LB LBRACKET LESS LPAREN MALLOC MINUS NUM PLUS RB RBRACKET RETURN RPAREN SEMICOLON SENTENCE SIZEOF STAR VAR VOID WHILEprogram : statement\n               | program statement\n    statement : IGNORE_CONTENT\n    \n    statement : INT VAR LPAREN params RPAREN SEMICOLON\n                | VOID VAR LPAREN params RPAREN SEMICOLON\n    \n    statement : INT VAR LPAREN params RPAREN\n                | VOID VAR LPAREN params RPAREN\n    \n    params : INT VAR\n           | params COMMA INT VAR\n           | INT STAR VAR\n           | params COMMA INT STAR VAR\n           |\n    \n    args : VAR\n         | args COMMA VAR\n         | NUM\n         | args COMMA NUM\n         |\n    \n    statement : f_statement\n    \n    f_statement : VAR LPAREN args RPAREN SEMICOLON\n                | VAR EQUALS f_statement\n    \n    statement : INT VAR SEMICOLON\n              | INT VAR EQUALS NUM SEMICOLON\n              | INT VAR EQUALS VAR SEMICOLON\n              | INT VAR EQUALS expr SEMICOLON\n    \n    statement : VAR EQUALS NUM SEMICOLON\n                | array EQUALS NUM SEMICOLON\n                | VAR EQUALS expr SEMICOLON\n                | array EQUALS expr SEMICOLON\n    \n    statement : IF LPAREN condition RPAREN\n    \n    statement : ELSE\n    \n    statement : FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN\n    \n    statement : WHILE LPAREN condition RPAREN\n    \n    condition : factor GREATER factor\n                | factor LESS factor\n                | factor EQUALS EQUALS factor\n                | factor GREATER EQUALS factor\n                | factor LESS EQUALS factor\n    \n    statement : RETURN expr SEMICOLON\n    \n    statement : factor PLUS EQUALS factor SEMICOLON\n            | factor MINUS EQUALS factor SEMICOLON\n            | factor PLUS PLUS SEMICOLON\n            | factor MINUS MINUS SEMICOLON\n    \n    for_update : VAR PLUS PLUS\n            | VAR MINUS MINUS\n               \n    \n    statement : LB               \n    \n    statement : RB             \n    \n    expr : expr PLUS term\n    expr : expr MINUS termexpr : termterm : term STAR factorterm : term DIV factorterm : factor\n    factor : LPAREN expr RPAREN\n        \n    factor : NUMfactor : VARfactor : array\n    array : VAR LBRACKET expr RBRACKET\n    \n    statement : INT STAR VAR SEMICOLON\n    \n    statement : VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON\n    \n    p_content : LESS LESS VAR p_content\n            | LESS LESS SENTENCE p_content\n            | LESS LESS ENDL\n            |\n    \n    statement : COUT p_content SEMICOLON\n\n    '
    
_lr_action_items = {'IGNORE_CONTENT':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[3,3,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'INT':([0,1,2,3,8,12,17,18,20,34,41,42,48,49,59,70,71,78,80,81,91,92,93,98,100,102,108,109,110,111,112,115,118,125,126,130,133,147,153,160,],[4,4,-1,-3,-18,-30,-45,-46,-2,64,73,-21,82,-20,73,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,131,-23,-22,-24,-19,-7,-39,-40,-4,-5,150,-31,-59,]),'VOID':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[7,7,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'VAR':([0,1,2,3,4,6,7,8,12,16,17,18,20,22,23,24,25,32,33,37,42,43,48,49,55,56,57,58,64,66,68,70,71,72,73,78,79,80,81,84,91,92,93,94,95,98,100,102,107,108,110,111,112,115,118,120,122,123,124,125,126,130,131,133,139,141,146,153,157,160,],[5,5,-1,-3,21,29,31,-18,-30,29,-45,-46,-2,44,45,50,29,29,29,29,-21,75,29,-20,29,29,29,29,97,29,29,-38,-64,103,106,-58,113,-25,-27,116,-26,-28,-29,29,29,-41,-42,-32,129,-6,-23,-22,-24,-19,-7,29,29,29,29,-39,-40,-4,138,-5,142,29,148,-31,29,-59,]),'IF':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[11,11,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'ELSE':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[12,12,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'FOR':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[13,13,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'WHILE':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[15,15,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'RETURN':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[16,16,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'LB':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[17,17,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'RB':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[18,18,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'COUT':([0,1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[19,19,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'LPAREN':([0,1,2,3,5,6,8,11,12,13,15,16,17,18,20,21,23,25,31,32,33,37,42,43,45,48,49,55,56,57,58,66,68,70,71,78,80,81,91,92,93,94,95,98,100,102,108,110,111,112,113,115,118,120,122,123,124,125,126,130,133,140,141,145,153,157,160,],[6,6,-1,-3,24,6,-18,33,-30,34,37,6,-45,-46,-2,41,48,6,59,6,6,6,-21,6,24,6,-20,6,6,6,6,6,6,-38,-64,-58,-25,-27,-26,-28,-29,6,6,-41,-42,-32,-6,-23,-22,-24,24,-19,-7,6,6,6,6,-39,-40,-4,-5,143,6,147,-31,6,-59,]),'NUM':([0,1,2,3,6,8,12,16,17,18,20,23,24,25,32,33,37,42,43,48,49,55,56,57,58,66,68,70,71,78,80,81,84,91,92,93,94,95,98,100,102,108,110,111,112,115,118,120,122,123,124,125,126,130,133,141,153,157,160,],[9,9,-1,-3,9,-18,-30,9,-45,-46,-2,46,52,9,60,9,9,-21,76,9,-20,9,9,9,9,9,9,-38,-64,-58,-25,-27,117,-26,-28,-29,9,9,-41,-42,-32,-6,-23,-22,-24,-19,-7,9,9,9,9,-39,-40,-4,-5,9,-31,9,-59,]),'$end':([1,2,3,8,12,17,18,20,42,49,70,71,78,80,81,91,92,93,98,100,102,108,110,111,112,115,118,125,126,130,133,153,160,],[0,-1,-3,-18,-30,-45,-46,-2,-21,-20,-38,-64,-58,-25,-27,-26,-28,-29,-41,-42,-32,-6,-23,-22,-24,-19,-7,-39,-40,-4,-5,-31,-59,]),'STAR':([4,9,27,28,29,30,45,46,54,60,73,75,76,82,85,86,87,88,89,131,154,],[22,-54,57,-52,-55,-56,-55,-54,-53,-54,107,-55,-54,114,-57,57,57,-50,-51,139,157,]),'EQUALS':([5,9,10,21,29,30,35,36,45,54,63,85,94,95,96,97,113,],[23,-54,32,43,-55,-56,66,68,79,-53,96,-57,120,122,123,124,79,]),'LBRACKET':([5,29,45,75,],[25,25,25,25,]),'PLUS':([5,9,10,14,26,27,28,29,30,35,38,45,46,47,53,54,60,61,75,76,77,85,86,87,88,89,148,151,],[-55,-54,-56,35,55,-49,-52,-55,-56,65,55,-55,-54,55,55,-53,-54,55,-55,-54,55,-57,-47,-48,-50,-51,151,155,]),'MINUS':([5,9,10,14,26,27,28,29,30,36,38,45,46,47,53,54,60,61,75,76,77,85,86,87,88,89,148,152,],[-55,-54,-56,36,56,-49,-52,-55,-56,67,56,-55,-54,56,56,-53,-54,56,-55,-54,56,-57,-47,-48,-50,-51,152,156,]),'DIV':([9,27,28,29,30,45,46,54,60,75,76,85,86,87,88,89,],[-54,58,-52,-55,-56,-55,-54,-53,-54,-55,-54,-57,58,58,-50,-51,]),'RPAREN':([9,24,26,27,28,29,30,41,50,51,52,54,59,62,69,74,85,86,87,88,89,90,106,114,116,117,119,121,129,134,135,136,138,142,149,150,155,156,158,],[-54,-17,54,-49,-52,-55,-56,-12,-13,83,-15,-53,-12,93,102,108,-57,-47,-48,-50,-51,118,-8,132,-14,-16,-33,-34,-10,-36,-37,-35,-9,-11,153,154,-43,-44,159,]),'SEMICOLON':([9,19,21,27,28,29,30,38,39,44,45,46,47,54,60,61,65,67,75,76,77,83,85,86,87,88,89,99,101,103,104,105,108,118,119,121,127,128,134,135,136,137,144,159,],[-54,-63,42,-49,-52,-55,-56,70,71,78,-55,80,81,-53,91,92,98,100,110,111,112,115,-57,-47,-48,-50,-51,125,126,-63,-63,-62,130,133,-33,-34,-60,-61,-36,-37,-35,141,146,160,]),'RBRACKET':([9,27,28,29,30,53,54,85,86,87,88,89,],[-54,-49,-52,-55,-56,85,-53,-57,-47,-48,-50,-51,]),'GREATER':([9,29,30,54,63,85,],[-54,-55,-56,-53,94,-57,]),'LESS':([9,19,29,30,40,54,63,85,103,104,],[-54,40,-55,-56,72,-53,95,-57,40,40,]),'COMMA':([24,41,50,51,52,59,74,90,106,116,117,129,138,142,],[-17,-12,-13,84,-15,-12,109,109,-8,-14,-16,-10,-9,-11,]),'SENTENCE':([72,],[104,]),'ENDL':([72,],[105,]),'MALLOC':([132,],[140,]),'SIZEOF':([143,],[145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,],[2,20,]),'f_statement':([0,1,23,79,],[8,8,49,49,]),'array':([0,1,6,16,23,25,32,33,37,43,48,55,56,57,58,66,68,94,95,120,122,123,124,141,157,],[10,10,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'factor':([0,1,6,16,23,25,32,33,37,43,48,55,56,57,58,66,68,94,95,120,122,123,124,141,157,],[14,14,28,28,28,28,28,63,63,28,28,28,28,88,89,99,101,119,121,134,135,136,137,63,158,]),'expr':([6,16,23,25,32,43,48,],[26,38,47,53,61,77,26,]),'term':([6,16,23,25,32,43,48,55,56,],[27,27,27,27,27,27,27,86,87,]),'p_content':([19,103,104,],[39,127,128,]),'args':([24,],[51,]),'condition':([33,37,141,],[62,69,144,]),'params':([41,59,],[74,90,]),'for_update':([146,],[149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','skeleton.py',166),
  ('program -> program statement','program',2,'p_program','skeleton.py',167),
  ('statement -> IGNORE_CONTENT','statement',1,'p_statement_IGNORE_CONTENT','skeleton.py',175),
  ('statement -> INT VAR LPAREN params RPAREN SEMICOLON','statement',6,'p_func_decl','skeleton.py',183),
  ('statement -> VOID VAR LPAREN params RPAREN SEMICOLON','statement',6,'p_func_decl','skeleton.py',184),
  ('statement -> INT VAR LPAREN params RPAREN','statement',5,'p_function','skeleton.py',193),
  ('statement -> VOID VAR LPAREN params RPAREN','statement',5,'p_function','skeleton.py',194),
  ('params -> INT VAR','params',2,'p_func_params','skeleton.py',201),
  ('params -> params COMMA INT VAR','params',4,'p_func_params','skeleton.py',202),
  ('params -> INT STAR VAR','params',3,'p_func_params','skeleton.py',203),
  ('params -> params COMMA INT STAR VAR','params',5,'p_func_params','skeleton.py',204),
  ('params -> <empty>','params',0,'p_func_params','skeleton.py',205),
  ('args -> VAR','args',1,'p_func_args','skeleton.py',220),
  ('args -> args COMMA VAR','args',3,'p_func_args','skeleton.py',221),
  ('args -> NUM','args',1,'p_func_args','skeleton.py',222),
  ('args -> args COMMA NUM','args',3,'p_func_args','skeleton.py',223),
  ('args -> <empty>','args',0,'p_func_args','skeleton.py',224),
  ('statement -> f_statement','statement',1,'p_f_statement','skeleton.py',235),
  ('f_statement -> VAR LPAREN args RPAREN SEMICOLON','f_statement',5,'p_func_call','skeleton.py',243),
  ('f_statement -> VAR EQUALS f_statement','f_statement',3,'p_func_call','skeleton.py',244),
  ('statement -> INT VAR SEMICOLON','statement',3,'p_statement_decl','skeleton.py',257),
  ('statement -> INT VAR EQUALS NUM SEMICOLON','statement',5,'p_statement_decl','skeleton.py',258),
  ('statement -> INT VAR EQUALS VAR SEMICOLON','statement',5,'p_statement_decl','skeleton.py',259),
  ('statement -> INT VAR EQUALS expr SEMICOLON','statement',5,'p_statement_decl','skeleton.py',260),
  ('statement -> VAR EQUALS NUM SEMICOLON','statement',4,'p_statement_assign','skeleton.py',272),
  ('statement -> array EQUALS NUM SEMICOLON','statement',4,'p_statement_assign','skeleton.py',273),
  ('statement -> VAR EQUALS expr SEMICOLON','statement',4,'p_statement_assign','skeleton.py',274),
  ('statement -> array EQUALS expr SEMICOLON','statement',4,'p_statement_assign','skeleton.py',275),
  ('statement -> IF LPAREN condition RPAREN','statement',4,'p_statement_if','skeleton.py',291),
  ('statement -> ELSE','statement',1,'p_statement_if_else','skeleton.py',299),
  ('statement -> FOR LPAREN INT VAR EQUALS factor SEMICOLON condition SEMICOLON for_update RPAREN','statement',11,'p_statement_for','skeleton.py',307),
  ('statement -> WHILE LPAREN condition RPAREN','statement',4,'p_statement_while','skeleton.py',316),
  ('condition -> factor GREATER factor','condition',3,'p_condition','skeleton.py',324),
  ('condition -> factor LESS factor','condition',3,'p_condition','skeleton.py',325),
  ('condition -> factor EQUALS EQUALS factor','condition',4,'p_condition','skeleton.py',326),
  ('condition -> factor GREATER EQUALS factor','condition',4,'p_condition','skeleton.py',327),
  ('condition -> factor LESS EQUALS factor','condition',4,'p_condition','skeleton.py',328),
  ('statement -> RETURN expr SEMICOLON','statement',3,'p_statement_return','skeleton.py',339),
  ('statement -> factor PLUS EQUALS factor SEMICOLON','statement',5,'p_statement_update','skeleton.py',351),
  ('statement -> factor MINUS EQUALS factor SEMICOLON','statement',5,'p_statement_update','skeleton.py',352),
  ('statement -> factor PLUS PLUS SEMICOLON','statement',4,'p_statement_update','skeleton.py',353),
  ('statement -> factor MINUS MINUS SEMICOLON','statement',4,'p_statement_update','skeleton.py',354),
  ('for_update -> VAR PLUS PLUS','for_update',3,'p_for_update','skeleton.py',368),
  ('for_update -> VAR MINUS MINUS','for_update',3,'p_for_update','skeleton.py',369),
  ('statement -> LB','statement',1,'p_statement_lb','skeleton.py',379),
  ('statement -> RB','statement',1,'p_statement_rb','skeleton.py',386),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','skeleton.py',393),
  ('expr -> expr MINUS term','expr',3,'p_expr_minus','skeleton.py',409),
  ('expr -> term','expr',1,'p_expr_term','skeleton.py',421),
  ('term -> term STAR factor','term',3,'p_term_mult','skeleton.py',425),
  ('term -> term DIV factor','term',3,'p_term_div','skeleton.py',429),
  ('term -> factor','term',1,'p_term_factor','skeleton.py',437),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_expr','skeleton.py',443),
  ('factor -> NUM','factor',1,'p_factor_num','skeleton.py',451),
  ('factor -> VAR','factor',1,'p_factor_var','skeleton.py',455),
  ('factor -> array','factor',1,'p_factor_array','skeleton.py',459),
  ('array -> VAR LBRACKET expr RBRACKET','array',4,'p_array','skeleton.py',465),
  ('statement -> INT STAR VAR SEMICOLON','statement',4,'p_array_decl','skeleton.py',475),
  ('statement -> VAR EQUALS LPAREN INT STAR RPAREN MALLOC LPAREN SIZEOF LPAREN INT RPAREN STAR factor RPAREN SEMICOLON','statement',16,'p_array_init','skeleton.py',483),
  ('p_content -> LESS LESS VAR p_content','p_content',4,'p_print_content','skeleton.py',490),
  ('p_content -> LESS LESS SENTENCE p_content','p_content',4,'p_print_content','skeleton.py',491),
  ('p_content -> LESS LESS ENDL','p_content',3,'p_print_content','skeleton.py',492),
  ('p_content -> <empty>','p_content',0,'p_print_content','skeleton.py',493),
  ('statement -> COUT p_content SEMICOLON','statement',3,'p_statement_print','skeleton.py',505),
]
