
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COUT DIV ELSE EQUALS FOR GREATER IF IGNORE_CONTENT INT LB LESS LPAREN MINUS MULT NUM PLUS PRINT RB RPAREN SEMICOLON SENTENCE VAR WHILEprogram : statement\n               | program statement\n    statement : INT VAR SEMICOLON\n              | INT VAR EQUALS NUM SEMICOLON\n              | INT VAR EQUALS VAR SEMICOLON\n              | INT VAR EQUALS expr SEMICOLON\n    \n    statement : VAR EQUALS NUM SEMICOLON\n    \n    statement : IF LPAREN condition RPAREN\n    \n    statement : FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN\n    \n    statement : WHILE LPAREN condition RPAREN\n    \n    condition : VAR GREATER NUM\n                | VAR LESS NUM\n                | VAR GREATER VAR\n                | VAR LESS VAR\n                | VAR EQUALS EQUALS NUM\n    \n    for_update : VAR PLUS PLUS\n               \n    \n    statement : LB statement RB                 \n    \n    expr : expr PLUS term\n    \n    expr : expr PLUS VAR\n    expr : expr MINUS termexpr : expr MINUS VARexpr : termterm : term MULT factorterm : term DIV factorterm : factorfactor : LPAREN expr RPARENfactor : NUMfactor : VAR\n    statement : COUT LESS LESS VAR SEMICOLON\n                | COUT LESS LESS SENTENCE SEMICOLON\n                | COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON\n    \n    '
    
_lr_action_items = {'INT':([0,1,2,8,10,14,18,25,33,34,39,42,43,44,58,60,74,79,],[3,3,-1,3,-2,23,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'VAR':([0,1,2,3,8,10,13,15,18,19,23,25,26,32,33,34,35,36,39,42,43,44,45,46,47,48,58,60,70,71,74,75,79,],[4,4,-1,11,4,-2,22,22,-3,27,38,-17,40,50,-7,-8,52,54,-10,-5,-4,-6,62,64,50,50,-29,-30,72,22,-31,76,-9,]),'IF':([0,1,2,8,10,18,25,33,34,39,42,43,44,58,60,74,79,],[5,5,-1,5,-2,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'FOR':([0,1,2,8,10,18,25,33,34,39,42,43,44,58,60,74,79,],[6,6,-1,6,-2,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'WHILE':([0,1,2,8,10,18,25,33,34,39,42,43,44,58,60,74,79,],[7,7,-1,7,-2,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'LB':([0,1,2,8,10,18,25,33,34,39,42,43,44,58,60,74,79,],[8,8,-1,8,-2,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'COUT':([0,1,2,8,10,18,25,33,34,39,42,43,44,58,60,74,79,],[9,9,-1,9,-2,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'$end':([1,2,10,18,25,33,34,39,42,43,44,58,60,74,79,],[0,-1,-2,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'EQUALS':([4,11,22,37,38,],[12,19,37,56,57,]),'LPAREN':([5,6,7,19,32,45,46,47,48,],[13,14,15,32,32,32,32,32,32,]),'LESS':([9,17,22,41,59,],[17,26,36,59,70,]),'SEMICOLON':([11,20,27,28,29,30,31,40,41,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,72,73,],[18,33,42,43,44,-22,-25,58,60,-28,-27,-13,-11,-14,-12,-18,-19,-20,-21,-23,-24,-26,-15,71,74,75,]),'NUM':([12,19,32,35,36,45,46,47,48,56,57,],[20,28,51,53,55,51,51,51,51,68,69,]),'RB':([16,18,25,33,34,39,42,43,44,58,60,74,79,],[25,-3,-17,-7,-8,-10,-5,-4,-6,-29,-30,-31,-9,]),'RPAREN':([21,24,30,31,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,77,80,],[34,39,-22,-25,67,-28,-27,-13,-11,-14,-12,-18,-19,-20,-21,-23,-24,-26,-15,79,-16,]),'GREATER':([22,],[35,]),'SENTENCE':([26,],[41,]),'MULT':([27,28,30,31,50,51,61,62,63,64,65,66,67,],[-28,-27,47,-25,-28,-27,47,-28,47,-28,-23,-24,-26,]),'DIV':([27,28,30,31,50,51,61,62,63,64,65,66,67,],[-28,-27,48,-25,-28,-27,48,-28,48,-28,-23,-24,-26,]),'PLUS':([27,28,29,30,31,49,50,51,61,62,63,64,65,66,67,76,78,],[-28,-27,45,-22,-25,45,-28,-27,-18,-19,-20,-21,-23,-24,-26,78,80,]),'MINUS':([27,28,29,30,31,49,50,51,61,62,63,64,65,66,67,],[-28,-27,46,-22,-25,46,-28,-27,-18,-19,-20,-21,-23,-24,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,8,],[2,10,16,]),'condition':([13,15,71,],[21,24,73,]),'expr':([19,32,],[29,49,]),'term':([19,32,45,46,],[30,30,61,63,]),'factor':([19,32,45,46,47,48,],[31,31,31,31,65,66,]),'for_update':([75,],[77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','skeleton.py',126),
  ('program -> program statement','program',2,'p_program','skeleton.py',127),
  ('statement -> INT VAR SEMICOLON','statement',3,'p_statement_decl','skeleton.py',138),
  ('statement -> INT VAR EQUALS NUM SEMICOLON','statement',5,'p_statement_decl','skeleton.py',139),
  ('statement -> INT VAR EQUALS VAR SEMICOLON','statement',5,'p_statement_decl','skeleton.py',140),
  ('statement -> INT VAR EQUALS expr SEMICOLON','statement',5,'p_statement_decl','skeleton.py',141),
  ('statement -> VAR EQUALS NUM SEMICOLON','statement',4,'p_statement_assign','skeleton.py',151),
  ('statement -> IF LPAREN condition RPAREN','statement',4,'p_statement_if','skeleton.py',158),
  ('statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN','statement',11,'p_statement_for','skeleton.py',165),
  ('statement -> WHILE LPAREN condition RPAREN','statement',4,'p_statement_while','skeleton.py',173),
  ('condition -> VAR GREATER NUM','condition',3,'p_condition','skeleton.py',181),
  ('condition -> VAR LESS NUM','condition',3,'p_condition','skeleton.py',182),
  ('condition -> VAR GREATER VAR','condition',3,'p_condition','skeleton.py',183),
  ('condition -> VAR LESS VAR','condition',3,'p_condition','skeleton.py',184),
  ('condition -> VAR EQUALS EQUALS NUM','condition',4,'p_condition','skeleton.py',185),
  ('for_update -> VAR PLUS PLUS','for_update',3,'p_for_update','skeleton.py',196),
  ('statement -> LB statement RB','statement',3,'p_statement_scope','skeleton.py',204),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','skeleton.py',212),
  ('expr -> expr PLUS VAR','expr',3,'p_expr_plus_var','skeleton.py',219),
  ('expr -> expr MINUS term','expr',3,'p_expr_minus','skeleton.py',225),
  ('expr -> expr MINUS VAR','expr',3,'p_expr_minus_var','skeleton.py',229),
  ('expr -> term','expr',1,'p_expr_term','skeleton.py',233),
  ('term -> term MULT factor','term',3,'p_term_mult','skeleton.py',237),
  ('term -> term DIV factor','term',3,'p_term_div','skeleton.py',241),
  ('term -> factor','term',1,'p_term_factor','skeleton.py',249),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_expr','skeleton.py',253),
  ('factor -> NUM','factor',1,'p_factor_num','skeleton.py',257),
  ('factor -> VAR','factor',1,'p_factor_var','skeleton.py',261),
  ('statement -> COUT LESS LESS VAR SEMICOLON','statement',5,'p_statement_print','skeleton.py',267),
  ('statement -> COUT LESS LESS SENTENCE SEMICOLON','statement',5,'p_statement_print','skeleton.py',268),
  ('statement -> COUT LESS LESS SENTENCE LESS LESS VAR SEMICOLON','statement',8,'p_statement_print','skeleton.py',269),
]
