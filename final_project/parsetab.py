
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COUT DIV ELSE ENDL EQUALS FOR GREATER IF IGNORE_CONTENT INT LB LESS LPAREN MINUS MULT NUM PLUS PRINT RB RPAREN SEMICOLON SENTENCE VAR WHILEprogram : statement\n               | program statement\n    statement : INT VAR LPAREN args RPAREN SEMICOLON\n    \n    args : INT VAR\n         | INT VAR COMMA args\n    \n    statement : INT VAR SEMICOLON\n              | INT VAR EQUALS NUM SEMICOLON\n              | INT VAR EQUALS VAR SEMICOLON\n              | INT VAR EQUALS expr SEMICOLON\n    \n    statement : VAR EQUALS NUM SEMICOLON\n    \n    statement : IF LPAREN condition RPAREN\n    \n    statement : FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN\n    \n    statement : WHILE LPAREN condition RPAREN\n    \n    condition : VAR GREATER NUM\n                | VAR LESS NUM\n                | VAR GREATER VAR\n                | VAR LESS VAR\n                | VAR EQUALS EQUALS NUM\n    \n    for_update : VAR PLUS PLUS\n               \n    \n    statement : LB               \n    \n    statement : RB             \n    \n    expr : expr PLUS term\n    \n    expr : expr PLUS VAR\n    expr : expr MINUS termexpr : expr MINUS VARexpr : termterm : term MULT factorterm : term DIV factorterm : factorfactor : LPAREN expr RPARENfactor : NUMfactor : VAR\n    statement : COUT LESS LESS VAR LESS LESS ENDL SEMICOLON\n                | COUT LESS LESS SENTENCE LESS LESS ENDL SEMICOLON\n                | COUT LESS LESS SENTENCE LESS LESS VAR LESS LESS ENDL SEMICOLON\n    '
    
_lr_action_items = {'INT':([0,1,2,8,9,11,15,18,19,35,36,41,46,47,48,64,65,83,84,92,93,],[3,3,-1,-20,-21,-2,24,27,-6,-10,-11,-13,-8,-7,-9,27,-3,-33,-34,-12,-35,]),'VAR':([0,1,2,3,8,9,11,14,16,19,20,24,26,27,34,35,36,37,38,41,46,47,48,49,50,51,52,65,76,78,83,84,86,92,93,],[4,4,-1,12,-20,-21,-2,23,23,-6,29,40,42,44,54,-10,-11,56,58,-13,-8,-7,-9,67,69,54,54,-3,81,23,-33,-34,88,-12,-35,]),'IF':([0,1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[5,5,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'FOR':([0,1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[6,6,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'WHILE':([0,1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[7,7,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'LB':([0,1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[8,8,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'RB':([0,1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[9,9,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'COUT':([0,1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[10,10,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'$end':([1,2,8,9,11,19,35,36,41,46,47,48,65,83,84,92,93,],[0,-1,-20,-21,-2,-6,-10,-11,-13,-8,-7,-9,-3,-33,-34,-12,-35,]),'EQUALS':([4,12,23,39,40,],[13,20,39,60,61,]),'LPAREN':([5,6,7,12,20,34,49,50,51,52,],[14,15,16,18,34,34,34,34,34,34,]),'LESS':([10,17,23,42,43,62,63,81,85,],[17,26,38,62,63,75,76,85,87,]),'SEMICOLON':([12,21,29,30,31,32,33,45,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,79,80,82,90,],[19,35,46,47,48,-26,-29,65,-32,-31,-16,-14,-17,-15,-22,-23,-24,-25,-27,-28,-30,-18,78,83,84,86,93,]),'NUM':([13,20,34,37,38,49,50,51,52,60,61,],[21,30,55,57,59,55,55,55,55,73,74,]),'RPAREN':([22,25,28,32,33,44,53,54,55,56,57,58,59,66,67,68,69,70,71,72,73,77,89,94,],[36,41,45,-26,-29,-4,72,-32,-31,-16,-14,-17,-15,-22,-23,-24,-25,-27,-28,-30,-18,-5,92,-19,]),'GREATER':([23,],[37,]),'SENTENCE':([26,],[43,]),'MULT':([29,30,32,33,54,55,66,67,68,69,70,71,72,],[-32,-31,51,-29,-32,-31,51,-32,51,-32,-27,-28,-30,]),'DIV':([29,30,32,33,54,55,66,67,68,69,70,71,72,],[-32,-31,52,-29,-32,-31,52,-32,52,-32,-27,-28,-30,]),'PLUS':([29,30,31,32,33,53,54,55,66,67,68,69,70,71,72,88,91,],[-32,-31,49,-26,-29,49,-32,-31,-22,-23,-24,-25,-27,-28,-30,91,94,]),'MINUS':([29,30,31,32,33,53,54,55,66,67,68,69,70,71,72,],[-32,-31,50,-26,-29,50,-32,-31,-22,-23,-24,-25,-27,-28,-30,]),'COMMA':([44,],[64,]),'ENDL':([75,76,87,],[79,80,90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,],[2,11,]),'condition':([14,16,78,],[22,25,82,]),'args':([18,64,],[28,77,]),'expr':([20,34,],[31,53,]),'term':([20,34,49,50,],[32,32,66,68,]),'factor':([20,34,49,50,51,52,],[33,33,33,33,70,71,]),'for_update':([86,],[89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','skeleton.py',131),
  ('program -> program statement','program',2,'p_program','skeleton.py',132),
  ('statement -> INT VAR LPAREN args RPAREN SEMICOLON','statement',6,'p_func_decl','skeleton.py',141),
  ('args -> INT VAR','args',2,'p_func_args','skeleton.py',147),
  ('args -> INT VAR COMMA args','args',4,'p_func_args','skeleton.py',148),
  ('statement -> INT VAR SEMICOLON','statement',3,'p_statement_decl','skeleton.py',159),
  ('statement -> INT VAR EQUALS NUM SEMICOLON','statement',5,'p_statement_decl','skeleton.py',160),
  ('statement -> INT VAR EQUALS VAR SEMICOLON','statement',5,'p_statement_decl','skeleton.py',161),
  ('statement -> INT VAR EQUALS expr SEMICOLON','statement',5,'p_statement_decl','skeleton.py',162),
  ('statement -> VAR EQUALS NUM SEMICOLON','statement',4,'p_statement_assign','skeleton.py',172),
  ('statement -> IF LPAREN condition RPAREN','statement',4,'p_statement_if','skeleton.py',179),
  ('statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN','statement',11,'p_statement_for','skeleton.py',186),
  ('statement -> WHILE LPAREN condition RPAREN','statement',4,'p_statement_while','skeleton.py',194),
  ('condition -> VAR GREATER NUM','condition',3,'p_condition','skeleton.py',202),
  ('condition -> VAR LESS NUM','condition',3,'p_condition','skeleton.py',203),
  ('condition -> VAR GREATER VAR','condition',3,'p_condition','skeleton.py',204),
  ('condition -> VAR LESS VAR','condition',3,'p_condition','skeleton.py',205),
  ('condition -> VAR EQUALS EQUALS NUM','condition',4,'p_condition','skeleton.py',206),
  ('for_update -> VAR PLUS PLUS','for_update',3,'p_for_update','skeleton.py',217),
  ('statement -> LB','statement',1,'p_statement_lb','skeleton.py',224),
  ('statement -> RB','statement',1,'p_statement_rb','skeleton.py',230),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','skeleton.py',236),
  ('expr -> expr PLUS VAR','expr',3,'p_expr_plus_var','skeleton.py',243),
  ('expr -> expr MINUS term','expr',3,'p_expr_minus','skeleton.py',249),
  ('expr -> expr MINUS VAR','expr',3,'p_expr_minus_var','skeleton.py',253),
  ('expr -> term','expr',1,'p_expr_term','skeleton.py',257),
  ('term -> term MULT factor','term',3,'p_term_mult','skeleton.py',261),
  ('term -> term DIV factor','term',3,'p_term_div','skeleton.py',265),
  ('term -> factor','term',1,'p_term_factor','skeleton.py',273),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_expr','skeleton.py',277),
  ('factor -> NUM','factor',1,'p_factor_num','skeleton.py',281),
  ('factor -> VAR','factor',1,'p_factor_var','skeleton.py',285),
  ('statement -> COUT LESS LESS VAR LESS LESS ENDL SEMICOLON','statement',8,'p_statement_print','skeleton.py',291),
  ('statement -> COUT LESS LESS SENTENCE LESS LESS ENDL SEMICOLON','statement',8,'p_statement_print','skeleton.py',292),
  ('statement -> COUT LESS LESS SENTENCE LESS LESS VAR LESS LESS ENDL SEMICOLON','statement',11,'p_statement_print','skeleton.py',293),
]
