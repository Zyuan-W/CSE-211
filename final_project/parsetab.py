
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COUT DIV ELSE ENDL EQUALS FOR GREATER IF IGNORE_CONTENT INT LB LESS LPAREN MINUS MULT NUM PLUS PRINT RB RETURN RPAREN SEMICOLON SENTENCE VAR WHILEprogram : statement\n               | program statement\n    statement : INT VAR LPAREN args RPAREN SEMICOLON\n    \n    args : INT VAR\n         | INT VAR COMMA args\n    \n    statement : INT VAR SEMICOLON\n              | INT VAR EQUALS NUM SEMICOLON\n              | INT VAR EQUALS VAR SEMICOLON\n              | INT VAR EQUALS expr SEMICOLON\n    \n    statement : VAR EQUALS NUM SEMICOLON\n    \n    statement : IF LPAREN condition RPAREN\n    \n    statement : ELSE\n    \n    statement : FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN\n    \n    statement : WHILE LPAREN condition RPAREN\n    \n    condition : VAR GREATER NUM\n                | VAR LESS NUM\n                | VAR GREATER VAR\n                | VAR LESS VAR\n                | VAR EQUALS EQUALS NUM\n    \n    statement : RETURN expr SEMICOLON\n    \n    for_update : VAR PLUS PLUS\n               \n    \n    statement : LB               \n    \n    statement : RB             \n    \n    expr : expr PLUS term\n    \n    expr : expr PLUS VAR\n    expr : expr MINUS termexpr : expr MINUS VARexpr : termterm : term MULT factorterm : term DIV factorterm : factorfactor : LPAREN expr RPARENfactor : NUMfactor : VAR\n    statement : COUT LESS LESS VAR LESS LESS ENDL SEMICOLON\n                | COUT LESS LESS SENTENCE LESS LESS ENDL SEMICOLON\n                | COUT LESS LESS SENTENCE LESS LESS VAR LESS LESS ENDL SEMICOLON\n    '
    
_lr_action_items = {'INT':([0,1,2,6,10,11,13,17,26,27,34,46,47,52,64,65,66,75,76,87,88,96,97,],[3,3,-1,-12,-22,-23,-2,32,41,-6,-20,-10,-11,-14,-8,-7,-9,41,-3,-35,-36,-13,-37,]),'VAR':([0,1,2,3,6,9,10,11,13,16,18,23,27,28,32,34,35,36,37,38,40,41,46,47,48,49,52,64,65,66,76,80,82,87,88,90,96,97,],[4,4,-1,14,-12,21,-22,-23,-2,31,31,21,-6,43,51,-20,54,56,21,21,60,62,-10,-11,67,69,-14,-8,-7,-9,-3,85,31,-35,-36,92,-13,-37,]),'IF':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[5,5,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'ELSE':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[6,6,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'FOR':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[7,7,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'WHILE':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[8,8,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'RETURN':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[9,9,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'LB':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[10,10,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'RB':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[11,11,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'COUT':([0,1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[12,12,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'$end':([1,2,6,10,11,13,27,34,46,47,52,64,65,66,76,87,88,96,97,],[0,-1,-12,-22,-23,-2,-6,-20,-10,-11,-14,-8,-7,-9,-3,-35,-36,-13,-37,]),'EQUALS':([4,14,31,50,51,],[15,28,50,71,72,]),'LPAREN':([5,7,8,9,14,23,28,35,36,37,38,],[16,17,18,23,26,23,23,23,23,23,23,]),'NUM':([9,15,23,28,35,36,37,38,48,49,71,72,],[24,29,24,44,24,24,24,24,68,70,77,78,]),'LESS':([12,25,31,60,61,73,74,85,89,],[25,40,49,73,74,79,80,89,91,]),'SEMICOLON':([14,19,20,21,22,24,29,43,44,45,53,54,55,56,57,58,59,63,67,68,69,70,77,78,83,84,86,94,],[27,34,-28,-34,-31,-33,46,64,65,66,-24,-25,-26,-27,-29,-30,-32,76,-17,-15,-18,-16,-19,82,87,88,90,97,]),'PLUS':([19,20,21,22,24,39,43,44,45,53,54,55,56,57,58,59,92,95,],[35,-28,-34,-31,-33,35,-34,-33,35,-24,-25,-26,-27,-29,-30,-32,95,98,]),'MINUS':([19,20,21,22,24,39,43,44,45,53,54,55,56,57,58,59,],[36,-28,-34,-31,-33,36,-34,-33,36,-24,-25,-26,-27,-29,-30,-32,]),'RPAREN':([20,21,22,24,30,33,39,42,53,54,55,56,57,58,59,62,67,68,69,70,77,81,93,98,],[-28,-34,-31,-33,47,52,59,63,-24,-25,-26,-27,-29,-30,-32,-4,-17,-15,-18,-16,-19,-5,96,-21,]),'MULT':([20,21,22,24,43,44,53,54,55,56,57,58,59,],[37,-34,-31,-33,-34,-33,37,-34,37,-34,-29,-30,-32,]),'DIV':([20,21,22,24,43,44,53,54,55,56,57,58,59,],[38,-34,-31,-33,-34,-33,38,-34,38,-34,-29,-30,-32,]),'GREATER':([31,],[48,]),'SENTENCE':([40,],[61,]),'COMMA':([62,],[75,]),'ENDL':([79,80,91,],[83,84,94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,],[2,13,]),'expr':([9,23,28,],[19,39,45,]),'term':([9,23,28,35,36,],[20,20,20,53,55,]),'factor':([9,23,28,35,36,37,38,],[22,22,22,22,22,57,58,]),'condition':([16,18,82,],[30,33,86,]),'args':([26,75,],[42,81,]),'for_update':([90,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','skeleton.py',133),
  ('program -> program statement','program',2,'p_program','skeleton.py',134),
  ('statement -> INT VAR LPAREN args RPAREN SEMICOLON','statement',6,'p_func_decl','skeleton.py',143),
  ('args -> INT VAR','args',2,'p_func_args','skeleton.py',149),
  ('args -> INT VAR COMMA args','args',4,'p_func_args','skeleton.py',150),
  ('statement -> INT VAR SEMICOLON','statement',3,'p_statement_decl','skeleton.py',161),
  ('statement -> INT VAR EQUALS NUM SEMICOLON','statement',5,'p_statement_decl','skeleton.py',162),
  ('statement -> INT VAR EQUALS VAR SEMICOLON','statement',5,'p_statement_decl','skeleton.py',163),
  ('statement -> INT VAR EQUALS expr SEMICOLON','statement',5,'p_statement_decl','skeleton.py',164),
  ('statement -> VAR EQUALS NUM SEMICOLON','statement',4,'p_statement_assign','skeleton.py',174),
  ('statement -> IF LPAREN condition RPAREN','statement',4,'p_statement_if','skeleton.py',181),
  ('statement -> ELSE','statement',1,'p_statement_if_else','skeleton.py',187),
  ('statement -> FOR LPAREN INT VAR EQUALS NUM SEMICOLON condition SEMICOLON for_update RPAREN','statement',11,'p_statement_for','skeleton.py',194),
  ('statement -> WHILE LPAREN condition RPAREN','statement',4,'p_statement_while','skeleton.py',202),
  ('condition -> VAR GREATER NUM','condition',3,'p_condition','skeleton.py',210),
  ('condition -> VAR LESS NUM','condition',3,'p_condition','skeleton.py',211),
  ('condition -> VAR GREATER VAR','condition',3,'p_condition','skeleton.py',212),
  ('condition -> VAR LESS VAR','condition',3,'p_condition','skeleton.py',213),
  ('condition -> VAR EQUALS EQUALS NUM','condition',4,'p_condition','skeleton.py',214),
  ('statement -> RETURN expr SEMICOLON','statement',3,'p_statement_return','skeleton.py',225),
  ('for_update -> VAR PLUS PLUS','for_update',3,'p_for_update','skeleton.py',233),
  ('statement -> LB','statement',1,'p_statement_lb','skeleton.py',240),
  ('statement -> RB','statement',1,'p_statement_rb','skeleton.py',246),
  ('expr -> expr PLUS term','expr',3,'p_expr_plus','skeleton.py',252),
  ('expr -> expr PLUS VAR','expr',3,'p_expr_plus_var','skeleton.py',259),
  ('expr -> expr MINUS term','expr',3,'p_expr_minus','skeleton.py',265),
  ('expr -> expr MINUS VAR','expr',3,'p_expr_minus_var','skeleton.py',269),
  ('expr -> term','expr',1,'p_expr_term','skeleton.py',273),
  ('term -> term MULT factor','term',3,'p_term_mult','skeleton.py',277),
  ('term -> term DIV factor','term',3,'p_term_div','skeleton.py',281),
  ('term -> factor','term',1,'p_term_factor','skeleton.py',289),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_expr','skeleton.py',293),
  ('factor -> NUM','factor',1,'p_factor_num','skeleton.py',297),
  ('factor -> VAR','factor',1,'p_factor_var','skeleton.py',301),
  ('statement -> COUT LESS LESS VAR LESS LESS ENDL SEMICOLON','statement',8,'p_statement_print','skeleton.py',307),
  ('statement -> COUT LESS LESS SENTENCE LESS LESS ENDL SEMICOLON','statement',8,'p_statement_print','skeleton.py',308),
  ('statement -> COUT LESS LESS SENTENCE LESS LESS VAR LESS LESS ENDL SEMICOLON','statement',11,'p_statement_print','skeleton.py',309),
]
